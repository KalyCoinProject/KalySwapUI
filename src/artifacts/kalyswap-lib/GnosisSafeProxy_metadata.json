{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_singleton",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			}
		],
		"devdoc": {
			"author": "Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "Constructor function sets address of singleton contract.",
					"params": {
						"_singleton": "Singleton address."
					}
				}
			},
			"title": "GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/GnosisSafeProxyFactory.sol": "GnosisSafeProxy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/GnosisSafeProxyFactory.sol": {
			"keccak256": "0x14e4004ba0cefaf58b9898bf6eb9f692dbac0c78f87f98e4d43b08ada388aef7",
			"license": "LGPL-3.0-only",
			"urls": [
				"bzz-raw://e3a695c1037665fc4c739b8399b1110eb43416af6737cc09fe90c255a1e0b0fc",
				"dweb:/ipfs/QmShCNxPncmJQkX4pz3RCkMVKxTZXQf7CuGPE7TCr3tv9x"
			]
		}
	},
	"version": 1
}