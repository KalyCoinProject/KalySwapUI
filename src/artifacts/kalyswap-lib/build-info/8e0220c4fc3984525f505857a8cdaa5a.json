{
	"id": "8e0220c4fc3984525f505857a8cdaa5a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"CoreContracts/StakingRewards.sol": {
				"content": "// Sources flattened with hardhat v2.6.3 https://hardhat.org\n\n// File openzeppelin-contracts-legacy/GSN/Context.sol@v3.3.0\n\n// SPDX-License-Identifier: MIT\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n\n// File openzeppelin-contracts-legacy/access/Ownable.sol@v3.3.0\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n\n// File openzeppelin-contracts-legacy/math/Math.sol@v3.3.0\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n\n\n// File openzeppelin-contracts-legacy/math/SafeMath.sol@v3.3.0\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n\n// File openzeppelin-contracts-legacy/token/ERC20/IERC20.sol@v3.3.0\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n// File openzeppelin-contracts-legacy/utils/Address.sol@v3.3.0\n\n\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n\n// File openzeppelin-contracts-legacy/token/ERC20/SafeERC20.sol@v3.3.0\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n\n// File openzeppelin-contracts-legacy/utils/ReentrancyGuard.sol@v3.3.0\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n\n// File @kalycoinproject/exchange-contracts/contracts/kalyswap-core/interfaces/IKalyswapERC20.sol@v1.0.2\n\npragma solidity >=0.5.0;\n\ninterface IKalyswapERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n\n\n// File contracts/StakingRewards.sol\n\npragma solidity ^0.7.6;\n\n\n\n\n\n// https://docs.synthetix.io/contracts/source/contracts/stakingrewards\ncontract StakingRewards is ReentrancyGuard, Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    /* ========== STATE VARIABLES ========== */\n\n    IERC20 public rewardsToken;\n    IERC20 public stakingToken;\n    uint256 public periodFinish = 0;\n    uint256 public rewardRate = 0;\n    uint256 public rewardsDuration = 1 days;\n    uint256 public lastUpdateTime;\n    uint256 public rewardPerTokenStored;\n\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    mapping(address => uint256) public rewards;\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor(\n        address _rewardsToken,\n        address _stakingToken\n    ) public {\n        rewardsToken = IERC20(_rewardsToken);\n        stakingToken = IERC20(_stakingToken);\n    }\n\n    /* ========== VIEWS ========== */\n\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    function lastTimeRewardApplicable() public view returns (uint256) {\n        return Math.min(block.timestamp, periodFinish);\n    }\n\n    function rewardPerToken() public view returns (uint256) {\n        if (_totalSupply == 0) {\n            return rewardPerTokenStored;\n        }\n        return\n            rewardPerTokenStored.add(\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\n            );\n    }\n\n    function earned(address account) public view returns (uint256) {\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\n    }\n\n    function getRewardForDuration() external view returns (uint256) {\n        return rewardRate.mul(rewardsDuration);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n\n        // permit\n        IKalyswapERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s);\n\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        stakingToken.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function getReward() public nonReentrant updateReward(msg.sender) {\n        uint256 reward = rewards[msg.sender];\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            rewardsToken.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    function exit() external {\n        withdraw(_balances[msg.sender]);\n        getReward();\n    }\n\n    /* ========== RESTRICTED FUNCTIONS ========== */\n\n    // Always needs to update the balance of the contract when calling this method\n    function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {\n        if (block.timestamp >= periodFinish) {\n            rewardRate = reward.div(rewardsDuration);\n        } else {\n            uint256 remaining = periodFinish.sub(block.timestamp);\n            uint256 leftover = remaining.mul(rewardRate);\n            rewardRate = reward.add(leftover).div(rewardsDuration);\n        }\n\n        // Ensure the provided reward amount is not more than the balance in the contract.\n        // This keeps the reward rate in the right range, preventing overflows due to\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\n        uint balance = rewardsToken.balanceOf(address(this));\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\n\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(rewardsDuration);\n        emit RewardAdded(reward);\n    }\n\n    // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner nonReentrant {\n        require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\");\n        IERC20(tokenAddress).safeTransfer(owner(), tokenAmount);\n        emit Recovered(tokenAddress, tokenAmount);\n    }\n\n    function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\n        require(\n            block.timestamp > periodFinish,\n            \"Previous rewards period must be complete before changing the duration for the new period\"\n        );\n        require(_rewardsDuration > 0, \"Reward duration can't be zero\");\n        rewardsDuration = _rewardsDuration;\n        emit RewardsDurationUpdated(rewardsDuration);\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            rewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n        }\n        _;\n    }\n\n    /* ========== EVENTS ========== */\n\n    event RewardAdded(uint256 reward);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n    event RewardsDurationUpdated(uint256 newDuration);\n    event Recovered(address token, uint256 amount);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CoreContracts/StakingRewards.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/StakingRewards.sol\":12307:19011  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/StakingRewards.sol\":12307:19011  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203c2ca036c5d45a3fefe275d4ff34a60c55a650a82a4ec0a3321d83a68c3f2a8c64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c2ca036c5d45a3fefe275d4ff34a60c55a650a82a4ec0a3321d83a68c3f2a8c64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x2C LOG0 CALLDATASIZE 0xC5 0xD4 GAS EXTCODEHASH 0xEF 0xE2 PUSH22 0xD4FF34A60C55A650A82A4EC0A3321D83A68C3F2A8C64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "12307:6704:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c2ca036c5d45a3fefe275d4ff34a60c55a650a82a4ec0a3321d83a68c3f2a8c64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x2C LOG0 CALLDATASIZE 0xC5 0xD4 GAS EXTCODEHASH 0xEF 0xE2 PUSH22 0xD4FF34A60C55A650A82A4EC0A3321D83A68C3F2A8C64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "12307:6704:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12307,
									"end": 19011,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c2ca036c5d45a3fefe275d4ff34a60c55a650a82a4ec0a3321d83a68c3f2a8c64736f6c63430007060033",
									".code": [
										{
											"begin": 12307,
											"end": 19011,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 19011,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IKalyswapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"IKalyswapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/StakingRewards.sol\":3483:4151  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/StakingRewards.sol\":3483:4151  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbd472b5eedfa0d6a8a34f37c0888118218fbac3d4001ebdaa78f8c8868f604b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd472b5eedfa0d6a8a34f37c0888118218fbac3d4001ebdaa78f8c8868f604b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD4 PUSH19 0xB5EEDFA0D6A8A34F37C0888118218FBAC3D400 0x1E 0xBD 0xAA PUSH25 0xF8C8868F604B64736F6C634300070600330000000000000000 ",
							"sourceMap": "3483:668:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd472b5eedfa0d6a8a34f37c0888118218fbac3d4001ebdaa78f8c8868f604b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD4 PUSH19 0xB5EEDFA0D6A8A34F37C0888118218FBAC3D400 0x1E 0xBD 0xAA PUSH25 0xF8C8868F604B64736F6C634300070600330000000000000000 ",
							"sourceMap": "3483:668:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3483,
									"end": 4151,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbd472b5eedfa0d6a8a34f37c0888118218fbac3d4001ebdaa78f8c8868f604b64736f6c63430007060033",
									".code": [
										{
											"begin": 3483,
											"end": 4151,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 4151,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "CoreContracts/StakingRewards.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 935,
								"contract": "CoreContracts/StakingRewards.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/StakingRewards.sol\":19581:22685  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/StakingRewards.sol\":19581:22685  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122098472fe97987c33d125dd81850fb30b70d71f68acb71a72f64578ebbde3b13cc64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098472fe97987c33d125dd81850fb30b70d71f68acb71a72f64578ebbde3b13cc64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SELFBALANCE 0x2F 0xE9 PUSH26 0x87C33D125DD81850FB30B70D71F68ACB71A72F64578EBBDE3B13 0xCC PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "19581:3104:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098472fe97987c33d125dd81850fb30b70d71f68acb71a72f64578ebbde3b13cc64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SELFBALANCE 0x2F 0xE9 PUSH26 0x87C33D125DD81850FB30B70D71F68ACB71A72F64578EBBDE3B13 0xCC PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "19581:3104:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 22685,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098472fe97987c33d125dd81850fb30b70d71f68acb71a72f64578ebbde3b13cc64736f6c63430007060033",
									".code": [
										{
											"begin": 19581,
											"end": 22685,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 22685,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/StakingRewards.sol\":4815:9393  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/StakingRewards.sol\":4815:9393  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc4b35e4ea4b40f1a35ebb3908ae7a3fe03deb91a38a85439bcdc4759e301f9b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc4b35e4ea4b40f1a35ebb3908ae7a3fe03deb91a38a85439bcdc4759e301f9b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x4B CALLDATALOAD 0xE4 0xEA 0x4B BLOCKHASH CALL LOG3 0x5E 0xBB CODECOPY ADDMOD 0xAE PUSH27 0x3FE03DEB91A38A85439BCDC4759E301F9B64736F6C634300070600 CALLER ",
							"sourceMap": "4815:4578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc4b35e4ea4b40f1a35ebb3908ae7a3fe03deb91a38a85439bcdc4759e301f9b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x4B CALLDATALOAD 0xE4 0xEA 0x4B BLOCKHASH CALL LOG3 0x5E 0xBB CODECOPY ADDMOD 0xAE PUSH27 0x3FE03DEB91A38A85439BCDC4759E301F9B64736F6C634300070600 CALLER ",
							"sourceMap": "4815:4578:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4815,
									"end": 9393,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc4b35e4ea4b40f1a35ebb3908ae7a3fe03deb91a38a85439bcdc4759e301f9b64736f6c63430007060033",
									".code": [
										{
											"begin": 4815,
											"end": 9393,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 9393,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDuration",
									"type": "uint256"
								}
							],
							"name": "RewardsDurationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardsDuration",
									"type": "uint256"
								}
							],
							"name": "setRewardsDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "stakeWithPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/StakingRewards.sol\":26736:33158  contract StakingRewards is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"CoreContracts/StakingRewards.sol\":27002:27003  0 */\n  0x00\n    /* \"CoreContracts/StakingRewards.sol\":26972:27003  uint256 public periodFinish = 0 */\n  0x04\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":27037:27038  0 */\n  0x00\n    /* \"CoreContracts/StakingRewards.sol\":27009:27038  uint256 public rewardRate = 0 */\n  0x05\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":27077:27083  1 days */\n  0x015180\n    /* \"CoreContracts/StakingRewards.sol\":27044:27083  uint256 public rewardsDuration = 1 days */\n  0x06\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":27409:27595  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"CoreContracts/StakingRewards.sol\":24374:24375  1 */\n  0x01\n    /* \"CoreContracts/StakingRewards.sol\":24489:24496  _status */\n  0x00\n    /* \"CoreContracts/StakingRewards.sol\":24489:24511  _status = _NOT_ENTERED */\n  swap1\n  dup2\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":1973:1985  _msgSender() */\n  tag_8\n    /* \"CoreContracts/StakingRewards.sol\":1973:1983  _msgSender */\n  tag_9\n    /* \"CoreContracts/StakingRewards.sol\":1973:1985  _msgSender() */\n  jump\t// in\ntag_8:\n    /* \"CoreContracts/StakingRewards.sol\":1995:2001  _owner */\n  0x01\n    /* \"CoreContracts/StakingRewards.sol\":1995:2013  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":2028:2071  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"CoreContracts/StakingRewards.sol\":1995:2013  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"CoreContracts/StakingRewards.sol\":2028:2071  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n  pop\n    /* \"CoreContracts/StakingRewards.sol\":27506:27518  rewardsToken */\n  0x02\n    /* \"CoreContracts/StakingRewards.sol\":27506:27542  rewardsToken = IERC20(_rewardsToken) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":27552:27564  stakingToken */\n  0x03\n    /* \"CoreContracts/StakingRewards.sol\":27552:27588  stakingToken = IERC20(_stakingToken) */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"CoreContracts/StakingRewards.sol\":26736:33158  contract StakingRewards is ReentrancyGuard, Ownable {... */\n  jump(tag_11)\n    /* \"CoreContracts/StakingRewards.sol\":723:827  function _msgSender() internal view virtual returns (address payable) {... */\ntag_9:\n    /* \"CoreContracts/StakingRewards.sol\":810:820  msg.sender */\n  caller\n    /* \"CoreContracts/StakingRewards.sol\":723:827  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"CoreContracts/StakingRewards.sol\":26736:33158  contract StakingRewards is ReentrancyGuard, Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/StakingRewards.sol\":26736:33158  contract StakingRewards is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8980f11f\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xcd3daf9d\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe9fad8ee\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xecd9ba82\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xcd3daf9d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xa694fc3a\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcc1a378f\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x8980f11f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x3c6b16ab\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x3c6b16ab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x1c1f78eb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CoreContracts/StakingRewards.sol\":28316:28512  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_38\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"CoreContracts/StakingRewards.sol\":27229:27271  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27640:27731  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_43\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":28518:28637  function getRewardForDuration() external view returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_45\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":29617:29968  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      calldataload\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"CoreContracts/StakingRewards.sol\":27044:27083  uint256 public rewardsDuration = 1 days */\n    tag_8:\n      tag_36\n      tag_50\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":30517:31567  function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      calldataload\n      tag_53\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":29974:30274  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_10:\n      tag_46\n      tag_55\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27737:27847  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_58\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":2777:2922  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_46\n      tag_60\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":26940:26966  IERC20 public stakingToken */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"CoreContracts/StakingRewards.sol\":27009:27038  uint256 public rewardRate = 0 */\n    tag_14:\n      tag_36\n      tag_64\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27853:27982  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_15:\n      tag_36\n      tag_66\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":31679:31992  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner nonReentrant {... */\n    tag_16:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27166:27223  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_17:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_72\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":2154:2231  function owner() public view returns (address) {... */\n    tag_18:\n      tag_61\n      tag_74\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":29248:29611  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_19:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      calldataload\n      tag_77\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27089:27118  uint256 public lastUpdateTime */\n    tag_20:\n      tag_36\n      tag_79\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":31998:32423  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {... */\n    tag_21:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      calldataload\n      tag_82\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27988:28310  function rewardPerToken() public view returns (uint256) {... */\n    tag_22:\n      tag_36\n      tag_84\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":26908:26934  IERC20 public rewardsToken */\n    tag_23:\n      tag_61\n      tag_86\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":27124:27159  uint256 public rewardPerTokenStored */\n    tag_24:\n      tag_36\n      tag_88\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":30280:30374  function exit() external {... */\n    tag_25:\n      tag_46\n      tag_90\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":26972:27003  uint256 public periodFinish = 0 */\n    tag_26:\n      tag_36\n      tag_92\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":28695:29242  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {... */\n    tag_27:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x40\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      add\n      calldataload\n      tag_95\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":3071:3311  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_98\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":28316:28512  function earned(address account) public view returns (uint256) {... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":28488:28504  rewards[account] */\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":28370:28377  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":28488:28504  rewards[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":28488:28495  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":28488:28504  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":28440:28462  userRewardPerTokenPaid */\n      0x09\n        /* \"CoreContracts/StakingRewards.sol\":28440:28471  userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":28396:28505  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_100\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":28488:28504  rewards[account] */\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28396:28483  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_101\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28478:28482  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28396:28473  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_102\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28419:28472  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_103\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28419:28435  rewardPerToken() */\n      tag_104\n        /* \"CoreContracts/StakingRewards.sol\":28419:28433  rewardPerToken */\n      tag_84\n        /* \"CoreContracts/StakingRewards.sol\":28419:28435  rewardPerToken() */\n      jump\t// in\n    tag_104:\n        /* \"CoreContracts/StakingRewards.sol\":28419:28439  rewardPerToken().sub */\n      swap1\n      tag_105\n        /* \"CoreContracts/StakingRewards.sol\":28419:28472  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":28396:28414  _balances[account] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":28396:28405  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":28396:28414  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28396:28418  _balances[account].mul */\n      tag_106\n        /* \"CoreContracts/StakingRewards.sol\":28396:28473  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      jump\t// in\n    tag_102:\n        /* \"CoreContracts/StakingRewards.sol\":28396:28477  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      swap1\n      tag_107\n        /* \"CoreContracts/StakingRewards.sol\":28396:28483  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      jump\t// in\n    tag_101:\n        /* \"CoreContracts/StakingRewards.sol\":28396:28487  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      swap1\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":28396:28505  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      jump\t// in\n    tag_100:\n        /* \"CoreContracts/StakingRewards.sol\":28389:28505  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap3\n        /* \"CoreContracts/StakingRewards.sol\":28316:28512  function earned(address account) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27229:27271  mapping(address => uint256) public rewards */\n    tag_41:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27640:27731  function totalSupply() external view returns (uint256) {... */\n    tag_43:\n        /* \"CoreContracts/StakingRewards.sol\":27712:27724  _totalSupply */\n      sload(0x0b)\n        /* \"CoreContracts/StakingRewards.sol\":27640:27731  function totalSupply() external view returns (uint256) {... */\n    tag_109:\n      swap1\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":28518:28637  function getRewardForDuration() external view returns (uint256) {... */\n    tag_45:\n        /* \"CoreContracts/StakingRewards.sol\":28573:28580  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":28599:28630  rewardRate.mul(rewardsDuration) */\n      tag_111\n        /* \"CoreContracts/StakingRewards.sol\":28614:28629  rewardsDuration */\n      sload(0x06)\n        /* \"CoreContracts/StakingRewards.sol\":28599:28609  rewardRate */\n      sload(0x05)\n        /* \"CoreContracts/StakingRewards.sol\":28599:28613  rewardRate.mul */\n      tag_106\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28599:28630  rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"CoreContracts/StakingRewards.sol\":28592:28630  return rewardRate.mul(rewardsDuration) */\n      swap1\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":28518:28637  function getRewardForDuration() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":29617:29968  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_48:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25006:25013  _status */\n      sload(0x00)\n        /* \"CoreContracts/StakingRewards.sol\":25006:25025  _status != _ENTERED */\n      eq\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":24998:25061  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_113\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_113:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25136:25143  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25136:25154  _status = _ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29684:29694  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      tag_115\n        /* \"CoreContracts/StakingRewards.sol\":32544:32558  rewardPerToken */\n      tag_84\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      jump\t// in\n    tag_115:\n        /* \"CoreContracts/StakingRewards.sol\":32521:32541  rewardPerTokenStored */\n      0x08\n        /* \"CoreContracts/StakingRewards.sol\":32521:32560  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      tag_116\n        /* \"CoreContracts/StakingRewards.sol\":32587:32611  lastTimeRewardApplicable */\n      tag_66\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_116:\n        /* \"CoreContracts/StakingRewards.sol\":32570:32584  lastUpdateTime */\n      0x07\n        /* \"CoreContracts/StakingRewards.sol\":32570:32613  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32627:32648  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n      tag_117\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      tag_118\n        /* \"CoreContracts/StakingRewards.sol\":32690:32697  account */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":32683:32689  earned */\n      tag_38\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      jump\t// in\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":32664:32671  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32664:32698  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32746:32766  rewardPerTokenStored */\n      sload(0x08)\n        /* \"CoreContracts/StakingRewards.sol\":32712:32734  userRewardPerTokenPaid */\n      0x09\n        /* \"CoreContracts/StakingRewards.sol\":32712:32743  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32712:32766  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n    tag_117:\n        /* \"CoreContracts/StakingRewards.sol\":29723:29724  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":29714:29720  amount */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":29714:29724  amount > 0 */\n      gt\n        /* \"CoreContracts/StakingRewards.sol\":29706:29746  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_120\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_120:\n        /* \"CoreContracts/StakingRewards.sol\":29771:29783  _totalSupply */\n      sload(0x0b)\n        /* \"CoreContracts/StakingRewards.sol\":29771:29795  _totalSupply.sub(amount) */\n      tag_121\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":29788:29794  amount */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":29771:29787  _totalSupply.sub */\n      tag_105\n        /* \"CoreContracts/StakingRewards.sol\":29771:29795  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_121:\n        /* \"CoreContracts/StakingRewards.sol\":29756:29768  _totalSupply */\n      0x0b\n        /* \"CoreContracts/StakingRewards.sol\":29756:29795  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29839:29849  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":29829:29850  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":29829:29838  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":29829:29850  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":29829:29862  _balances[msg.sender].sub(amount) */\n      tag_122\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":29855:29861  amount */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":29829:29854  _balances[msg.sender].sub */\n      tag_105\n        /* \"CoreContracts/StakingRewards.sol\":29829:29862  _balances[msg.sender].sub(amount) */\n      jump\t// in\n    tag_122:\n        /* \"CoreContracts/StakingRewards.sol\":29815:29825  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":29805:29826  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":29805:29814  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":29805:29826  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":29805:29862  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29872:29884  stakingToken */\n      sload(0x03)\n        /* \"CoreContracts/StakingRewards.sol\":29872:29917  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_123\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":29872:29884  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":29910:29916  amount */\n      dup5\n        /* \"CoreContracts/StakingRewards.sol\":29872:29897  stakingToken.safeTransfer */\n      tag_124\n        /* \"CoreContracts/StakingRewards.sol\":29872:29917  stakingToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_123:\n        /* \"CoreContracts/StakingRewards.sol\":29932:29961  Withdrawn(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":29942:29952  msg.sender */\n      caller\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":29932:29961  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":24374:24375  1 */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":25309:25316  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25309:25331  _status = _NOT_ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29617:29968  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27044:27083  uint256 public rewardsDuration = 1 days */\n    tag_50:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":30517:31567  function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {... */\n    tag_53:\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      tag_126\n        /* \"CoreContracts/StakingRewards.sol\":2368:2378  _msgSender */\n      tag_127\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"CoreContracts/StakingRewards.sol\":2358:2364  _owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":2358:2380  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":2350:2417  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_128:\n        /* \"CoreContracts/StakingRewards.sol\":30601:30602  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      tag_130\n        /* \"CoreContracts/StakingRewards.sol\":32544:32558  rewardPerToken */\n      tag_84\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      jump\t// in\n    tag_130:\n        /* \"CoreContracts/StakingRewards.sol\":32521:32541  rewardPerTokenStored */\n      0x08\n        /* \"CoreContracts/StakingRewards.sol\":32521:32560  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      tag_131\n        /* \"CoreContracts/StakingRewards.sol\":32587:32611  lastTimeRewardApplicable */\n      tag_66\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_131:\n        /* \"CoreContracts/StakingRewards.sol\":32570:32584  lastUpdateTime */\n      0x07\n        /* \"CoreContracts/StakingRewards.sol\":32570:32613  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32627:32648  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n      tag_132\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      tag_133\n        /* \"CoreContracts/StakingRewards.sol\":32690:32697  account */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":32683:32689  earned */\n      tag_38\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":32664:32671  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32664:32698  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32746:32766  rewardPerTokenStored */\n      sload(0x08)\n        /* \"CoreContracts/StakingRewards.sol\":32712:32734  userRewardPerTokenPaid */\n      0x09\n        /* \"CoreContracts/StakingRewards.sol\":32712:32743  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32712:32766  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n    tag_132:\n        /* \"CoreContracts/StakingRewards.sol\":30638:30650  periodFinish */\n      sload(0x04)\n        /* \"CoreContracts/StakingRewards.sol\":30619:30634  block.timestamp */\n      timestamp\n        /* \"CoreContracts/StakingRewards.sol\":30619:30650  block.timestamp >= periodFinish */\n      lt\n        /* \"CoreContracts/StakingRewards.sol\":30615:30927  if (block.timestamp >= periodFinish) {... */\n      tag_135\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":30690:30705  rewardsDuration */\n      sload(0x06)\n        /* \"CoreContracts/StakingRewards.sol\":30679:30706  reward.div(rewardsDuration) */\n      tag_136\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30679:30685  reward */\n      dup4\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30679:30689  reward.div */\n      tag_107\n        /* \"CoreContracts/StakingRewards.sol\":30679:30706  reward.div(rewardsDuration) */\n      jump\t// in\n    tag_136:\n        /* \"CoreContracts/StakingRewards.sol\":30666:30676  rewardRate */\n      0x05\n        /* \"CoreContracts/StakingRewards.sol\":30666:30706  rewardRate = reward.div(rewardsDuration) */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":30615:30927  if (block.timestamp >= periodFinish) {... */\n      jump(tag_137)\n    tag_135:\n        /* \"CoreContracts/StakingRewards.sol\":30757:30769  periodFinish */\n      sload(0x04)\n        /* \"CoreContracts/StakingRewards.sol\":30737:30754  uint256 remaining */\n      0x00\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30757:30790  periodFinish.sub(block.timestamp) */\n      tag_138\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30774:30789  block.timestamp */\n      timestamp\n        /* \"CoreContracts/StakingRewards.sol\":30757:30773  periodFinish.sub */\n      tag_105\n        /* \"CoreContracts/StakingRewards.sol\":30757:30790  periodFinish.sub(block.timestamp) */\n      jump\t// in\n    tag_138:\n        /* \"CoreContracts/StakingRewards.sol\":30737:30790  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":30804:30820  uint256 leftover */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":30823:30848  remaining.mul(rewardRate) */\n      tag_139\n        /* \"CoreContracts/StakingRewards.sol\":30837:30847  rewardRate */\n      sload(0x05)\n        /* \"CoreContracts/StakingRewards.sol\":30823:30832  remaining */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":30823:30836  remaining.mul */\n      tag_106\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30823:30848  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"CoreContracts/StakingRewards.sol\":30900:30915  rewardsDuration */\n      sload(0x06)\n        /* \"CoreContracts/StakingRewards.sol\":30804:30848  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      swap2\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":30875:30916  reward.add(leftover).div(rewardsDuration) */\n      tag_140\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30875:30895  reward.add(leftover) */\n      tag_102\n        /* \"CoreContracts/StakingRewards.sol\":30875:30881  reward */\n      dup7\n        /* \"CoreContracts/StakingRewards.sol\":30804:30848  uint256 leftover = remaining.mul(rewardRate) */\n      dup5\n        /* \"CoreContracts/StakingRewards.sol\":30875:30885  reward.add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":30875:30895  reward.add(leftover) */\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":30875:30916  reward.add(leftover).div(rewardsDuration) */\n    tag_140:\n        /* \"CoreContracts/StakingRewards.sol\":30862:30872  rewardRate */\n      0x05\n        /* \"CoreContracts/StakingRewards.sol\":30862:30916  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      sstore\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":30615:30927  if (block.timestamp >= periodFinish) {... */\n    tag_137:\n        /* \"CoreContracts/StakingRewards.sol\":31296:31308  rewardsToken */\n      sload(0x02)\n        /* \"CoreContracts/StakingRewards.sol\":31296:31333  rewardsToken.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":31327:31331  this */\n      address\n        /* \"CoreContracts/StakingRewards.sol\":31296:31333  rewardsToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":31281:31293  uint balance */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":31296:31308  rewardsToken */\n      and\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":31296:31318  rewardsToken.balanceOf */\n      0x70a08231\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":31296:31333  rewardsToken.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":31296:31308  rewardsToken */\n      dup7\n        /* \"CoreContracts/StakingRewards.sol\":31296:31333  rewardsToken.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":31377:31392  rewardsDuration */\n      sload(0x06)\n        /* \"CoreContracts/StakingRewards.sol\":31296:31333  rewardsToken.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":31365:31393  balance.div(rewardsDuration) */\n      tag_146\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":31296:31333  rewardsToken.balanceOf(address(this)) */\n      dup3\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":31365:31376  balance.div */\n      tag_107\n        /* \"CoreContracts/StakingRewards.sol\":31365:31393  balance.div(rewardsDuration) */\n      jump\t// in\n    tag_146:\n        /* \"CoreContracts/StakingRewards.sol\":31351:31361  rewardRate */\n      sload(0x05)\n        /* \"CoreContracts/StakingRewards.sol\":31351:31393  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":31343:31422  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_147\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_147:\n        /* \"CoreContracts/StakingRewards.sol\":31450:31465  block.timestamp */\n      timestamp\n        /* \"CoreContracts/StakingRewards.sol\":31433:31447  lastUpdateTime */\n      0x07\n        /* \"CoreContracts/StakingRewards.sol\":31433:31465  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":31510:31525  rewardsDuration */\n      sload(0x06)\n        /* \"CoreContracts/StakingRewards.sol\":31490:31526  block.timestamp.add(rewardsDuration) */\n      tag_148\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":31450:31465  block.timestamp */\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":31490:31509  block.timestamp.add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":31490:31526  block.timestamp.add(rewardsDuration) */\n      jump\t// in\n    tag_148:\n        /* \"CoreContracts/StakingRewards.sol\":31475:31487  periodFinish */\n      0x04\n        /* \"CoreContracts/StakingRewards.sol\":31475:31526  periodFinish = block.timestamp.add(rewardsDuration) */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":31541:31560  RewardAdded(reward) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"CoreContracts/StakingRewards.sol\":32786:32787  _ */\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":2427:2428  _ */\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":30517:31567  function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {... */\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":29974:30274  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_55:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25006:25013  _status */\n      sload(0x00)\n        /* \"CoreContracts/StakingRewards.sol\":25006:25025  _status != _ENTERED */\n      eq\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":24998:25061  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_150\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_150:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25136:25143  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25136:25154  _status = _ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":30028:30038  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      tag_152\n        /* \"CoreContracts/StakingRewards.sol\":32544:32558  rewardPerToken */\n      tag_84\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      jump\t// in\n    tag_152:\n        /* \"CoreContracts/StakingRewards.sol\":32521:32541  rewardPerTokenStored */\n      0x08\n        /* \"CoreContracts/StakingRewards.sol\":32521:32560  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      tag_153\n        /* \"CoreContracts/StakingRewards.sol\":32587:32611  lastTimeRewardApplicable */\n      tag_66\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_153:\n        /* \"CoreContracts/StakingRewards.sol\":32570:32584  lastUpdateTime */\n      0x07\n        /* \"CoreContracts/StakingRewards.sol\":32570:32613  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32627:32648  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n      tag_154\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      tag_155\n        /* \"CoreContracts/StakingRewards.sol\":32690:32697  account */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":32683:32689  earned */\n      tag_38\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":32664:32671  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32664:32698  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32746:32766  rewardPerTokenStored */\n      sload(0x08)\n        /* \"CoreContracts/StakingRewards.sol\":32712:32734  userRewardPerTokenPaid */\n      0x09\n        /* \"CoreContracts/StakingRewards.sol\":32712:32743  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32712:32766  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n    tag_154:\n        /* \"CoreContracts/StakingRewards.sol\":30075:30085  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":30050:30064  uint256 reward */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":30067:30086  rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":30067:30074  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":30067:30086  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":30100:30110  reward > 0 */\n      dup1\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":30096:30268  if (reward > 0) {... */\n      tag_157\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":30134:30144  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":30148:30149  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":30126:30145  rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":30126:30133  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":30126:30145  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":30126:30149  rewards[msg.sender] = 0 */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":30163:30175  rewardsToken */\n      sload(0x02)\n        /* \"CoreContracts/StakingRewards.sol\":30163:30208  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_158\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":30163:30175  rewardsToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30201:30207  reward */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":30163:30188  rewardsToken.safeTransfer */\n      tag_124\n        /* \"CoreContracts/StakingRewards.sol\":30163:30208  rewardsToken.safeTransfer(msg.sender, reward) */\n      jump\t// in\n    tag_158:\n        /* \"CoreContracts/StakingRewards.sol\":30227:30257  RewardPaid(msg.sender, reward) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":30238:30248  msg.sender */\n      caller\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":30227:30257  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"CoreContracts/StakingRewards.sol\":30096:30268  if (reward > 0) {... */\n    tag_157:\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":24374:24375  1 */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":25309:25316  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25309:25331  _status = _NOT_ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29974:30274  function getReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27737:27847  function balanceOf(address account) external view returns (uint256) {... */\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":27822:27840  _balances[account] */\n      and\n        /* \"CoreContracts/StakingRewards.sol\":27796:27803  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":27822:27840  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":27822:27831  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":27822:27840  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":27737:27847  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":2777:2922  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      tag_161\n        /* \"CoreContracts/StakingRewards.sol\":2368:2378  _msgSender */\n      tag_127\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"CoreContracts/StakingRewards.sol\":2358:2364  _owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":2358:2380  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":2350:2417  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_162\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_162:\n        /* \"CoreContracts/StakingRewards.sol\":2867:2873  _owner */\n      sload(0x01)\n        /* \"CoreContracts/StakingRewards.sol\":2846:2886  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"CoreContracts/StakingRewards.sol\":2883:2884  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":2867:2873  _owner */\n      and\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":2846:2886  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":2883:2884  0 */\n      dup4\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":2846:2886  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"CoreContracts/StakingRewards.sol\":2896:2902  _owner */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":2896:2915  _owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":2777:2922  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":26940:26966  IERC20 public stakingToken */\n    tag_62:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27009:27038  uint256 public rewardRate = 0 */\n    tag_64:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27853:27982  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_66:\n        /* \"CoreContracts/StakingRewards.sol\":27910:27917  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":27936:27975  Math.min(block.timestamp, periodFinish) */\n      tag_111\n        /* \"CoreContracts/StakingRewards.sol\":27945:27960  block.timestamp */\n      timestamp\n        /* \"CoreContracts/StakingRewards.sol\":27962:27974  periodFinish */\n      sload(0x04)\n        /* \"CoreContracts/StakingRewards.sol\":27936:27944  Math.min */\n      tag_166\n        /* \"CoreContracts/StakingRewards.sol\":27936:27975  Math.min(block.timestamp, periodFinish) */\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":31679:31992  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner nonReentrant {... */\n    tag_69:\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      tag_168\n        /* \"CoreContracts/StakingRewards.sol\":2368:2378  _msgSender */\n      tag_127\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"CoreContracts/StakingRewards.sol\":2358:2364  _owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":2358:2380  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":2350:2417  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_169:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25006:25013  _status */\n      sload(0x00)\n        /* \"CoreContracts/StakingRewards.sol\":25006:25025  _status != _ENTERED */\n      eq\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":24998:25061  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_171\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_171:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25136:25143  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25136:25154  _status = _ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":31818:31830  stakingToken */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":31794:31831  tokenAddress != address(stakingToken) */\n      dup4\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":31818:31830  stakingToken */\n      swap2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":31794:31831  tokenAddress != address(stakingToken) */\n      eq\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":31786:31869  require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"CoreContracts/StakingRewards.sol\":31879:31934  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      tag_174\n        /* \"CoreContracts/StakingRewards.sol\":31913:31920  owner() */\n      tag_175\n        /* \"CoreContracts/StakingRewards.sol\":31913:31918  owner */\n      tag_74\n        /* \"CoreContracts/StakingRewards.sol\":31913:31920  owner() */\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":31879:31912  IERC20(tokenAddress).safeTransfer */\n      dup5\n      and\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":31922:31933  tokenAmount */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":31879:31912  IERC20(tokenAddress).safeTransfer */\n      tag_124\n        /* \"CoreContracts/StakingRewards.sol\":31879:31934  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      jump\t// in\n    tag_174:\n        /* \"CoreContracts/StakingRewards.sol\":31949:31985  Recovered(tokenAddress, tokenAmount) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      mload\n      0x8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":24374:24375  1 */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":25309:25316  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25309:25331  _status = _NOT_ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":31679:31992  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27166:27223  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_72:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":2154:2231  function owner() public view returns (address) {... */\n    tag_74:\n        /* \"CoreContracts/StakingRewards.sol\":2218:2224  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"CoreContracts/StakingRewards.sol\":2154:2231  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":29248:29611  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_77:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25006:25013  _status */\n      sload(0x00)\n        /* \"CoreContracts/StakingRewards.sol\":25006:25025  _status != _ENTERED */\n      eq\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":24998:25061  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_178\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_178:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25136:25143  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25136:25154  _status = _ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29314:29324  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      tag_180\n        /* \"CoreContracts/StakingRewards.sol\":32544:32558  rewardPerToken */\n      tag_84\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      jump\t// in\n    tag_180:\n        /* \"CoreContracts/StakingRewards.sol\":32521:32541  rewardPerTokenStored */\n      0x08\n        /* \"CoreContracts/StakingRewards.sol\":32521:32560  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      tag_181\n        /* \"CoreContracts/StakingRewards.sol\":32587:32611  lastTimeRewardApplicable */\n      tag_66\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_181:\n        /* \"CoreContracts/StakingRewards.sol\":32570:32584  lastUpdateTime */\n      0x07\n        /* \"CoreContracts/StakingRewards.sol\":32570:32613  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32627:32648  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n      tag_182\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      tag_183\n        /* \"CoreContracts/StakingRewards.sol\":32690:32697  account */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":32683:32689  earned */\n      tag_38\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":32664:32671  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32664:32698  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32746:32766  rewardPerTokenStored */\n      sload(0x08)\n        /* \"CoreContracts/StakingRewards.sol\":32712:32734  userRewardPerTokenPaid */\n      0x09\n        /* \"CoreContracts/StakingRewards.sol\":32712:32743  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32712:32766  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n    tag_182:\n        /* \"CoreContracts/StakingRewards.sol\":29353:29354  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":29344:29350  amount */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":29344:29354  amount > 0 */\n      gt\n        /* \"CoreContracts/StakingRewards.sol\":29336:29373  require(amount > 0, \"Cannot stake 0\") */\n      tag_185\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_185:\n        /* \"CoreContracts/StakingRewards.sol\":29398:29410  _totalSupply */\n      sload(0x0b)\n        /* \"CoreContracts/StakingRewards.sol\":29398:29422  _totalSupply.add(amount) */\n      tag_186\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":29415:29421  amount */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":29398:29414  _totalSupply.add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":29398:29422  _totalSupply.add(amount) */\n      jump\t// in\n    tag_186:\n        /* \"CoreContracts/StakingRewards.sol\":29383:29395  _totalSupply */\n      0x0b\n        /* \"CoreContracts/StakingRewards.sol\":29383:29422  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29466:29476  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":29456:29477  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":29456:29465  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":29456:29477  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":29456:29489  _balances[msg.sender].add(amount) */\n      tag_187\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":29482:29488  amount */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":29456:29481  _balances[msg.sender].add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":29456:29489  _balances[msg.sender].add(amount) */\n      jump\t// in\n    tag_187:\n        /* \"CoreContracts/StakingRewards.sol\":29442:29452  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":29432:29453  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":29432:29441  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":29432:29453  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":29432:29489  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29499:29511  stakingToken */\n      sload(0x03)\n        /* \"CoreContracts/StakingRewards.sol\":29499:29563  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_188\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":29499:29511  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":29549:29553  this */\n      address\n        /* \"CoreContracts/StakingRewards.sol\":29556:29562  amount */\n      dup6\n        /* \"CoreContracts/StakingRewards.sol\":29499:29528  stakingToken.safeTransferFrom */\n      tag_189\n        /* \"CoreContracts/StakingRewards.sol\":29499:29563  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_188:\n        /* \"CoreContracts/StakingRewards.sol\":29578:29604  Staked(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":29585:29595  msg.sender */\n      caller\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":29578:29604  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":24374:24375  1 */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":25309:25316  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25309:25331  _status = _NOT_ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29248:29611  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27089:27118  uint256 public lastUpdateTime */\n    tag_79:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":31998:32423  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {... */\n    tag_82:\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      tag_191\n        /* \"CoreContracts/StakingRewards.sol\":2368:2378  _msgSender */\n      tag_127\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"CoreContracts/StakingRewards.sol\":2358:2364  _owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":2358:2380  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":2350:2417  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_192\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_192:\n        /* \"CoreContracts/StakingRewards.sol\":32120:32132  periodFinish */\n      sload(0x04)\n        /* \"CoreContracts/StakingRewards.sol\":32102:32117  block.timestamp */\n      timestamp\n        /* \"CoreContracts/StakingRewards.sol\":32102:32132  block.timestamp > periodFinish */\n      gt\n        /* \"CoreContracts/StakingRewards.sol\":32081:32246  require(... */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x58\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56\n      0x58\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"CoreContracts/StakingRewards.sol\":32283:32284  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":32264:32280  _rewardsDuration */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":32264:32284  _rewardsDuration > 0 */\n      gt\n        /* \"CoreContracts/StakingRewards.sol\":32256:32318  require(_rewardsDuration > 0, \"Reward duration can't be zero\") */\n      tag_195\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x526577617264206475726174696f6e2063616e2774206265207a65726f000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_195:\n        /* \"CoreContracts/StakingRewards.sol\":32328:32343  rewardsDuration */\n      0x06\n        /* \"CoreContracts/StakingRewards.sol\":32328:32362  rewardsDuration = _rewardsDuration */\n      dup2\n      swap1\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32377:32416  RewardsDurationUpdated(rewardsDuration) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      0xfb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"CoreContracts/StakingRewards.sol\":31998:32423  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27988:28310  function rewardPerToken() public view returns (uint256) {... */\n    tag_84:\n        /* \"CoreContracts/StakingRewards.sol\":28035:28042  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":28058:28070  _totalSupply */\n      sload(0x0b)\n        /* \"CoreContracts/StakingRewards.sol\":28074:28075  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":28058:28075  _totalSupply == 0 */\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":28054:28129  if (_totalSupply == 0) {... */\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":28098:28118  rewardPerTokenStored */\n      sload(0x08)\n        /* \"CoreContracts/StakingRewards.sol\":28091:28118  return rewardPerTokenStored */\n      jump(tag_109)\n        /* \"CoreContracts/StakingRewards.sol\":28054:28129  if (_totalSupply == 0) {... */\n    tag_197:\n        /* \"CoreContracts/StakingRewards.sol\":28157:28303  rewardPerTokenStored.add(... */\n      tag_111\n        /* \"CoreContracts/StakingRewards.sol\":28199:28289  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_199\n        /* \"CoreContracts/StakingRewards.sol\":28276:28288  _totalSupply */\n      sload(0x0b)\n        /* \"CoreContracts/StakingRewards.sol\":28199:28271  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_102\n        /* \"CoreContracts/StakingRewards.sol\":28266:28270  1e18 */\n      0x0de0b6b3a7640000\n        /* \"CoreContracts/StakingRewards.sol\":28199:28261  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_202\n        /* \"CoreContracts/StakingRewards.sol\":28250:28260  rewardRate */\n      sload(0x05)\n        /* \"CoreContracts/StakingRewards.sol\":28199:28245  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_202\n        /* \"CoreContracts/StakingRewards.sol\":28230:28244  lastUpdateTime */\n      sload(0x07)\n        /* \"CoreContracts/StakingRewards.sol\":28199:28225  lastTimeRewardApplicable() */\n      tag_104\n        /* \"CoreContracts/StakingRewards.sol\":28199:28223  lastTimeRewardApplicable */\n      tag_66\n        /* \"CoreContracts/StakingRewards.sol\":28199:28225  lastTimeRewardApplicable() */\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":28199:28245  lastTimeRewardApplicable().sub(lastUpdateTime) */\n    tag_202:\n        /* \"CoreContracts/StakingRewards.sol\":28199:28249  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      swap1\n      tag_106\n        /* \"CoreContracts/StakingRewards.sol\":28199:28261  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":28199:28289  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n    tag_199:\n        /* \"CoreContracts/StakingRewards.sol\":28157:28177  rewardPerTokenStored */\n      sload(0x08)\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28157:28181  rewardPerTokenStored.add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":28157:28303  rewardPerTokenStored.add(... */\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":26908:26934  IERC20 public rewardsToken */\n    tag_86:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":27124:27159  uint256 public rewardPerTokenStored */\n    tag_88:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":30280:30374  function exit() external {... */\n    tag_90:\n        /* \"CoreContracts/StakingRewards.sol\":30334:30344  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":30324:30345  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":30324:30333  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":30324:30345  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":30315:30346  withdraw(_balances[msg.sender]) */\n      tag_205\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":30315:30323  withdraw */\n      tag_48\n        /* \"CoreContracts/StakingRewards.sol\":30315:30346  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_205:\n        /* \"CoreContracts/StakingRewards.sol\":30356:30367  getReward() */\n      tag_206\n        /* \"CoreContracts/StakingRewards.sol\":30356:30365  getReward */\n      tag_55\n        /* \"CoreContracts/StakingRewards.sol\":30356:30367  getReward() */\n      jump\t// in\n    tag_206:\n        /* \"CoreContracts/StakingRewards.sol\":30280:30374  function exit() external {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":26972:27003  uint256 public periodFinish = 0 */\n    tag_92:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":28695:29242  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {... */\n    tag_95:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25006:25013  _status */\n      sload(0x00)\n        /* \"CoreContracts/StakingRewards.sol\":25006:25025  _status != _ENTERED */\n      eq\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":24998:25061  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_208:\n        /* \"CoreContracts/StakingRewards.sol\":24417:24418  2 */\n      0x02\n        /* \"CoreContracts/StakingRewards.sol\":25136:25143  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25136:25154  _status = _ENTERED */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":28817:28827  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      tag_210\n        /* \"CoreContracts/StakingRewards.sol\":32544:32558  rewardPerToken */\n      tag_84\n        /* \"CoreContracts/StakingRewards.sol\":32544:32560  rewardPerToken() */\n      jump\t// in\n    tag_210:\n        /* \"CoreContracts/StakingRewards.sol\":32521:32541  rewardPerTokenStored */\n      0x08\n        /* \"CoreContracts/StakingRewards.sol\":32521:32560  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      tag_211\n        /* \"CoreContracts/StakingRewards.sol\":32587:32611  lastTimeRewardApplicable */\n      tag_66\n        /* \"CoreContracts/StakingRewards.sol\":32587:32613  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_211:\n        /* \"CoreContracts/StakingRewards.sol\":32570:32584  lastUpdateTime */\n      0x07\n        /* \"CoreContracts/StakingRewards.sol\":32570:32613  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32627:32648  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      tag_213\n        /* \"CoreContracts/StakingRewards.sol\":32690:32697  account */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":32683:32689  earned */\n      tag_38\n        /* \"CoreContracts/StakingRewards.sol\":32683:32698  earned(account) */\n      jump\t// in\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":32664:32671  rewards */\n      0x0a\n        /* \"CoreContracts/StakingRewards.sol\":32664:32680  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32664:32698  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32746:32766  rewardPerTokenStored */\n      sload(0x08)\n        /* \"CoreContracts/StakingRewards.sol\":32712:32734  userRewardPerTokenPaid */\n      0x09\n        /* \"CoreContracts/StakingRewards.sol\":32712:32743  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":32712:32766  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":32623:32777  if (account != address(0)) {... */\n    tag_212:\n        /* \"CoreContracts/StakingRewards.sol\":28856:28857  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":28847:28853  amount */\n      dup7\n        /* \"CoreContracts/StakingRewards.sol\":28847:28857  amount > 0 */\n      gt\n        /* \"CoreContracts/StakingRewards.sol\":28839:28876  require(amount > 0, \"Cannot stake 0\") */\n      tag_215\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_215:\n        /* \"CoreContracts/StakingRewards.sol\":28901:28913  _totalSupply */\n      sload(0x0b)\n        /* \"CoreContracts/StakingRewards.sol\":28901:28925  _totalSupply.add(amount) */\n      tag_216\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28918:28924  amount */\n      dup8\n        /* \"CoreContracts/StakingRewards.sol\":28901:28917  _totalSupply.add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":28901:28925  _totalSupply.add(amount) */\n      jump\t// in\n    tag_216:\n        /* \"CoreContracts/StakingRewards.sol\":28886:28898  _totalSupply */\n      0x0b\n        /* \"CoreContracts/StakingRewards.sol\":28886:28925  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":28969:28979  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":28959:28980  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":28959:28968  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":28959:28980  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/StakingRewards.sol\":28959:28992  _balances[msg.sender].add(amount) */\n      tag_217\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":28985:28991  amount */\n      dup8\n        /* \"CoreContracts/StakingRewards.sol\":28959:28984  _balances[msg.sender].add */\n      tag_108\n        /* \"CoreContracts/StakingRewards.sol\":28959:28992  _balances[msg.sender].add(amount) */\n      jump\t// in\n    tag_217:\n        /* \"CoreContracts/StakingRewards.sol\":28945:28955  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":28935:28956  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":28935:28944  _balances */\n      0x0c\n        /* \"CoreContracts/StakingRewards.sol\":28935:28956  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CoreContracts/StakingRewards.sol\":28935:28992  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":29044:29056  stakingToken */\n      sload(0x03)\n        /* \"CoreContracts/StakingRewards.sol\":29021:29119  IKalyswapERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      dup4\n      mload\n      0xd505accf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":29086:29090  this */\n      address\n        /* \"CoreContracts/StakingRewards.sol\":29021:29119  IKalyswapERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0x24\n      dup5\n      add\n      mstore\n      0x44\n      dup4\n      add\n      dup11\n      swap1\n      mstore\n      0x64\n      dup4\n      add\n      dup10\n      swap1\n      mstore\n      0xff\n      dup9\n      and\n      0x84\n      dup5\n      add\n      mstore\n      0xa4\n      dup4\n      add\n      dup8\n      swap1\n      mstore\n      0xc4\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      swap3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":29044:29056  stakingToken */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"CoreContracts/StakingRewards.sol\":29021:29065  IKalyswapERC20(address(stakingToken)).permit */\n      0xd505accf\n      swap3\n        /* \"CoreContracts/StakingRewards.sol\":29021:29119  IKalyswapERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0xe4\n      dup1\n      dup3\n      add\n      swap4\n        /* \"CoreContracts/StakingRewards.sol\":28935:28956  _balances[msg.sender] */\n      swap3\n        /* \"CoreContracts/StakingRewards.sol\":29021:29119  IKalyswapERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":28935:28956  _balances[msg.sender] */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":29044:29056  stakingToken */\n      dup8\n        /* \"CoreContracts/StakingRewards.sol\":29021:29119  IKalyswapERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":29130:29142  stakingToken */\n      sload(0x03)\n        /* \"CoreContracts/StakingRewards.sol\":29130:29194  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_221\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":29130:29142  stakingToken */\n      and\n      swap1\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":29160:29170  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":29180:29184  this */\n      address\n        /* \"CoreContracts/StakingRewards.sol\":29187:29193  amount */\n      dup10\n        /* \"CoreContracts/StakingRewards.sol\":29130:29159  stakingToken.safeTransferFrom */\n      tag_189\n        /* \"CoreContracts/StakingRewards.sol\":29130:29194  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_221:\n        /* \"CoreContracts/StakingRewards.sol\":29209:29235  Staked(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup8\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":29216:29226  msg.sender */\n      caller\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":29209:29235  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":24374:24375  1 */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":25309:25316  _status */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":25309:25331  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":28695:29242  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":3071:3311  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      tag_223\n        /* \"CoreContracts/StakingRewards.sol\":2368:2378  _msgSender */\n      tag_127\n        /* \"CoreContracts/StakingRewards.sol\":2368:2380  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"CoreContracts/StakingRewards.sol\":2358:2364  _owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":2358:2380  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":2350:2417  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_224\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":3159:3181  newOwner != address(0) */\n      dup2\n      and\n        /* \"CoreContracts/StakingRewards.sol\":3151:3224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"CoreContracts/StakingRewards.sol\":3260:3266  _owner */\n      sload(0x01)\n        /* \"CoreContracts/StakingRewards.sol\":3239:3277  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"CoreContracts/StakingRewards.sol\":3260:3266  _owner */\n      and\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":3239:3277  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":3260:3266  _owner */\n      0x00\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":3239:3277  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"CoreContracts/StakingRewards.sol\":3287:3293  _owner */\n      0x01\n        /* \"CoreContracts/StakingRewards.sol\":3287:3304  _owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"CoreContracts/StakingRewards.sol\":3071:3311  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":5514:5648  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"CoreContracts/StakingRewards.sol\":5572:5579  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":5598:5641  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_228\n        /* \"CoreContracts/StakingRewards.sol\":5602:5603  a */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":5605:5606  b */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":5598:5641  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":5598:5601  sub */\n      tag_229\n        /* \"CoreContracts/StakingRewards.sol\":5598:5641  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_228:\n        /* \"CoreContracts/StakingRewards.sol\":5591:5641  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap4\n        /* \"CoreContracts/StakingRewards.sol\":5514:5648  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":6373:6832  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"CoreContracts/StakingRewards.sol\":6431:6438  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":6672:6678  a == 0 */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":6668:6713  if (a == 0) {... */\n      tag_231\n      jumpi\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":6701:6702  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":6694:6702  return 0 */\n      jump(tag_100)\n        /* \"CoreContracts/StakingRewards.sol\":6668:6713  if (a == 0) {... */\n    tag_231:\n        /* \"CoreContracts/StakingRewards.sol\":6735:6740  a * b */\n      dup3\n      dup3\n      mul\n        /* \"CoreContracts/StakingRewards.sol\":6739:6740  b */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":6735:6736  a */\n      dup5\n        /* \"CoreContracts/StakingRewards.sol\":6735:6740  a * b */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":6735:6736  a */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":6758:6763  c / a */\n      tag_232\n      jumpi\n      invalid\n    tag_232:\n      div\n        /* \"CoreContracts/StakingRewards.sol\":6758:6768  c / a == b */\n      eq\n        /* \"CoreContracts/StakingRewards.sol\":6750:6806  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CoreContracts/StakingRewards.sol\":7294:7424  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"CoreContracts/StakingRewards.sol\":7352:7359  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":7378:7417  div(a, b, \"SafeMath: division by zero\") */\n      tag_228\n        /* \"CoreContracts/StakingRewards.sol\":7382:7383  a */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":7385:7386  b */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":7378:7417  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":7378:7381  div */\n      tag_236\n        /* \"CoreContracts/StakingRewards.sol\":7378:7417  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"CoreContracts/StakingRewards.sol\":5067:5243  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_108:\n        /* \"CoreContracts/StakingRewards.sol\":5125:5132  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":5156:5161  a + b */\n      dup3\n      dup3\n      add\n        /* \"CoreContracts/StakingRewards.sol\":5179:5185  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":5171:5217  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_228\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"CoreContracts/StakingRewards.sol\":19669:19844  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_124:\n        /* \"CoreContracts/StakingRewards.sol\":19778:19836  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CoreContracts/StakingRewards.sol\":19801:19824  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"CoreContracts/StakingRewards.sol\":19778:19836  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":19751:19837  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_240\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":19771:19776  token */\n      dup5\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":19751:19770  _callOptionalReturn */\n      tag_241\n        /* \"CoreContracts/StakingRewards.sol\":19751:19837  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_240:\n        /* \"CoreContracts/StakingRewards.sol\":19669:19844  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":723:827  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_127:\n        /* \"CoreContracts/StakingRewards.sol\":810:820  msg.sender */\n      caller\n        /* \"CoreContracts/StakingRewards.sol\":723:827  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":3742:3846  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"CoreContracts/StakingRewards.sol\":3800:3807  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":3830:3831  b */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":3826:3827  a */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":3826:3831  a < b */\n      lt\n        /* \"CoreContracts/StakingRewards.sol\":3826:3839  a < b ? a : b */\n      tag_244\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":3838:3839  b */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":3826:3839  a < b ? a : b */\n      jump(tag_228)\n    tag_244:\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":3834:3835  a */\n      swap1\n      swap2\n        /* \"CoreContracts/StakingRewards.sol\":3742:3846  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":19850:20053  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_189:\n        /* \"CoreContracts/StakingRewards.sol\":19977:20045  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CoreContracts/StakingRewards.sol\":20000:20027  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n        /* \"CoreContracts/StakingRewards.sol\":19977:20045  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      or\n      swap1\n      mstore\n        /* \"CoreContracts/StakingRewards.sol\":19950:20046  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_247\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":19970:19975  token */\n      dup6\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":19950:19969  _callOptionalReturn */\n      tag_241\n        /* \"CoreContracts/StakingRewards.sol\":19950:20046  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_247:\n        /* \"CoreContracts/StakingRewards.sol\":19850:20053  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":5939:6126  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_229:\n        /* \"CoreContracts/StakingRewards.sol\":6025:6032  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":6060:6072  errorMessage */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":6052:6058  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":6044:6073  require(b <= a, errorMessage) */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_250:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_252\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_250)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_253\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_253:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n      pop\n      pop\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":6095:6100  a - b */\n      swap1\n      sub\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":5939:6126  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":7906:8178  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"CoreContracts/StakingRewards.sol\":7992:7999  uint256 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":8026:8038  errorMessage */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":8019:8024  b > 0 */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":8011:8039  require(b > 0, errorMessage) */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_252\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_250)\n    tag_255:\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":8049:8058  uint256 c */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":8065:8066  b */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":8061:8062  a */\n      dup6\n        /* \"CoreContracts/StakingRewards.sol\":8061:8066  a / b */\n      dup2\n      tag_260\n      jumpi\n      invalid\n    tag_260:\n      div\n      swap6\n        /* \"CoreContracts/StakingRewards.sol\":7906:8178  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":21932:22683  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_241:\n        /* \"CoreContracts/StakingRewards.sol\":22351:22374  bytes memory returndata */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":22377:22446  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_262\n        /* \"CoreContracts/StakingRewards.sol\":22405:22409  data */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":22377:22446  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":22385:22390  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":22377:22404  address(token).functionCall */\n      and\n      tag_263\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":22377:22446  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"CoreContracts/StakingRewards.sol\":22460:22477  returndata.length */\n      dup1\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":22351:22446  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":22460:22481  returndata.length > 0 */\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":22456:22677  if (returndata.length > 0) { // Return data is optional... */\n      tag_240\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":22600:22610  returndata */\n      dup1\n        /* \"CoreContracts/StakingRewards.sol\":22589:22619  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":22581:22666  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CoreContracts/StakingRewards.sol\":15754:15947  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_263:\n        /* \"CoreContracts/StakingRewards.sol\":15857:15869  bytes memory */\n      0x60\n        /* \"CoreContracts/StakingRewards.sol\":15888:15940  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_268\n        /* \"CoreContracts/StakingRewards.sol\":15910:15916  target */\n      dup5\n        /* \"CoreContracts/StakingRewards.sol\":15918:15922  data */\n      dup5\n        /* \"CoreContracts/StakingRewards.sol\":15924:15925  0 */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":15927:15939  errorMessage */\n      dup6\n        /* \"CoreContracts/StakingRewards.sol\":15888:15909  functionCallWithValue */\n      tag_269\n        /* \"CoreContracts/StakingRewards.sol\":15888:15940  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_268:\n        /* \"CoreContracts/StakingRewards.sol\":15881:15940  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"CoreContracts/StakingRewards.sol\":15754:15947  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":16781:17304  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_269:\n        /* \"CoreContracts/StakingRewards.sol\":16908:16920  bytes memory */\n      0x60\n        /* \"CoreContracts/StakingRewards.sol\":16965:16970  value */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":16940:16961  address(this).balance */\n      selfbalance\n        /* \"CoreContracts/StakingRewards.sol\":16940:16970  address(this).balance >= value */\n      lt\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":16932:17013  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"CoreContracts/StakingRewards.sol\":17031:17049  isContract(target) */\n      tag_272\n        /* \"CoreContracts/StakingRewards.sol\":17042:17048  target */\n      dup6\n        /* \"CoreContracts/StakingRewards.sol\":17031:17041  isContract */\n      tag_273\n        /* \"CoreContracts/StakingRewards.sol\":17031:17049  isContract(target) */\n      jump\t// in\n    tag_272:\n        /* \"CoreContracts/StakingRewards.sol\":17023:17083  require(isContract(target), \"Address: call to non-contract\") */\n      tag_274\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_274:\n        /* \"CoreContracts/StakingRewards.sol\":17154:17166  bool success */\n      0x00\n        /* \"CoreContracts/StakingRewards.sol\":17168:17191  bytes memory returndata */\n      dup1\n        /* \"CoreContracts/StakingRewards.sol\":17195:17201  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/StakingRewards.sol\":17195:17206  target.call */\n      and\n        /* \"CoreContracts/StakingRewards.sol\":17215:17220  value */\n      dup6\n        /* \"CoreContracts/StakingRewards.sol\":17223:17227  data */\n      dup8\n        /* \"CoreContracts/StakingRewards.sol\":17195:17228  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_275:\n      0x20\n      dup4\n      lt\n      tag_277\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_275)\n    tag_277:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_280\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_279)\n    tag_280:\n      0x60\n      swap2\n      pop\n    tag_279:\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":17153:17228  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":17245:17297  _verifyCallResult(success, returndata, errorMessage) */\n      tag_281\n        /* \"CoreContracts/StakingRewards.sol\":17263:17270  success */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":17272:17282  returndata */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":17284:17296  errorMessage */\n      dup7\n        /* \"CoreContracts/StakingRewards.sol\":17245:17262  _verifyCallResult */\n      tag_282\n        /* \"CoreContracts/StakingRewards.sol\":17245:17297  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_281:\n        /* \"CoreContracts/StakingRewards.sol\":17238:17297  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"CoreContracts/StakingRewards.sol\":16781:17304  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":12899:13312  function isContract(address account) internal view returns (bool) {... */\n    tag_273:\n        /* \"CoreContracts/StakingRewards.sol\":13259:13279  extcodesize(account) */\n      extcodesize\n        /* \"CoreContracts/StakingRewards.sol\":13297:13305  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"CoreContracts/StakingRewards.sol\":12899:13312  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"CoreContracts/StakingRewards.sol\":18284:19009  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_282:\n        /* \"CoreContracts/StakingRewards.sol\":18399:18411  bytes memory */\n      0x60\n        /* \"CoreContracts/StakingRewards.sol\":18427:18434  success */\n      dup4\n        /* \"CoreContracts/StakingRewards.sol\":18423:19003  if (success) {... */\n      iszero\n      tag_285\n      jumpi\n      pop\n        /* \"CoreContracts/StakingRewards.sol\":18457:18467  returndata */\n      dup2\n        /* \"CoreContracts/StakingRewards.sol\":18450:18467  return returndata */\n      jump(tag_228)\n        /* \"CoreContracts/StakingRewards.sol\":18423:19003  if (success) {... */\n    tag_285:\n        /* \"CoreContracts/StakingRewards.sol\":18568:18585  returndata.length */\n      dup3\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":18568:18589  returndata.length > 0 */\n      iszero\n        /* \"CoreContracts/StakingRewards.sol\":18564:18993  if (returndata.length > 0) {... */\n      tag_287\n      jumpi\n        /* \"CoreContracts/StakingRewards.sol\":18826:18836  returndata */\n      dup3\n        /* \"CoreContracts/StakingRewards.sol\":18820:18837  mload(returndata) */\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":18886:18901  returndata_size */\n      dup1\n        /* \"CoreContracts/StakingRewards.sol\":18873:18883  returndata */\n      dup5\n        /* \"CoreContracts/StakingRewards.sol\":18869:18871  32 */\n      0x20\n        /* \"CoreContracts/StakingRewards.sol\":18865:18884  add(32, returndata) */\n      add\n        /* \"CoreContracts/StakingRewards.sol\":18858:18902  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"CoreContracts/StakingRewards.sol\":18775:18920  {... */\n    tag_287:\n        /* \"CoreContracts/StakingRewards.sol\":18958:18978  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup5\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup5\n      mload\n        /* \"CoreContracts/StakingRewards.sol\":18965:18977  errorMessage */\n      dup6\n      swap4\n        /* \"CoreContracts/StakingRewards.sol\":18958:18978  revert(errorMessage) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_252\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_250)\n    stop\n    data_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56 50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9 43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e\n\n    auxdata: 0xa2646970667358221220bfa5b2869e65e714faf1cd7309f0c87d8d4eb6a3bc1fc992421b724c62cd72e764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x15180 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B8A CODESIZE SUB DUP1 PUSH2 0x1B8A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH2 0x5C PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xDF JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1A9C DUP1 PUSH2 0xEE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8980F11F GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE9FAD8EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CA JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x37A JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x34D JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x8980F11F EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x320 JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x2C6 JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26C JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x1C1F78EB GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x23F JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x210 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x64D JUMP JUMPDEST PUSH2 0x23D PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x23D PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x23D PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x462 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x45C SWAP1 PUSH2 0x43D SWAP1 PUSH2 0x437 PUSH2 0xF71 JUMP JUMPDEST SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 PUSH2 0x1402 JUMP JUMPDEST SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x13A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0x50B PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x516 PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x55D JUMPI PUSH2 0x531 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x5B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x5BF SWAP1 DUP4 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5DC SWAP1 DUP4 PUSH2 0x1360 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x608 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C1 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x6CC PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x713 JUMPI PUSH2 0x6E7 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x732 JUMPI PUSH1 0x6 SLOAD PUSH2 0x72A SWAP1 DUP4 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x775 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x742 SWAP1 TIMESTAMP PUSH2 0x1360 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x75B PUSH1 0x5 SLOAD DUP4 PUSH2 0x13A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x76F SWAP1 PUSH2 0x45C DUP7 DUP5 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x816 SWAP1 DUP3 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x912 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0x920 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x92B PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x972 JUMPI PUSH2 0x946 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x9E8 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x9B1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA14 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA76 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB5A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A46 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC20 PUSH2 0xC0F PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0xCF4 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xCFF PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD46 JUMPI PUSH2 0xD1A DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD9B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xDA8 SWAP1 DUP4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDC5 SWAP1 DUP4 PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xDF2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP6 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE3F PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1957 PUSH1 0x58 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206475726174696F6E2063616E2774206265207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xF87 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x484 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0xFB6 PUSH1 0xB SLOAD PUSH2 0x45C PUSH8 0xDE0B6B3A7640000 PUSH2 0xFB0 PUSH1 0x5 SLOAD PUSH2 0xFB0 PUSH1 0x7 SLOAD PUSH2 0x437 PUSH2 0xAE2 JUMP JUMPDEST SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFED SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x8BA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1055 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0x1063 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x106E PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x10B5 JUMPI PUSH2 0x1089 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x110A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1117 SWAP1 DUP8 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1134 SWAP1 DUP8 PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD DUP4 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xD505ACCF SWAP3 PUSH1 0xE4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x1205 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP10 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1250 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x12B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19AF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x15CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13B8 JUMPI POP PUSH1 0x0 PUSH2 0x468 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x13C5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19FB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13A2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x151E SWAP1 DUP5 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1536 JUMPI DUP2 PUSH2 0x13A2 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x15C5 SWAP1 DUP6 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1607 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x164C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x161F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1607 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x16BD JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1778 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x151E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A1C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1787 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x178F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19D5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D9 DUP6 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x182A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1868 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18DF DUP3 DUP3 DUP7 PUSH2 0x18F0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x18FF JUMPI POP DUP2 PUSH2 0x13A2 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x190F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x161F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1607 JUMP INVALID POP PUSH19 0x6576696F757320726577617264732070657269 PUSH16 0x64206D75737420626520636F6D706C65 PUSH21 0x65206265666F7265206368616E67696E6720746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E20666F7220746865206E6577207065 PUSH19 0x696F644F776E61626C653A206E6577206F776E PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737341 PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656443616E6E6F742077697468647261 PUSH24 0x20746865207374616B696E6720746F6B656EA26469706673 PC 0x22 SLT KECCAK256 0xBF 0xA5 0xB2 DUP7 SWAP15 PUSH6 0xE714FAF1CD73 MULMOD CREATE 0xC8 PUSH30 0x8D4EB6A3BC1FC992421B724C62CD72E764736F6C63430007060033000000 ",
							"sourceMap": "26736:6422:0:-:0;;;27002:1;26972:31;;27037:1;27009:29;;27077:6;27044:39;;27409:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27409:186:0;;;;;;;24374:1;24489:7;:22;;;1973:12;:10;:12::i;:::-;1995:6;:18;;-1:-1:-1;;;;;;1995:18:0;-1:-1:-1;;;;;1995:18:0;;;;;;;;2028:43;;1995:18;;-1:-1:-1;1995:18:0;-1:-1:-1;;2028:43:0;;-1:-1:-1;;2028:43:0;-1:-1:-1;27506:12:0;:36;;-1:-1:-1;;;;;27506:36:0;;;-1:-1:-1;;;;;;27506:36:0;;;;;;;27552:12;:36;;;;;;;;;;;26736:6422;;723:104;810:10;723:104;:::o;26736:6422::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101ad5760003560e01c80638980f11f116100ee578063cd3daf9d11610097578063e9fad8ee11610071578063e9fad8ee14610382578063ebe2b12b1461038a578063ecd9ba8214610392578063f2fde38b146103ca576101ad565b8063cd3daf9d1461036a578063d1af0c7d14610372578063df136d651461037a576101ad565b8063a694fc3a116100c8578063a694fc3a14610328578063c8f33c9114610345578063cc1a378f1461034d576101ad565b80638980f11f146102ce5780638b876347146102fa5780638da5cb5b14610320576101ad565b80633c6b16ab1161015b578063715018a611610135578063715018a61461029257806372f702f31461029a5780637b0a47ee146102be57806380faa57d146102c6576101ad565b80633c6b16ab146102475780633d18b9121461026457806370a082311461026c576101ad565b80631c1f78eb1161018c5780631c1f78eb146102185780632e1a7d4d14610220578063386a95251461023f576101ad565b80628cc262146101b25780630700037d146101ea57806318160ddd14610210575b600080fd5b6101d8600480360360208110156101c857600080fd5b50356001600160a01b03166103f0565b60408051918252519081900360200190f35b6101d86004803603602081101561020057600080fd5b50356001600160a01b031661046e565b6101d8610480565b6101d8610487565b61023d6004803603602081101561023657600080fd5b50356104a5565b005b6101d8610647565b61023d6004803603602081101561025d57600080fd5b503561064d565b61023d6108ba565b6101d86004803603602081101561028257600080fd5b50356001600160a01b03166109f1565b61023d610a0c565b6102a2610acd565b604080516001600160a01b039092168252519081900360200190f35b6101d8610adc565b6101d8610ae2565b61023d600480360360408110156102e457600080fd5b506001600160a01b038135169060200135610af0565b6101d86004803603602081101561031057600080fd5b50356001600160a01b0316610c6d565b6102a2610c7f565b61023d6004803603602081101561033e57600080fd5b5035610c8e565b6101d8610e31565b61023d6004803603602081101561036357600080fd5b5035610e37565b6101d8610f71565b6102a2610fbf565b6101d8610fce565b61023d610fd4565b6101d8610ff7565b61023d600480360360a08110156103a857600080fd5b5080359060208101359060ff6040820135169060608101359060800135610ffd565b61023d600480360360208110156103e057600080fd5b50356001600160a01b0316611248565b6001600160a01b0381166000908152600a60209081526040808320546009909252822054610468919061046290670de0b6b3a76400009061045c9061043d90610437610f71565b90611360565b6001600160a01b0388166000908152600c6020526040902054906113a9565b90611402565b90611444565b92915050565b600a6020526000908152604090205481565b600b545b90565b60006104a06006546005546113a990919063ffffffff16565b905090565b600260005414156104fd576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000553361050b610f71565b600855610516610ae2565b6007556001600160a01b0381161561055d57610531816103f0565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b600082116105b2576040805162461bcd60e51b815260206004820152601160248201527f43616e6e6f742077697468647261772030000000000000000000000000000000604482015290519081900360640190fd5b600b546105bf9083611360565b600b55336000908152600c60205260409020546105dc9083611360565b336000818152600c6020526040902091909155600354610608916001600160a01b03909116908461149e565b60408051838152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a250506001600055565b60065481565b610655611523565b6001546001600160a01b039081169116146106b7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006106c1610f71565b6008556106cc610ae2565b6007556001600160a01b03811615610713576106e7816103f0565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60045442106107325760065461072a908390611402565b600555610775565b6004546000906107429042611360565b9050600061075b600554836113a990919063ffffffff16565b60065490915061076f9061045c8684611444565b60055550505b600254604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107d957600080fd5b505afa1580156107ed573d6000803e3d6000fd5b505050506040513d602081101561080357600080fd5b5051600654909150610816908290611402565b600554111561086c576040805162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015290519081900360640190fd5b42600781905560065461087f9190611444565b6004556040805184815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a1505050565b60026000541415610912576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260005533610920610f71565b60085561092b610ae2565b6007556001600160a01b0381161561097257610946816103f0565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b336000908152600a602052604090205480156109e857336000818152600a60205260408120556002546109b1916001600160a01b03909116908361149e565b60408051828152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b50506001600055565b6001600160a01b03166000908152600c602052604090205490565b610a14611523565b6001546001600160a01b03908116911614610a76576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36001805473ffffffffffffffffffffffffffffffffffffffff19169055565b6003546001600160a01b031681565b60055481565b60006104a042600454611527565b610af8611523565b6001546001600160a01b03908116911614610b5a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60026000541415610bb2576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556003546001600160a01b0383811691161415610c045760405162461bcd60e51b8152600401808060200182810382526021815260200180611a466021913960400191505060405180910390fd5b610c20610c0f610c7f565b6001600160a01b038416908361149e565b604080516001600160a01b03841681526020810183905281517f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28929181900390910190a150506001600055565b60096020526000908152604090205481565b6001546001600160a01b031690565b60026000541415610ce6576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260005533610cf4610f71565b600855610cff610ae2565b6007556001600160a01b03811615610d4657610d1a816103f0565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008211610d9b576040805162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207374616b652030000000000000000000000000000000000000604482015290519081900360640190fd5b600b54610da89083611444565b600b55336000908152600c6020526040902054610dc59083611444565b336000818152600c6020526040902091909155600354610df2916001600160a01b0390911690308561153d565b60408051838152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a250506001600055565b60075481565b610e3f611523565b6001546001600160a01b03908116911614610ea1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6004544211610ee15760405162461bcd60e51b81526004018080602001828103825260588152602001806119576058913960600191505060405180910390fd5b60008111610f36576040805162461bcd60e51b815260206004820152601d60248201527f526577617264206475726174696f6e2063616e2774206265207a65726f000000604482015290519081900360640190fd5b60068190556040805182815290517ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39181900360200190a150565b6000600b5460001415610f875750600854610484565b6104a0610fb6600b5461045c670de0b6b3a7640000610fb0600554610fb0600754610437610ae2565b906113a9565b60085490611444565b6002546001600160a01b031681565b60085481565b336000908152600c6020526040902054610fed906104a5565b610ff56108ba565b565b60045481565b60026000541415611055576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260005533611063610f71565b60085561106e610ae2565b6007556001600160a01b038116156110b557611089816103f0565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b6000861161110a576040805162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207374616b652030000000000000000000000000000000000000604482015290519081900360640190fd5b600b546111179087611444565b600b55336000908152600c60205260409020546111349087611444565b336000818152600c60205260408082209390935560035483517fd505accf0000000000000000000000000000000000000000000000000000000081526004810193909352306024840152604483018a90526064830189905260ff8816608484015260a4830187905260c4830186905292516001600160a01b039093169263d505accf9260e480820193929182900301818387803b1580156111d457600080fd5b505af11580156111e8573d6000803e3d6000fd5b505060035461120592506001600160a01b0316905033308961153d565b60408051878152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a25050600160005550505050565b611250611523565b6001546001600160a01b039081169116146112b2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166112f75760405162461bcd60e51b81526004018080602001828103825260268152602001806119af6026913960400191505060405180910390fd5b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006113a283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115cb565b9392505050565b6000826113b857506000610468565b828202828482816113c557fe5b04146113a25760405162461bcd60e51b81526004018080602001828103825260218152602001806119fb6021913960400191505060405180910390fd5b60006113a283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611662565b6000828201838110156113a2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261151e9084906116c7565b505050565b3390565b600081831061153657816113a2565b5090919050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526115c59085906116c7565b50505050565b6000818484111561165a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561161f578181015183820152602001611607565b50505050905090810190601f16801561164c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836116b15760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561161f578181015183820152602001611607565b5060008385816116bd57fe5b0495945050505050565b600061171c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117789092919063ffffffff16565b80519091501561151e5780806020019051602081101561173b57600080fd5b505161151e5760405162461bcd60e51b815260040180806020018281038252602a815260200180611a1c602a913960400191505060405180910390fd5b6060611787848460008561178f565b949350505050565b6060824710156117d05760405162461bcd60e51b81526004018080602001828103825260268152602001806119d56026913960400191505060405180910390fd5b6117d9856118ea565b61182a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106118685780518252601f199092019160209182019101611849565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146118ca576040519150601f19603f3d011682016040523d82523d6000602084013e6118cf565b606091505b50915091506118df8282866118f0565b979650505050505050565b3b151590565b606083156118ff5750816113a2565b82511561190f5782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561161f57818101518382015260200161160756fe50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443616e6e6f7420776974686472617720746865207374616b696e6720746f6b656ea2646970667358221220bfa5b2869e65e714faf1cd7309f0c87d8d4eb6a3bc1fc992421b724c62cd72e764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8980F11F GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE9FAD8EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CA JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x37A JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x34D JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x8980F11F EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x320 JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x2C6 JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26C JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH4 0x1C1F78EB GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x23F JUMPI PUSH2 0x1AD JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x210 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x64D JUMP JUMPDEST PUSH2 0x23D PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x23D PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x23D PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x462 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x45C SWAP1 PUSH2 0x43D SWAP1 PUSH2 0x437 PUSH2 0xF71 JUMP JUMPDEST SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 PUSH2 0x1402 JUMP JUMPDEST SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x13A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0x50B PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x516 PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x55D JUMPI PUSH2 0x531 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x5B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x5BF SWAP1 DUP4 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5DC SWAP1 DUP4 PUSH2 0x1360 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x608 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C1 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x6CC PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x713 JUMPI PUSH2 0x6E7 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x732 JUMPI PUSH1 0x6 SLOAD PUSH2 0x72A SWAP1 DUP4 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x775 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x742 SWAP1 TIMESTAMP PUSH2 0x1360 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x75B PUSH1 0x5 SLOAD DUP4 PUSH2 0x13A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x76F SWAP1 PUSH2 0x45C DUP7 DUP5 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x816 SWAP1 DUP3 SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x912 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0x920 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x92B PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x972 JUMPI PUSH2 0x946 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x9E8 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x9B1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA14 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA76 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB5A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A46 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC20 PUSH2 0xC0F PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0xCF4 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xCFF PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD46 JUMPI PUSH2 0xD1A DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD9B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xDA8 SWAP1 DUP4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDC5 SWAP1 DUP4 PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xDF2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP6 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE3F PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1957 PUSH1 0x58 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206475726174696F6E2063616E2774206265207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xF87 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x484 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0xFB6 PUSH1 0xB SLOAD PUSH2 0x45C PUSH8 0xDE0B6B3A7640000 PUSH2 0xFB0 PUSH1 0x5 SLOAD PUSH2 0xFB0 PUSH1 0x7 SLOAD PUSH2 0x437 PUSH2 0xAE2 JUMP JUMPDEST SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFED SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x8BA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1055 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH2 0x1063 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x106E PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x10B5 JUMPI PUSH2 0x1089 DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x110A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1117 SWAP1 DUP8 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1134 SWAP1 DUP8 PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD DUP4 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xD505ACCF SWAP3 PUSH1 0xE4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x1205 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP10 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1250 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x12B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19AF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x15CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13B8 JUMPI POP PUSH1 0x0 PUSH2 0x468 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x13C5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19FB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13A2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x151E SWAP1 DUP5 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1536 JUMPI DUP2 PUSH2 0x13A2 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x15C5 SWAP1 DUP6 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1607 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x164C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x161F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1607 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x16BD JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1778 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x151E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A1C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1787 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x178F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19D5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D9 DUP6 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x182A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1868 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18DF DUP3 DUP3 DUP7 PUSH2 0x18F0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x18FF JUMPI POP DUP2 PUSH2 0x13A2 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x190F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x161F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1607 JUMP INVALID POP PUSH19 0x6576696F757320726577617264732070657269 PUSH16 0x64206D75737420626520636F6D706C65 PUSH21 0x65206265666F7265206368616E67696E6720746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E20666F7220746865206E6577207065 PUSH19 0x696F644F776E61626C653A206E6577206F776E PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737341 PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656443616E6E6F742077697468647261 PUSH24 0x20746865207374616B696E6720746F6B656EA26469706673 PC 0x22 SLT KECCAK256 0xBF 0xA5 0xB2 DUP7 SWAP15 PUSH6 0xE714FAF1CD73 MULMOD CREATE 0xC8 PUSH30 0x8D4EB6A3BC1FC992421B724C62CD72E764736F6C63430007060033000000 ",
							"sourceMap": "26736:6422:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28316:196;;;;;;;;;;;;;;;;-1:-1:-1;28316:196:0;-1:-1:-1;;;;;28316:196:0;;:::i;:::-;;;;;;;;;;;;;;;;27229:42;;;;;;;;;;;;;;;;-1:-1:-1;27229:42:0;-1:-1:-1;;;;;27229:42:0;;:::i;27640:91::-;;;:::i;28518:119::-;;;:::i;29617:351::-;;;;;;;;;;;;;;;;-1:-1:-1;29617:351:0;;:::i;:::-;;27044:39;;;:::i;30517:1050::-;;;;;;;;;;;;;;;;-1:-1:-1;30517:1050:0;;:::i;29974:300::-;;;:::i;27737:110::-;;;;;;;;;;;;;;;;-1:-1:-1;27737:110:0;-1:-1:-1;;;;;27737:110:0;;:::i;2777:145::-;;;:::i;26940:26::-;;;:::i;:::-;;;;-1:-1:-1;;;;;26940:26:0;;;;;;;;;;;;;;27009:29;;;:::i;27853:129::-;;;:::i;31679:313::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31679:313:0;;;;;;;;:::i;27166:57::-;;;;;;;;;;;;;;;;-1:-1:-1;27166:57:0;-1:-1:-1;;;;;27166:57:0;;:::i;2154:77::-;;;:::i;29248:363::-;;;;;;;;;;;;;;;;-1:-1:-1;29248:363:0;;:::i;27089:29::-;;;:::i;31998:425::-;;;;;;;;;;;;;;;;-1:-1:-1;31998:425:0;;:::i;27988:322::-;;;:::i;26908:26::-;;;:::i;27124:35::-;;;:::i;30280:94::-;;;:::i;26972:31::-;;;:::i;28695:547::-;;;;;;;;;;;;;;;;-1:-1:-1;28695:547:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;3071:240::-;;;;;;;;;;;;;;;;-1:-1:-1;3071:240:0;-1:-1:-1;;;;;3071:240:0;;:::i;28316:196::-;-1:-1:-1;;;;;28488:16:0;;28370:7;28488:16;;;:7;:16;;;;;;;;;28440:22;:31;;;;;;28396:109;;28488:16;28396:87;;28478:4;;28396:77;;28419:53;;:16;:14;:16::i;:::-;:20;;:53::i;:::-;-1:-1:-1;;;;;28396:18:0;;;;;;:9;:18;;;;;;;:22;:77::i;:::-;:81;;:87::i;:::-;:91;;:109::i;:::-;28389:116;28316:196;-1:-1:-1;;28316:196:0:o;27229:42::-;;;;;;;;;;;;;:::o;27640:91::-;27712:12;;27640:91;;:::o;28518:119::-;28573:7;28599:31;28614:15;;28599:10;;:14;;:31;;;;:::i;:::-;28592:38;;28518:119;:::o;29617:351::-;24417:1;25006:7;;:19;;24998:63;;;;;-1:-1:-1;;;24998:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24417:1;25136:7;:18;29684:10:::1;32544:16;:14;:16::i;:::-;32521:20;:39:::0;32587:26:::1;:24;:26::i;:::-;32570:14;:43:::0;-1:-1:-1;;;;;32627:21:0;::::1;::::0;32623:154:::1;;32683:15;32690:7;32683:6;:15::i;:::-;-1:-1:-1::0;;;;;32664:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;32746:20:::1;::::0;32712:22:::1;:31:::0;;;;;;:54;32623:154:::1;29723:1:::2;29714:6;:10;29706:40;;;::::0;;-1:-1:-1;;;29706:40:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;29771:12;::::0;:24:::2;::::0;29788:6;29771:16:::2;:24::i;:::-;29756:12;:39:::0;29839:10:::2;29829:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;29855:6;29829:25:::2;:33::i;:::-;29815:10;29805:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;29872:12:::2;::::0;:45:::2;::::0;-1:-1:-1;;;;;29872:12:0;;::::2;::::0;29910:6;29872:25:::2;:45::i;:::-;29932:29;::::0;;;;;;;29942:10:::2;::::0;29932:29:::2;::::0;;;;;::::2;::::0;;::::2;-1:-1:-1::0;;24374:1:0;25309:7;:22;29617:351::o;27044:39::-;;;;:::o;30517:1050::-;2368:12;:10;:12::i;:::-;2358:6;;-1:-1:-1;;;;;2358:6:0;;;:22;;;2350:67;;;;;-1:-1:-1;;;2350:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30601:1:::1;32544:16;:14;:16::i;:::-;32521:20;:39:::0;32587:26:::1;:24;:26::i;:::-;32570:14;:43:::0;-1:-1:-1;;;;;32627:21:0;::::1;::::0;32623:154:::1;;32683:15;32690:7;32683:6;:15::i;:::-;-1:-1:-1::0;;;;;32664:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;32746:20:::1;::::0;32712:22:::1;:31:::0;;;;;;:54;32623:154:::1;30638:12:::2;;30619:15;:31;30615:312;;30690:15;::::0;30679:27:::2;::::0;:6;;:10:::2;:27::i;:::-;30666:10;:40:::0;30615:312:::2;;;30757:12;::::0;30737:17:::2;::::0;30757:33:::2;::::0;30774:15:::2;30757:16;:33::i;:::-;30737:53;;30804:16;30823:25;30837:10;;30823:9;:13;;:25;;;;:::i;:::-;30900:15;::::0;30804:44;;-1:-1:-1;30875:41:0::2;::::0;:20:::2;:6:::0;30804:44;30875:10:::2;:20::i;:41::-;30862:10;:54:::0;-1:-1:-1;;30615:312:0::2;31296:12;::::0;:37:::2;::::0;;;;;31327:4:::2;31296:37;::::0;::::2;::::0;;;31281:12:::2;::::0;-1:-1:-1;;;;;31296:12:0::2;::::0;:22:::2;::::0;:37;;;;;::::2;::::0;;;;;;;;:12;:37;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;31296:37:0;31377:15:::2;::::0;31296:37;;-1:-1:-1;31365:28:0::2;::::0;31296:37;;31365:11:::2;:28::i;:::-;31351:10;;:42;;31343:79;;;::::0;;-1:-1:-1;;;31343:79:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;31450:15;31433:14;:32:::0;;;31510:15:::2;::::0;31490:36:::2;::::0;31450:15;31490:19:::2;:36::i;:::-;31475:12;:51:::0;31541:19:::2;::::0;;;;;;;::::2;::::0;;;;::::2;::::0;;::::2;32786:1;2427::::1;30517:1050:::0;:::o;29974:300::-;24417:1;25006:7;;:19;;24998:63;;;;;-1:-1:-1;;;24998:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24417:1;25136:7;:18;30028:10:::1;32544:16;:14;:16::i;:::-;32521:20;:39:::0;32587:26:::1;:24;:26::i;:::-;32570:14;:43:::0;-1:-1:-1;;;;;32627:21:0;::::1;::::0;32623:154:::1;;32683:15;32690:7;32683:6;:15::i;:::-;-1:-1:-1::0;;;;;32664:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;32746:20:::1;::::0;32712:22:::1;:31:::0;;;;;;:54;32623:154:::1;30075:10:::2;30050:14;30067:19:::0;;;:7:::2;:19;::::0;;;;;30100:10;;30096:172:::2;;30134:10;30148:1;30126:19:::0;;;:7:::2;:19;::::0;;;;:23;30163:12:::2;::::0;:45:::2;::::0;-1:-1:-1;;;;;30163:12:0;;::::2;::::0;30201:6;30163:25:::2;:45::i;:::-;30227:30;::::0;;;;;;;30238:10:::2;::::0;30227:30:::2;::::0;;;;;::::2;::::0;;::::2;30096:172;-1:-1:-1::0;;24374:1:0;25309:7;:22;29974:300::o;27737:110::-;-1:-1:-1;;;;;27822:18:0;27796:7;27822:18;;;:9;:18;;;;;;;27737:110::o;2777:145::-;2368:12;:10;:12::i;:::-;2358:6;;-1:-1:-1;;;;;2358:6:0;;;:22;;;2350:67;;;;;-1:-1:-1;;;2350:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2867:6:::1;::::0;2846:40:::1;::::0;2883:1:::1;::::0;-1:-1:-1;;;;;2867:6:0::1;::::0;2846:40:::1;::::0;2883:1;;2846:40:::1;2896:6;:19:::0;;-1:-1:-1;;2896:19:0::1;::::0;;2777:145::o;26940:26::-;;;-1:-1:-1;;;;;26940:26:0;;:::o;27009:29::-;;;;:::o;27853:129::-;27910:7;27936:39;27945:15;27962:12;;27936:8;:39::i;31679:313::-;2368:12;:10;:12::i;:::-;2358:6;;-1:-1:-1;;;;;2358:6:0;;;:22;;;2350:67;;;;;-1:-1:-1;;;2350:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24417:1:::1;25006:7;;:19;;24998:63;;;::::0;;-1:-1:-1;;;24998:63:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;24417:1;25136:7;:18:::0;31818:12:::2;::::0;-1:-1:-1;;;;;31794:37:0;;::::2;31818:12:::0;::::2;31794:37;;31786:83;;;;-1:-1:-1::0;;;31786:83:0::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31879:55;31913:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;31879:33:0;::::2;::::0;31922:11;31879:33:::2;:55::i;:::-;31949:36;::::0;;-1:-1:-1;;;;;31949:36:0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;;;;;;;;::::2;-1:-1:-1::0;;24374:1:0::1;25309:7;:22:::0;31679:313::o;27166:57::-;;;;;;;;;;;;;:::o;2154:77::-;2218:6;;-1:-1:-1;;;;;2218:6:0;2154:77;:::o;29248:363::-;24417:1;25006:7;;:19;;24998:63;;;;;-1:-1:-1;;;24998:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24417:1;25136:7;:18;29314:10:::1;32544:16;:14;:16::i;:::-;32521:20;:39:::0;32587:26:::1;:24;:26::i;:::-;32570:14;:43:::0;-1:-1:-1;;;;;32627:21:0;::::1;::::0;32623:154:::1;;32683:15;32690:7;32683:6;:15::i;:::-;-1:-1:-1::0;;;;;32664:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;32746:20:::1;::::0;32712:22:::1;:31:::0;;;;;;:54;32623:154:::1;29353:1:::2;29344:6;:10;29336:37;;;::::0;;-1:-1:-1;;;29336:37:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;29398:12;::::0;:24:::2;::::0;29415:6;29398:16:::2;:24::i;:::-;29383:12;:39:::0;29466:10:::2;29456:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;29482:6;29456:25:::2;:33::i;:::-;29442:10;29432:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;29499:12:::2;::::0;:64:::2;::::0;-1:-1:-1;;;;;29499:12:0;;::::2;::::0;29549:4:::2;29556:6:::0;29499:29:::2;:64::i;:::-;29578:26;::::0;;;;;;;29585:10:::2;::::0;29578:26:::2;::::0;;;;;::::2;::::0;;::::2;-1:-1:-1::0;;24374:1:0;25309:7;:22;29248:363::o;27089:29::-;;;;:::o;31998:425::-;2368:12;:10;:12::i;:::-;2358:6;;-1:-1:-1;;;;;2358:6:0;;;:22;;;2350:67;;;;;-1:-1:-1;;;2350:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32120:12:::1;;32102:15;:30;32081:165;;;;-1:-1:-1::0;;;32081:165:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32283:1;32264:16;:20;32256:62;;;::::0;;-1:-1:-1;;;32256:62:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;32328:15;:34:::0;;;32377:39:::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;31998:425:::0;:::o;27988:322::-;28035:7;28058:12;;28074:1;28058:17;28054:75;;;-1:-1:-1;28098:20:0;;28091:27;;28054:75;28157:146;28199:90;28276:12;;28199:72;28266:4;28199:62;28250:10;;28199:46;28230:14;;28199:26;:24;:26::i;:46::-;:50;;:62::i;:90::-;28157:20;;;:24;:146::i;26908:26::-;;;-1:-1:-1;;;;;26908:26:0;;:::o;27124:35::-;;;;:::o;30280:94::-;30334:10;30324:21;;;;:9;:21;;;;;;30315:31;;:8;:31::i;:::-;30356:11;:9;:11::i;:::-;30280:94::o;26972:31::-;;;;:::o;28695:547::-;24417:1;25006:7;;:19;;24998:63;;;;;-1:-1:-1;;;24998:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24417:1;25136:7;:18;28817:10:::1;32544:16;:14;:16::i;:::-;32521:20;:39:::0;32587:26:::1;:24;:26::i;:::-;32570:14;:43:::0;-1:-1:-1;;;;;32627:21:0;::::1;::::0;32623:154:::1;;32683:15;32690:7;32683:6;:15::i;:::-;-1:-1:-1::0;;;;;32664:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;32746:20:::1;::::0;32712:22:::1;:31:::0;;;;;;:54;32623:154:::1;28856:1:::2;28847:6;:10;28839:37;;;::::0;;-1:-1:-1;;;28839:37:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;28901:12;::::0;:24:::2;::::0;28918:6;28901:16:::2;:24::i;:::-;28886:12;:39:::0;28969:10:::2;28959:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;28985:6;28959:25:::2;:33::i;:::-;28945:10;28935:21;::::0;;;:9:::2;:21;::::0;;;;;:57;;;;29044:12:::2;::::0;29021:98;;;;;::::2;::::0;::::2;::::0;;;;29086:4:::2;29021:98:::0;;;;;;;;;;;;;;;;::::2;::::0;::::2;::::0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29044:12:0;;::::2;::::0;29021:44:::2;::::0;:98;;;;;28935:21;29021:98;;;;;;28935:21;29044:12;29021:98;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;29130:12:0::2;::::0;:64:::2;::::0;-1:-1:-1;;;;;;29130:12:0::2;::::0;-1:-1:-1;29160:10:0::2;29180:4;29187:6:::0;29130:29:::2;:64::i;:::-;29209:26;::::0;;;;;;;29216:10:::2;::::0;29209:26:::2;::::0;;;;;::::2;::::0;;::::2;-1:-1:-1::0;;24374:1:0;25309:7;:22;-1:-1:-1;;;;28695:547:0:o;3071:240::-;2368:12;:10;:12::i;:::-;2358:6;;-1:-1:-1;;;;;2358:6:0;;;:22;;;2350:67;;;;;-1:-1:-1;;;2350:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3159:22:0;::::1;3151:73;;;;-1:-1:-1::0;;;3151:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3260:6;::::0;3239:38:::1;::::0;-1:-1:-1;;;;;3239:38:0;;::::1;::::0;3260:6:::1;::::0;3239:38:::1;::::0;3260:6:::1;::::0;3239:38:::1;3287:6;:17:::0;;-1:-1:-1;;3287:17:0::1;-1:-1:-1::0;;;;;3287:17:0;;;::::1;::::0;;;::::1;::::0;;3071:240::o;5514:134::-;5572:7;5598:43;5602:1;5605;5598:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5591:50;5514:134;-1:-1:-1;;;5514:134:0:o;6373:459::-;6431:7;6672:6;6668:45;;-1:-1:-1;6701:1:0;6694:8;;6668:45;6735:5;;;6739:1;6735;:5;:1;6758:5;;;;;:10;6750:56;;;;-1:-1:-1;;;6750:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:130;7352:7;7378:39;7382:1;7385;7378:39;;;;;;;;;;;;;;;;;:3;:39::i;5067:176::-;5125:7;5156:5;;;5179:6;;;;5171:46;;;;;-1:-1:-1;;;5171:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;19669:175;19778:58;;;-1:-1:-1;;;;;19778:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19801:23;19778:58;;;19751:86;;19771:5;;19751:19;:86::i;:::-;19669:175;;;:::o;723:104::-;810:10;723:104;:::o;3742:::-;3800:7;3830:1;3826;:5;:13;;3838:1;3826:13;;;-1:-1:-1;3834:1:0;;3742:104;-1:-1:-1;3742:104:0:o;19850:203::-;19977:68;;;-1:-1:-1;;;;;19977:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20000:27;19977:68;;;19950:96;;19970:5;;19950:19;:96::i;:::-;19850:203;;;;:::o;5939:187::-;6025:7;6060:12;6052:6;;;;6044:29;;;;-1:-1:-1;;;6044:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6095:5:0;;;5939:187::o;7906:272::-;7992:7;8026:12;8019:5;8011:28;;;;-1:-1:-1;;;8011:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8049:9;8065:1;8061;:5;;;;;;;7906:272;-1:-1:-1;;;;;7906:272:0:o;21932:751::-;22351:23;22377:69;22405:4;22377:69;;;;;;;;;;;;;;;;;22385:5;-1:-1:-1;;;;;22377:27:0;;;:69;;;;;:::i;:::-;22460:17;;22351:95;;-1:-1:-1;22460:21:0;22456:221;;22600:10;22589:30;;;;;;;;;;;;;;;-1:-1:-1;22589:30:0;22581:85;;;;-1:-1:-1;;;22581:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15754:193;15857:12;15888:52;15910:6;15918:4;15924:1;15927:12;15888:21;:52::i;:::-;15881:59;15754:193;-1:-1:-1;;;;15754:193:0:o;16781:523::-;16908:12;16965:5;16940:21;:30;;16932:81;;;;-1:-1:-1;;;16932:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17031:18;17042:6;17031:10;:18::i;:::-;17023:60;;;;;-1:-1:-1;;;17023:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;17154:12;17168:23;17195:6;-1:-1:-1;;;;;17195:11:0;17215:5;17223:4;17195:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17195:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17153:75;;;;17245:52;17263:7;17272:10;17284:12;17245:17;:52::i;:::-;17238:59;16781:523;-1:-1:-1;;;;;;;16781:523:0:o;12899:413::-;13259:20;13297:8;;;12899:413::o;18284:725::-;18399:12;18427:7;18423:580;;;-1:-1:-1;18457:10:0;18450:17;;18423:580;18568:17;;:21;18564:429;;18826:10;18820:17;18886:15;18873:10;18869:2;18865:19;18858:44;18775:145;18958:20;;-1:-1:-1;;;18958:20:0;;;;;;;;;;;;;;;;;18965:12;;18958:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1362400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1232",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"lastTimeRewardApplicable()": "1195",
								"lastUpdateTime()": "1065",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "1127",
								"periodFinish()": "1064",
								"recoverERC20(address,uint256)": "infinite",
								"renounceOwnership()": "24234",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "1087",
								"rewardRate()": "1087",
								"rewards(address)": "1193",
								"rewardsDuration()": "1088",
								"rewardsToken()": "1104",
								"setRewardsDuration(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"stakingToken()": "1104",
								"totalSupply()": "1090",
								"transferOwnership(address)": "infinite",
								"userRewardPerTokenPaid(address)": "1192",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27002,
									"end": 27003,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26972,
									"end": 27003,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26972,
									"end": 27003,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27037,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27009,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27009,
									"end": 27038,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27077,
									"end": 27083,
									"name": "PUSH",
									"source": 0,
									"value": "15180"
								},
								{
									"begin": 27044,
									"end": 27083,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27044,
									"end": 27083,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27409,
									"end": 27595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24374,
									"end": 24375,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24489,
									"end": 24496,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24489,
									"end": 24511,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24489,
									"end": 24511,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24489,
									"end": 24511,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1973,
									"end": 1985,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1973,
									"end": 1985,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1973,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2001,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2028,
									"end": 2071,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2028,
									"end": 2071,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1995,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2028,
									"end": 2071,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2028,
									"end": 2071,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2028,
									"end": 2071,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27506,
									"end": 27518,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27506,
									"end": 27542,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27564,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27552,
									"end": 27588,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 723,
									"end": 827,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 723,
									"end": 827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 810,
									"end": 820,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 723,
									"end": 827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 723,
									"end": 827,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26736,
									"end": 33158,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfa5b2869e65e714faf1cd7309f0c87d8d4eb6a3bc1fc992421b724c62cd72e764736f6c63430007060033",
									".code": [
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "8980F11F"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "CD3DAF9D"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "EBE2B12B"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "ECD9BA82"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "CD3DAF9D"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "DF136D65"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "CC1A378F"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "8980F11F"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "8B876347"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "3C6B16AB"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "7B0A47EE"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "80FAA57D"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "3C6B16AB"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "3D18B912"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "1C1F78EB"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "1C1F78EB"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "386A9525"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "8CC262"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "700037D"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 33158,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28370,
											"end": 28377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28495,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28462,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28440,
											"end": 28471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28396,
											"end": 28505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28396,
											"end": 28483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28478,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 28478,
											"end": 28482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28396,
											"end": 28473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28419,
											"end": 28472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28419,
											"end": 28472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28419,
											"end": 28435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28419,
											"end": 28433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28419,
											"end": 28435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28419,
											"end": 28435,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28419,
											"end": 28435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28419,
											"end": 28439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28419,
											"end": 28439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28419,
											"end": 28472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28419,
											"end": 28472,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28419,
											"end": 28472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28405,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28396,
											"end": 28473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28396,
											"end": 28473,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28396,
											"end": 28473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 28396,
											"end": 28483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28396,
											"end": 28483,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28396,
											"end": 28483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28396,
											"end": 28487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 28396,
											"end": 28505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28396,
											"end": 28505,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28396,
											"end": 28505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28389,
											"end": 28505,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28316,
											"end": 28512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27271,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27712,
											"end": 27724,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 27712,
											"end": 27724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27731,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28573,
											"end": 28580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28614,
											"end": 28629,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28614,
											"end": 28629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28609,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28599,
											"end": 28609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28599,
											"end": 28613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28599,
											"end": 28630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28592,
											"end": 28630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28592,
											"end": 28630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28518,
											"end": 28637,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25136,
											"end": 25143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29684,
											"end": 29694,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32544,
											"end": 32558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32521,
											"end": 32541,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32521,
											"end": 32560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 32587,
											"end": 32611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32584,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32570,
											"end": 32613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32690,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32671,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32734,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29723,
											"end": 29724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29714,
											"end": 29720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29714,
											"end": 29724,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29706,
											"end": 29746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29783,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29771,
											"end": 29783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29771,
											"end": 29795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29788,
											"end": 29794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29771,
											"end": 29787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29771,
											"end": 29795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29771,
											"end": 29795,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29771,
											"end": 29795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29756,
											"end": 29768,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29756,
											"end": 29795,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29849,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29825,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29814,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29872,
											"end": 29884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29872,
											"end": 29917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29872,
											"end": 29884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 29916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29872,
											"end": 29917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29872,
											"end": 29917,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29872,
											"end": 29917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29942,
											"end": 29952,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29942,
											"end": 29952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29932,
											"end": 29961,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24374,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25309,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25309,
											"end": 25331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27083,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32544,
											"end": 32558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32521,
											"end": 32541,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32521,
											"end": 32560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32587,
											"end": 32611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32584,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32570,
											"end": 32613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32690,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32671,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32734,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30638,
											"end": 30650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30619,
											"end": 30634,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30619,
											"end": 30650,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30690,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30690,
											"end": 30705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30679,
											"end": 30706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 30679,
											"end": 30706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30679,
											"end": 30706,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30679,
											"end": 30706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30666,
											"end": 30676,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30666,
											"end": 30706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30757,
											"end": 30769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30757,
											"end": 30769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30737,
											"end": 30754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30737,
											"end": 30754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30757,
											"end": 30790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30757,
											"end": 30790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30774,
											"end": 30789,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30757,
											"end": 30773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30757,
											"end": 30790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30757,
											"end": 30790,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30757,
											"end": 30790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30737,
											"end": 30790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30737,
											"end": 30790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 30837,
											"end": 30847,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30837,
											"end": 30847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30823,
											"end": 30836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 30823,
											"end": 30848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30900,
											"end": 30915,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30900,
											"end": 30915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30875,
											"end": 30916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30875,
											"end": 30916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30875,
											"end": 30895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 30875,
											"end": 30881,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30875,
											"end": 30885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 30875,
											"end": 30895,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30875,
											"end": 30916,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30875,
											"end": 30916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30862,
											"end": 30872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30862,
											"end": 30916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30615,
											"end": 30927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31296,
											"end": 31308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31331,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31281,
											"end": 31293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31281,
											"end": 31293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31296,
											"end": 31308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31318,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31296,
											"end": 31318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31308,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31392,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31377,
											"end": 31392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31365,
											"end": 31393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 31365,
											"end": 31393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31296,
											"end": 31333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31365,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31365,
											"end": 31393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31365,
											"end": 31393,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 31365,
											"end": 31393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31361,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31351,
											"end": 31361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31393,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 31343,
											"end": 31422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31465,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31447,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31433,
											"end": 31465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31433,
											"end": 31465,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31510,
											"end": 31525,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31510,
											"end": 31525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31490,
											"end": 31526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 31490,
											"end": 31526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31450,
											"end": 31465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31490,
											"end": 31509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31490,
											"end": 31526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31490,
											"end": 31526,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 31490,
											"end": 31526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31475,
											"end": 31487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31475,
											"end": 31526,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "PUSH",
											"source": 0,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31560,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 32786,
											"end": 32787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30517,
											"end": 31567,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25136,
											"end": 25143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30028,
											"end": 30038,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32544,
											"end": 32558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32521,
											"end": 32541,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32521,
											"end": 32560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32587,
											"end": 32611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32584,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32570,
											"end": 32613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32690,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32671,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32734,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30085,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30067,
											"end": 30074,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30067,
											"end": 30086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30096,
											"end": 30268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 30096,
											"end": 30268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30144,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30133,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30163,
											"end": 30175,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30163,
											"end": 30175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30163,
											"end": 30208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30163,
											"end": 30208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30163,
											"end": 30175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30163,
											"end": 30175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30163,
											"end": 30175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30163,
											"end": 30175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30201,
											"end": 30207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30163,
											"end": 30188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30163,
											"end": 30208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30163,
											"end": 30208,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30163,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30238,
											"end": 30248,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30238,
											"end": 30248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 30096,
											"end": 30268,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 30096,
											"end": 30268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24374,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25309,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25309,
											"end": 25331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30274,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27796,
											"end": 27803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27847,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2886,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2846,
											"end": 2886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2886,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2922,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26940,
											"end": 26966,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27009,
											"end": 27038,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27853,
											"end": 27982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 27917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27936,
											"end": 27975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27945,
											"end": 27960,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27962,
											"end": 27974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27962,
											"end": 27974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27936,
											"end": 27944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27936,
											"end": 27975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25136,
											"end": 25143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31818,
											"end": 31830,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31818,
											"end": 31830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31794,
											"end": 31831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31818,
											"end": 31830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31818,
											"end": 31830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31794,
											"end": 31831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH data",
											"source": 0,
											"value": "F43DE9F2A3539B2AC9CF1844588E9CC0ACD1B2BDB1EC43734F76440993EDE0A9"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31786,
											"end": 31869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31879,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 31913,
											"end": 31920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 31913,
											"end": 31918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 31913,
											"end": 31920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31913,
											"end": 31920,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 31913,
											"end": 31920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31879,
											"end": 31912,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31879,
											"end": 31912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31879,
											"end": 31912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31922,
											"end": 31933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31879,
											"end": 31912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31879,
											"end": 31934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31879,
											"end": 31934,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 31879,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "PUSH",
											"source": 0,
											"value": "8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31985,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24374,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25309,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25309,
											"end": 25331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27166,
											"end": 27223,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2231,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25136,
											"end": 25143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29314,
											"end": 29324,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 32544,
											"end": 32558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32521,
											"end": 32541,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32521,
											"end": 32560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32587,
											"end": 32611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32584,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32570,
											"end": 32613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 32690,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32671,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32734,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29344,
											"end": 29350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29354,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 29336,
											"end": 29373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29410,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29398,
											"end": 29410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 29398,
											"end": 29422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29415,
											"end": 29421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29398,
											"end": 29422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29398,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 29398,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29383,
											"end": 29395,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29383,
											"end": 29422,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29476,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29465,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29456,
											"end": 29489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29456,
											"end": 29489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29456,
											"end": 29489,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29456,
											"end": 29489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29452,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29441,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29489,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29511,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29499,
											"end": 29511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 29499,
											"end": 29563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29499,
											"end": 29511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29549,
											"end": 29553,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29556,
											"end": 29562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 29528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 29499,
											"end": 29563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29499,
											"end": 29563,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 29499,
											"end": 29563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29585,
											"end": 29595,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29585,
											"end": 29595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29604,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24374,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25309,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25309,
											"end": 25331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29611,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27089,
											"end": 27118,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32120,
											"end": 32132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32120,
											"end": 32132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32102,
											"end": 32117,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32102,
											"end": 32132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH data",
											"source": 0,
											"value": "7F2725172F5941B576A01EC7036D341E0C837E280F27B110CB3E6FD2F2C4A56"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32081,
											"end": 32246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32283,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32264,
											"end": 32280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32264,
											"end": 32284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "526577617264206475726174696F6E2063616E2774206265207A65726F000000"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32256,
											"end": 32318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32343,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32328,
											"end": 32362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32362,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"source": 0,
											"value": "FB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27988,
											"end": 28310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28058,
											"end": 28070,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28058,
											"end": 28070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28074,
											"end": 28075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28058,
											"end": 28075,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 28054,
											"end": 28129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28098,
											"end": 28118,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28098,
											"end": 28118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28091,
											"end": 28118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28091,
											"end": 28118,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28129,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 28054,
											"end": 28129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28199,
											"end": 28289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 28276,
											"end": 28288,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28276,
											"end": 28288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28199,
											"end": 28271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28266,
											"end": 28270,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 28199,
											"end": 28261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28250,
											"end": 28260,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28250,
											"end": 28260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28199,
											"end": 28245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28230,
											"end": 28244,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28230,
											"end": 28244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28199,
											"end": 28225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28199,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28199,
											"end": 28225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28199,
											"end": 28245,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28199,
											"end": 28245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28199,
											"end": 28249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28199,
											"end": 28249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28199,
											"end": 28261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28199,
											"end": 28289,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 28199,
											"end": 28289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28177,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28157,
											"end": 28177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 28157,
											"end": 28303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26908,
											"end": 26934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27124,
											"end": 27159,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30334,
											"end": 30344,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30333,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30324,
											"end": 30345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30315,
											"end": 30346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 30315,
											"end": 30346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30315,
											"end": 30323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30315,
											"end": 30346,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30315,
											"end": 30346,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 30315,
											"end": 30346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30356,
											"end": 30367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 30356,
											"end": 30365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30356,
											"end": 30367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30356,
											"end": 30367,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 30356,
											"end": 30367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30374,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 27003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 24998,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25136,
											"end": 25143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25136,
											"end": 25154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28817,
											"end": 28827,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32544,
											"end": 32558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32544,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32521,
											"end": 32541,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32521,
											"end": 32560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 32587,
											"end": 32611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 32587,
											"end": 32613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32584,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32570,
											"end": 32613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 32690,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32683,
											"end": 32689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 32683,
											"end": 32698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32671,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32734,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32712,
											"end": 32766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 32623,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28856,
											"end": 28857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28847,
											"end": 28853,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28847,
											"end": 28857,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 28839,
											"end": 28876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28901,
											"end": 28913,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28901,
											"end": 28913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28901,
											"end": 28925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 28901,
											"end": 28925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28918,
											"end": 28924,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28901,
											"end": 28917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 28901,
											"end": 28925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28901,
											"end": 28925,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 28901,
											"end": 28925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28886,
											"end": 28898,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28886,
											"end": 28925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28969,
											"end": 28979,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28968,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28959,
											"end": 28992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28985,
											"end": 28991,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 28959,
											"end": 28992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28959,
											"end": 28992,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28959,
											"end": 28992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28955,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28944,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28992,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28992,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28992,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29090,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29065,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 29021,
											"end": 29065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28935,
											"end": 28956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29044,
											"end": 29056,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 29021,
											"end": 29119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29130,
											"end": 29142,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29130,
											"end": 29142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29130,
											"end": 29194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 29130,
											"end": 29194,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29130,
											"end": 29142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29130,
											"end": 29142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29160,
											"end": 29170,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29180,
											"end": 29184,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29193,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29130,
											"end": 29159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 29130,
											"end": 29194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29130,
											"end": 29194,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 29130,
											"end": 29194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29216,
											"end": 29226,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29216,
											"end": 29226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29235,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24374,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25309,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25309,
											"end": 25331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28695,
											"end": 29242,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2350,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3151,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3277,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3311,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5514,
											"end": 5648,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5514,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5598,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5648,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6373,
											"end": 6832,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6373,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6668,
											"end": 6713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6694,
											"end": 6702,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6713,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6668,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6740,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7294,
											"end": 7424,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7294,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7382,
											"end": 7383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7378,
											"end": 7417,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5243,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5067,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19669,
											"end": 19844,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 19669,
											"end": 19844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19801,
											"end": 19824,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 19751,
											"end": 19837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19771,
											"end": 19776,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19771,
											"end": 19776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 19751,
											"end": 19837,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19751,
											"end": 19837,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 19751,
											"end": 19837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19669,
											"end": 19844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19669,
											"end": 19844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19669,
											"end": 19844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19669,
											"end": 19844,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 723,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 820,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 723,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 827,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3742,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3742,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 3846,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20000,
											"end": 20027,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19977,
											"end": 20045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 20046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 19950,
											"end": 20046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19970,
											"end": 19975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19970,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 19950,
											"end": 20046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19950,
											"end": 20046,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 19950,
											"end": 20046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 20053,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5939,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5939,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6095,
											"end": 6100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5939,
											"end": 6126,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7906,
											"end": 8178,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7906,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8065,
											"end": 8066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 8178,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7906,
											"end": 8178,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21932,
											"end": 22683,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 21932,
											"end": 22683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 22405,
											"end": 22409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22385,
											"end": 22390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22377,
											"end": 22404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 22377,
											"end": 22404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 22377,
											"end": 22446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22460,
											"end": 22477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22460,
											"end": 22477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22460,
											"end": 22481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 22456,
											"end": 22677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22589,
											"end": 22619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15947,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 15754,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15869,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15888,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 15910,
											"end": 15916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15924,
											"end": 15925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15927,
											"end": 15939,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 15888,
											"end": 15940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15888,
											"end": 15940,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 15888,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 15940,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15947,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15754,
											"end": 15947,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16781,
											"end": 17304,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 16781,
											"end": 17304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16965,
											"end": 16970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16940,
											"end": 16961,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 16940,
											"end": 16970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16940,
											"end": 16970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH data",
											"source": 0,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 16932,
											"end": 17013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17042,
											"end": 17048,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 17023,
											"end": 17083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17168,
											"end": 17191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17201,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17195,
											"end": 17206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17215,
											"end": 17220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17223,
											"end": 17227,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17195,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 17263,
											"end": 17270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17272,
											"end": 17282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17284,
											"end": 17296,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 17245,
											"end": 17297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17245,
											"end": 17297,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 17245,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17297,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 17304,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16781,
											"end": 17304,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12899,
											"end": 13312,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 12899,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13259,
											"end": 13279,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13297,
											"end": 13305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13297,
											"end": 13305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13297,
											"end": 13305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 13312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18284,
											"end": 19009,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 18284,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18399,
											"end": 18411,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18427,
											"end": 18434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18423,
											"end": 19003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18423,
											"end": 19003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 18423,
											"end": 19003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18457,
											"end": 18467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18450,
											"end": 18467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 18450,
											"end": 18467,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18423,
											"end": 19003,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 18423,
											"end": 19003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18564,
											"end": 18993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 18564,
											"end": 18993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18826,
											"end": 18836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18820,
											"end": 18837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18886,
											"end": 18901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18865,
											"end": 18884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18858,
											"end": 18902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 18920,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 18775,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 18977,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 18977,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 18958,
											"end": 18978,
											"name": "JUMP",
											"source": 0
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"7F2725172F5941B576A01EC7036D341E0C837E280F27B110CB3E6FD2F2C4A56": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F43DE9F2A3539B2AC9CF1844588E9CC0ACD1B2BDB1EC43734F76440993EDE0A9": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"periodFinish()": "ebe2b12b",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceOwnership()": "715018a6",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"setRewardsDuration(uint256)": "cc1a378f",
							"stake(uint256)": "a694fc3a",
							"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)": "ecd9ba82",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"stakeWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/StakingRewards.sol\":{\"keccak256\":\"0x1127b3144616e58f4d92bcf176e6bb57ab939531e57ad9ae1e67efa8ca7cd06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883c641552d9686e235dbf9c995b6239e3ab893817b307988394c42ea4e4d395\",\"dweb:/ipfs/QmVqRc8nfeUTTk92YtGvtdv9YTRFS2DRwYNw6Sn3ZMmihB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 935,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1094,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)473"
							},
							{
								"astId": 1096,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)473"
							},
							{
								"astId": 1099,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1102,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1105,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1107,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1109,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1113,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1117,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1119,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1123,
								"contract": "CoreContracts/StakingRewards.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)473": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "CoreContracts/StakingRewards.sol:56:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2078,
					"file": "CoreContracts/StakingRewards.sol",
					"start": 1919
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "CoreContracts/StakingRewards.sol:661:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 24518,
					"file": "CoreContracts/StakingRewards.sol",
					"start": 24455
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "CoreContracts/StakingRewards.sol:746:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor(\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 27595,
					"file": "CoreContracts/StakingRewards.sol",
					"start": 27409
				},
				"type": "Warning"
			}
		],
		"sources": {
			"CoreContracts/StakingRewards.sol": {
				"ast": {
					"absolutePath": "CoreContracts/StakingRewards.sol",
					"exportedSymbols": {
						"Address": [
							716
						],
						"Context": [
							22
						],
						"IERC20": [
							473
						],
						"IKalyswapERC20": [
							1081
						],
						"Math": [
							201
						],
						"Ownable": [
							129
						],
						"ReentrancyGuard": [
							964
						],
						"SafeERC20": [
							925
						],
						"SafeMath": [
							396
						],
						"StakingRewards": [
							1727
						]
					},
					"id": 1728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "158:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "793:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "810:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "810:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "803:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "776:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:17:0"
									},
									"scope": 22,
									"src": "723:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "898:165:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "908:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1048:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1048:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "1041:15:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "884:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "884:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:14:0"
									},
									"scope": 22,
									"src": "833:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1728,
							"src": "691:374:0"
						},
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1133:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 25,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1690:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 26,
									"nodeType": "InheritanceSpecifier",
									"src": "1690:7:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "1166:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 129,
									"src": "1704:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1704:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 34,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1760:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1791:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:57:0"
									},
									"src": "1733:84:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1943:135:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "1953:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 38,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1953:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1973:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1953:32:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1995:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "2004:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1995:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1995:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2057:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2049:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 48,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2049:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2049:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 52,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2061:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 47,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2028:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "EmitStatement",
												"src": "2023:48:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1823:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:0:0"
									},
									"scope": 129,
									"src": "1919:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "2201:30:0",
										"statements": [
											{
												"expression": {
													"id": 62,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "2218:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 61,
												"id": 63,
												"nodeType": "Return",
												"src": "2211:13:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2084:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2192:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:9:0"
									},
									"scope": 129,
									"src": "2154:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "2340:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "2358:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 70,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "2368:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2368:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2358:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2382:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2350:67:0"
											},
											{
												"id": 76,
												"nodeType": "PlaceholderStatement",
												"src": "2427:1:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2237:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 78,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:2:0"
									},
									"src": "2319:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2831:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 85,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2883:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 86,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 84,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2846:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "EmitStatement",
												"src": "2841:45:0"
											},
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "2896:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 93,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2905:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2905:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2896:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2896:19:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2441:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 82,
											"modifierName": {
												"id": 81,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "2821:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2821:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2803:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2831:0:0"
									},
									"scope": 129,
									"src": "2777:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3141:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "3159:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3179:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 110,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3171:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3171:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3159:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3151:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "3151:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 119,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 120,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 118,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "3239:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "EmitStatement",
												"src": "3234:43:0"
											},
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3287:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 124,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3296:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3287:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "3287:17:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2928:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 106,
											"modifierName": {
												"id": 105,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "3131:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3131:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3098:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3097:18:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3141:0:0"
									},
									"scope": 129,
									"src": "3071:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1728,
							"src": "1661:1652:0"
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3376:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "3409:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3633:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 141,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3650:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 142,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3655:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3650:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 145,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "3663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3650:14:0",
													"trueExpression": {
														"id": 144,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3659:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 147,
												"nodeType": "Return",
												"src": "3643:21:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3502:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3578:22:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3624:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:9:0"
									},
									"scope": 201,
									"src": "3566:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "3809:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 159,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3826:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 160,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "3830:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3826:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 163,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "3838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3826:13:0",
													"trueExpression": {
														"id": 162,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "3834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 158,
												"id": 165,
												"nodeType": "Return",
												"src": "3819:20:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3677:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3755:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3766:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3754:22:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3800:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:9:0"
									},
									"scope": 201,
									"src": "3742:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "4030:119:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 177,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "4102:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4106:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "4102:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 180,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 181,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "4112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4116:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "4112:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 184,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4101:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 186,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 170,
																					"src": "4123:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 187,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4127:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "4123:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 189,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 172,
																					"src": "4131:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4135:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "4131:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4123:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4122:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4140:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4122:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4121:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4101:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 176,
												"id": 198,
												"nodeType": "Return",
												"src": "4094:48:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3852:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:22:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4021:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:9:0"
									},
									"scope": 201,
									"src": "3959:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1728,
							"src": "3483:668:0"
						},
						{
							"id": 202,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4218:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "4251:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "5134:109:0",
										"statements": [
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "5144:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "5156:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5160:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5144:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "5179:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "5184:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5187:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5171:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "5171:46:0"
											},
											{
												"expression": {
													"id": 226,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 214,
													"src": "5235:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 227,
												"nodeType": "Return",
												"src": "5228:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4838:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5080:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5091:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5079:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5125:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:9:0"
									},
									"scope": 396,
									"src": "5067:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "5581:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "5602:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 241,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5605:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5608:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 239,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246,
															274
														],
														"referencedDeclaration": 274,
														"src": "5598:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5598:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 244,
												"nodeType": "Return",
												"src": "5591:50:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "5249:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5538:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5526:22:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:9:0"
									},
									"scope": 396,
									"src": "5514:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "6034:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "6052:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 260,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "6057:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6052:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 262,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "6060:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6044:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "6044:29:0"
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "6083:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 267,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "6095:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 268,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "6099:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6083:17:0"
											},
											{
												"expression": {
													"id": 271,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "6118:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 272,
												"nodeType": "Return",
												"src": "6111:8:0"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "5654:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5952:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5963:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5974:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5951:50:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "6025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:9:0"
									},
									"scope": 396,
									"src": "5939:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "6440:392:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 284,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "6672:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6672:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "6668:45:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6680:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 283,
															"id": 288,
															"nodeType": "Return",
															"src": "6694:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "6723:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "6735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "6739:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 298,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6758:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 299,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "6762:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6758:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 301,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "6767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6770:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6750:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "6750:56:0"
											},
											{
												"expression": {
													"id": 306,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "6824:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 283,
												"id": 307,
												"nodeType": "Return",
												"src": "6817:8:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "6132:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "6386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "6397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:22:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "6431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6430:9:0"
									},
									"scope": 396,
									"src": "6373:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "7361:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "7382:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 321,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "7385:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7388:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 319,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															354
														],
														"referencedDeclaration": 354,
														"src": "7378:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7378:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "7371:46:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "6838:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7307:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7318:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7306:22:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7351:9:0"
									},
									"scope": 396,
									"src": "7294:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "8001:177:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "8019:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8023:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 342,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "8026:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8011:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8011:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8011:28:0"
											},
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 353,
														"src": "8049:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 345,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 347,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "8061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 348,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "8065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8049:17:0"
											},
											{
												"expression": {
													"id": 351,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 346,
													"src": "8170:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 337,
												"id": 352,
												"nodeType": "Return",
												"src": "8163:8:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "7430:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7919:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7941:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7941:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7918:50:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7992:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7991:9:0"
									},
									"scope": 396,
									"src": "7906:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "8696:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8717:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 366,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8720:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8723:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 364,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															371,
															395
														],
														"referencedDeclaration": 395,
														"src": "8713:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8713:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 363,
												"id": 369,
												"nodeType": "Return",
												"src": "8706:44:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "8184:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "8642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "8653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8641:22:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "8687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8686:9:0"
									},
									"scope": 396,
									"src": "8629:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "9323:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "9341:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9346:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 387,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "9349:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9333:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "9333:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "9379:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 391,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "9383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9379:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 393,
												"nodeType": "Return",
												"src": "9372:12:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "8763:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9252:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9263:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9240:50:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9314:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9313:9:0"
									},
									"scope": 396,
									"src": "9228:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1728,
							"src": "4815:4578:0"
						},
						{
							"id": 397,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9467:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 398,
								"nodeType": "StructuredDocumentation",
								"src": "9500:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 473,
							"linearizedBaseContracts": [
								473
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "9594:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9685:2:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "9711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9710:9:0"
									},
									"scope": 473,
									"src": "9665:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "9726:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "9822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9821:17:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "9862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9861:9:0"
									},
									"scope": 473,
									"src": "9803:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "9877:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "10109:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10108:35:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "10162:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10161:6:0"
									},
									"scope": 473,
									"src": "10091:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "10174:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "10462:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "10477:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10461:32:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "10517:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10516:9:0"
									},
									"scope": 473,
									"src": "10443:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "10532:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "11196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "11213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11195:33:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "11247:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11246:6:0"
									},
									"scope": 473,
									"src": "11179:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "11259:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "11582:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "11598:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "11617:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11581:51:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "11651:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11650:6:0"
									},
									"scope": 473,
									"src": "11560:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "11663:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 463,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11841:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11863:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11883:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11840:57:0"
									},
									"src": "11826:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "11904:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 472,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12072:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12095:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12120:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12071:63:0"
									},
									"src": "12057:78:0"
								}
							],
							"scope": 1728,
							"src": "9571:2566:0"
						},
						{
							"id": 474,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12206:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "12239:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "12965:347:0",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "13162:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"nodeType": "VariableDeclarationStatement",
												"src": "13162:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13249:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13251:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "13271:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "13259:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13259:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13251:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "13271:7:0",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "13251:4:0",
														"valueSize": 1
													}
												],
												"id": 486,
												"nodeType": "InlineAssembly",
												"src": "13240:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "13297:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13297:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 490,
												"nodeType": "Return",
												"src": "13290:15:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "12329:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "12919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12918:17:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "12959:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12959:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12958:6:0"
									},
									"scope": 716,
									"src": "12899:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "14300:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14326:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$716",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$716",
																				"typeString": "library Address"
																			}
																		],
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14318:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14318:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "14318:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "14343:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14318:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14351:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14310:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14310:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "14310:73:0"
											},
											{
												"assignments": [
													512,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "14472:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14472:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14522:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 513,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "14490:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14490:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "14513:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14490:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14490:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14471:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "14543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14552:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14535:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "14535:78:0"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "13318:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "14248:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14248:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "14275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14247:43:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14300:0:0"
									},
									"scope": 716,
									"src": "14229:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "15450:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "15478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15486:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15492:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 536,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															563
														],
														"referencedDeclaration": 563,
														"src": "15465:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15465:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "15458:67:0"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "14626:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15383:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15399:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15399:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15382:35:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15436:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:14:0"
									},
									"scope": 716,
									"src": "15361:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "15871:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "15910:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "15918:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15924:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 559,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "15927:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 555,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "15888:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15888:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "15881:59:0"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "15538:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "15776:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "15792:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "15811:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15775:63:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "15857:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15857:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15856:14:0"
									},
									"scope": 716,
									"src": "15754:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "16422:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "16461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "16469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "16475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16482:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "16439:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16439:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "16432:94:0"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "15953:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "16340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "16356:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "16375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16339:50:0"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "16408:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16407:14:0"
									},
									"scope": 716,
									"src": "16309:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "16922:382:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "16948:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$716",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$716",
																				"typeString": "library Address"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16940:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16940:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "16940:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "16965:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16940:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16972:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16932:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "16932:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "17042:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "17031:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17031:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17051:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17023:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17023:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "17023:60:0"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "17154:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17154:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "17168:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "17223:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 619,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "17195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "17195:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "17215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17195:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17195:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17153:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "17263:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "17272:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "17284:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 626,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "17245:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17245:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 631,
												"nodeType": "Return",
												"src": "17238:59:0"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "16539:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "16812:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "16828:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "16847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "16862:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16862:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16811:78:0"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "16908:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16907:14:0"
									},
									"scope": 716,
									"src": "16781:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "17581:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "17617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "17625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17631:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 643,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															685
														],
														"referencedDeclaration": 685,
														"src": "17598:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17598:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "17591:80:0"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "17310:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "17509:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "17525:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17525:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17508:35:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "17567:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17567:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17566:14:0"
									},
									"scope": 716,
									"src": "17481:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "17990:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "18019:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "18008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18008:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18028:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18000:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "18000:67:0"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "18138:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "18152:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18152:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "18197:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "18179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "18179:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18179:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18137:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "18237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 680,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "18246:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 681,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "18258:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "18219:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18219:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 683,
												"nodeType": "Return",
												"src": "18212:59:0"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "17684:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17890:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17906:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17925:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17925:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17889:63:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17976:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17976:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17975:14:0"
									},
									"scope": 716,
									"src": "17862:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "18413:596:0",
										"statements": [
											{
												"condition": {
													"id": 696,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "18427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "18484:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 700,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "18568:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "18568:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18588:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18568:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 710,
																"nodeType": "Block",
																"src": "18940:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 707,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 691,
																					"src": "18965:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 706,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "18958:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18958:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 709,
																		"nodeType": "ExpressionStatement",
																		"src": "18958:20:0"
																	}
																]
															},
															"id": 711,
															"nodeType": "IfStatement",
															"src": "18564:429:0",
															"trueBody": {
																"id": 705,
																"nodeType": "Block",
																"src": "18591:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "18775:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18797:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18826:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18820:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18820:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18801:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18869:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18873:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18865:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18865:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18886:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18858:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18858:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18858:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 689,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18826:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 689,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18873:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 704,
																		"nodeType": "InlineAssembly",
																		"src": "18766:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "18423:580:0",
												"trueBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "18436:42:0",
													"statements": [
														{
															"expression": {
																"id": 697,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "18457:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 695,
															"id": 698,
															"nodeType": "Return",
															"src": "18450:17:0"
														}
													]
												}
											}
										]
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "18311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "18325:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18325:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "18350:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18310:67:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "18399:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18399:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18398:14:0"
									},
									"scope": 716,
									"src": "18284:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1728,
							"src": "12307:6704:0"
						},
						{
							"id": 717,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19088:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 718,
								"nodeType": "StructuredDocumentation",
								"src": "19123:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 925,
							"linearizedBaseContracts": [
								925
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 721,
									"libraryName": {
										"id": 719,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 396,
										"src": "19611:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$396",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19605:27:0",
									"typeName": {
										"id": 720,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 724,
									"libraryName": {
										"id": 722,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 716,
										"src": "19643:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$716",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19637:26:0",
									"typeName": {
										"id": 723,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19655:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "19741:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 734,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "19771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 737,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "19801:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 422,
																		"src": "19801:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19801:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 740,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "19826:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "19830:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 735,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19778:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19778:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19778:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 733,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "19751:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19751:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "19751:86:0"
											}
										]
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "19691:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$473",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 725,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 473,
													"src": "19691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "19705:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "19717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19690:41:0"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19741:0:0"
									},
									"scope": 925,
									"src": "19669:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "19940:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "19970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 761,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "20000:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 454,
																		"src": "20000:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20000:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 764,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "20029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 765,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "20035:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 766,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "20039:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 759,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19977:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19977:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19977:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 757,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "19950:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19950:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "19950:96:0"
											}
										]
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "19876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$473",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 747,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 473,
													"src": "19876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "19890:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "19904:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "19916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19875:55:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19940:0:0"
									},
									"scope": 925,
									"src": "19850:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "20389:537:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 782,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "20678:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20687:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20678:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 785,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20677:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 790,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "20718:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$925",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$925",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 789,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20710:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 788,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20710:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 791,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20710:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 776,
																					"src": "20725:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 786,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "20694:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$473",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 432,
																				"src": "20694:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20694:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20737:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20694:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 796,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20693:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20677:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20753:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20669:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "20669:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "20849:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 805,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "20879:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "20879:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20879:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 808,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20903:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 809,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "20912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 803,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20856:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20856:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20856:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 801,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "20829:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20829:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "20829:90:0"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "20059:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "20334:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$473",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 473,
													"src": "20334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "20348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "20365:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20333:46:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20389:0:0"
									},
									"scope": 925,
									"src": "20313:613:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "21018:197:0",
										"statements": [
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "21028:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [
														{
															"id": 834,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "21095:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 829,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "21075:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$925",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$925",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21067:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 827,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21067:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21067:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 831,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "21082:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 825,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21051:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$473",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 432,
																"src": "21051:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21051:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "21051:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21051:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21028:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "21131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 841,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21161:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "21161:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "21161:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 844,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "21185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 845,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "21194:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 839,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21138:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "21138:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21138:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 837,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "21111:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21111:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "21111:97:0"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "20963:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$473",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 815,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 473,
													"src": "20963:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "20977:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "20994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20962:46:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21018:0:0"
									},
									"scope": 925,
									"src": "20932:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "21307:242:0",
										"statements": [
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "21317:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"arguments": [
														{
															"id": 870,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "21384:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21391:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 865,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "21364:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$925",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$925",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21356:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 863,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21356:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21356:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 867,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "21371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 861,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "21340:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$473",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 432,
																"src": "21340:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21340:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 274,
														"src": "21340:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21340:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21317:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "21465:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 878,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "21495:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "21495:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "21495:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 881,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "21519:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 882,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "21528:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 876,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21472:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "21472:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21472:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 874,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "21445:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21445:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "21445:97:0"
											}
										]
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "21252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$473",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 851,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 473,
													"src": "21252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "21266:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "21283:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21251:46:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21307:0:0"
									},
									"scope": 925,
									"src": "21221:328:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "22002:681:0",
										"statements": [
											{
												"assignments": [
													896
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "22351:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 895,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "22351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 902,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "22405:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22411:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 899,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "22385:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$473",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$473",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22377:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 897,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22377:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22377:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "22377:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22377:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22351:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 906,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "22460:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "22460:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22480:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22460:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "22456:221:0",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "22483:194:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 913,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "22600:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 915,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22613:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 914,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "22613:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 916,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "22612:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 911,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "22589:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "22589:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22589:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22621:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 910,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "22581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22581:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "22581:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "21555:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "21961:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$473",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 889,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 473,
													"src": "21961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "21975:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21975:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21960:33:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22002:0:0"
									},
									"scope": 925,
									"src": "21932:751:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1728,
							"src": "19581:3104:0"
						},
						{
							"id": 926,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22762:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 927,
								"nodeType": "StructuredDocumentation",
								"src": "22795:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 964,
							"linearizedBaseContracts": [
								964
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 930,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "24334:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24334:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24374:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 933,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "24381:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 931,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24381:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 932,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24417:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 935,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "24425:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 934,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24425:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "24479:39:0",
										"statements": [
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 938,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "24489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 939,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "24499:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "24489:22:0"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24467:2:0"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24479:0:0"
									},
									"scope": 964,
									"src": "24455:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "24917:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 947,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "25006:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 948,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "25017:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25006:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25027:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24998:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "24998:63:0"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "25136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "25146:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25136:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "25136:18:0"
											},
											{
												"id": 957,
												"nodeType": "PlaceholderStatement",
												"src": "25165:1:0"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 958,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "25309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 959,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "25319:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25309:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "25309:22:0"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "24524:364:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 963,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24914:2:0"
									},
									"src": "24893:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1728,
							"src": "23546:1794:0"
						},
						{
							"id": 965,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25449:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1081,
							"linearizedBaseContracts": [
								1081
							],
							"name": "IKalyswapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 973,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "25521:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "25544:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "25569:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25520:60:0"
									},
									"src": "25506:75:0"
								},
								{
									"anonymous": false,
									"id": 981,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "25601:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "25623:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "25643:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25600:54:0"
									},
									"src": "25586:69:0"
								},
								{
									"functionSelector": "06fdde03",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25674:2:0"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "25700:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25700:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25699:15:0"
									},
									"scope": 1081,
									"src": "25661:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25735:2:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "25761:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25761:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25760:15:0"
									},
									"scope": 1081,
									"src": "25720:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25798:2:0"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "25824:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 993,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "25824:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25823:7:0"
									},
									"scope": 1081,
									"src": "25781:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25856:2:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "25882:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25881:6:0"
									},
									"scope": 1081,
									"src": "25836:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "25912:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25911:15:0"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "25950:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25949:6:0"
									},
									"scope": 1081,
									"src": "25893:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25980:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25995:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25979:32:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "26035:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26035:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26034:6:0"
									},
									"scope": 1081,
									"src": "25961:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26081:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26081:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26063:29:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26111:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26110:6:0"
									},
									"scope": 1081,
									"src": "26047:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26140:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26152:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26152:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26139:24:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26182:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26182:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26181:6:0"
									},
									"scope": 1081,
									"src": "26122:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "26215:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "26229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "26241:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26214:38:0"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "26271:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26270:6:0"
									},
									"scope": 1081,
									"src": "26193:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26308:2:0"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "26334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1048,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "26334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26333:9:0"
									},
									"scope": 1081,
									"src": "26283:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26372:2:0"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "26398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "26398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26397:9:0"
									},
									"scope": 1081,
									"src": "26348:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "26428:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26427:15:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "26466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26465:6:0"
									},
									"scope": 1081,
									"src": "26412:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26494:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26526:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26538:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26538:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26553:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "26553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "26562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26573:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "26573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:90:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26592:0:0"
									},
									"scope": 1081,
									"src": "26478:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1728,
							"src": "25475:1120:0"
						},
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "26636:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1083,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 964,
										"src": "26763:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$964",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "26763:15:0"
								},
								{
									"baseName": {
										"id": 1085,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 129,
										"src": "26780:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$129",
											"typeString": "contract Ownable"
										}
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "26780:7:0"
								}
							],
							"contractDependencies": [
								22,
								129,
								964
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1727,
							"linearizedBaseContracts": [
								1727,
								129,
								22,
								964
							],
							"name": "StakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1089,
									"libraryName": {
										"id": 1087,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 396,
										"src": "26800:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$396",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "26794:27:0",
									"typeName": {
										"id": 1088,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26813:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1092,
									"libraryName": {
										"id": 1090,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 925,
										"src": "26832:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$925",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "26826:27:0",
									"typeName": {
										"id": 1091,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 473,
										"src": "26846:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$473",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1094,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "26908:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$473",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1093,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 473,
										"src": "26908:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$473",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1096,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "26940:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$473",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1095,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 473,
										"src": "26940:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$473",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ebe2b12b",
									"id": 1099,
									"mutability": "mutable",
									"name": "periodFinish",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "26972:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26972:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27002:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1102,
									"mutability": "mutable",
									"name": "rewardRate",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27009:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27009:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27037:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "386a9525",
									"id": 1105,
									"mutability": "mutable",
									"name": "rewardsDuration",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27044:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27044:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1104,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27077:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 1107,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27089:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1106,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27089:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 1109,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27124:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27124:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 1113,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27166:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1112,
										"keyType": {
											"id": 1110,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27174:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27166:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1111,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27185:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1117,
									"mutability": "mutable",
									"name": "rewards",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27229:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1116,
										"keyType": {
											"id": 1114,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27237:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27229:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1115,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27248:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1119,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27278:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27278:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1123,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1727,
									"src": "27312:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1122,
										"keyType": {
											"id": 1120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27320:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27312:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27331:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "27496:99:0",
										"statements": [
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "27506:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$473",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1132,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "27528:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1131,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "27521:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$473_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27521:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$473",
															"typeString": "contract IERC20"
														}
													},
													"src": "27506:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "27506:36:0"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1136,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "27552:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$473",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1138,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "27574:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1137,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "27567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$473_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27567:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$473",
															"typeString": "contract IERC20"
														}
													},
													"src": "27552:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$473",
														"typeString": "contract IERC20"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "27552:36:0"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "27430:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "27461:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27420:68:0"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27496:0:0"
									},
									"scope": 1727,
									"src": "27409:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "27695:36:0",
										"statements": [
											{
												"expression": {
													"id": 1148,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1119,
													"src": "27712:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "27705:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27660:2:0"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "27686:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27685:9:0"
									},
									"scope": 1727,
									"src": "27640:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "27805:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1158,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "27822:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1160,
													"indexExpression": {
														"id": 1159,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "27832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27822:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1161,
												"nodeType": "Return",
												"src": "27815:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "27756:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27755:17:0"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "27796:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27795:9:0"
									},
									"scope": 1727,
									"src": "27737:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "27919:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1170,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27945:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "27945:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1172,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "27962:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1168,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "27936:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$201_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "27936:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27936:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1174,
												"nodeType": "Return",
												"src": "27929:46:0"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27886:2:0"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "27910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27909:9:0"
									},
									"scope": 1727,
									"src": "27853:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "28044:266:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "28058:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28074:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28058:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "28054:75:0",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "28077:52:0",
													"statements": [
														{
															"expression": {
																"id": 1184,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "28098:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1180,
															"id": 1185,
															"nodeType": "Return",
															"src": "28091:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1202,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "28276:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28266:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1196,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "28250:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1193,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1107,
																							"src": "28230:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1190,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1176,
																								"src": "28199:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1191,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "28199:26:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 246,
																						"src": "28199:30:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28199:46:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 309,
																				"src": "28199:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28199:62:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 309,
																		"src": "28199:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28199:72:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "28199:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28199:90:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1188,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "28157:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "28157:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28157:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1205,
												"nodeType": "Return",
												"src": "28138:165:0"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28011:2:0"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "28035:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28034:9:0"
									},
									"scope": 1727,
									"src": "27988:322:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "28379:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1230,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "28488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1232,
															"indexExpression": {
																"id": 1231,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "28496:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28488:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28478:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1221,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1113,
																						"src": "28440:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1223,
																					"indexExpression": {
																						"id": 1222,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1209,
																						"src": "28463:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "28440:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1218,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1207,
																						"src": "28419:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28419:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 246,
																				"src": "28419:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28419:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1214,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "28396:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1216,
																			"indexExpression": {
																				"id": 1215,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1209,
																				"src": "28406:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28396:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 309,
																		"src": "28396:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28396:77:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "28396:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28396:87:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "28396:91:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28396:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1234,
												"nodeType": "Return",
												"src": "28389:116:0"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "28332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28331:17:0"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "28370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28369:9:0"
									},
									"scope": 1727,
									"src": "28316:196:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "28582:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "28614:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1241,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "28599:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 309,
														"src": "28599:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28599:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1245,
												"nodeType": "Return",
												"src": "28592:38:0"
											}
										]
									},
									"functionSelector": "1c1f78eb",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28547:2:0"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "28573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28572:9:0"
									},
									"scope": 1727,
									"src": "28518:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "28829:413:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "28847:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28859:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28839:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28839:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "28839:37:0"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "28886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1276,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "28918:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1274,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "28901:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "28901:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28901:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28886:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "28886:39:0"
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1280,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "28935:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1283,
														"indexExpression": {
															"expression": {
																"id": 1281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28945:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28945:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28935:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1289,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "28985:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1284,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "28959:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"expression": {
																		"id": 1285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "28969:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "28969:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28959:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "28959:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28959:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28935:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "28935:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29066:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29066:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1304,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29086:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29078:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29078:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29078:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "29093:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1307,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "29101:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1308,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "29111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1309,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "29114:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1310,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "29117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1296,
																			"name": "stakingToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "29044:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$473",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29036:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1294,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "29036:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29036:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1293,
																"name": "IKalyswapERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "29021:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapERC20_$1081_$",
																	"typeString": "type(contract IKalyswapERC20)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29021:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapERC20_$1081",
																"typeString": "contract IKalyswapERC20"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1080,
														"src": "29021:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29021:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "29021:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1316,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29160:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29160:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1320,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29180:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29172:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1318,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29172:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29172:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "29187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1313,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "29130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 771,
														"src": "29130:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$473_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29130:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "29130:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29216:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29216:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1328,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "29228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1325,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "29209:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29209:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "EmitStatement",
												"src": "29204:31:0"
											}
										]
									},
									"functionSelector": "ecd9ba82",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1260,
											"modifierName": {
												"id": 1259,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 963,
												"src": "28791:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28791:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1262,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28817:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "28817:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1264,
											"modifierName": {
												"id": 1261,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1694,
												"src": "28804:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28804:24:0"
										}
									],
									"name": "stakeWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "28720:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "28736:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "28736:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "28751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1252,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "28751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "28760:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "28771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28719:62:0"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28829:0:0"
									},
									"scope": 1727,
									"src": "28695:547:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "29326:285:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1344,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "29344:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29353:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29356:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29336:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29336:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "29336:37:0"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "29383:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1353,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "29415:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1351,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "29398:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "29398:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29398:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29383:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "29383:39:0"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1357,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "29432:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1360,
														"indexExpression": {
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29442:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29442:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29432:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1366,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "29482:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1361,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "29456:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1364,
																"indexExpression": {
																	"expression": {
																		"id": 1362,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "29466:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "29466:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29456:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "29456:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29456:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29432:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "29432:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1373,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29529:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29529:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1377,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29549:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29541:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29541:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29541:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "29556:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1370,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "29499:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 771,
														"src": "29499:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$473_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29499:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "29499:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1383,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29585:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29585:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1385,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "29597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "29578:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29578:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "EmitStatement",
												"src": "29573:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"modifierName": {
												"id": 1336,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 963,
												"src": "29288:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29288:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1339,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "29314:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "29314:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1341,
											"modifierName": {
												"id": 1338,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1694,
												"src": "29301:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29301:24:0"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "29263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29262:16:0"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29326:0:0"
									},
									"scope": 1727,
									"src": "29248:363:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "29696:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "29714:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29714:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29726:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29706:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "29706:40:0"
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1407,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "29756:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1410,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "29788:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1408,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "29771:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 246,
															"src": "29771:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29771:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29756:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "29756:39:0"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1414,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "29805:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1417,
														"indexExpression": {
															"expression": {
																"id": 1415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29815:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29815:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29805:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1423,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "29855:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1418,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "29829:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1421,
																"indexExpression": {
																	"expression": {
																		"id": 1419,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "29839:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "29839:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29829:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 246,
															"src": "29829:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29829:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29805:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "29805:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1430,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29898:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "29910:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1427,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "29872:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 746,
														"src": "29872:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$473_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29872:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "29872:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1436,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29942:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29942:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1438,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "29954:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1435,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "29932:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29932:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "EmitStatement",
												"src": "29927:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"modifierName": {
												"id": 1393,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 963,
												"src": "29658:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29658:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "29684:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "29684:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1398,
											"modifierName": {
												"id": 1395,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1694,
												"src": "29671:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29671:24:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "29635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29634:16:0"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29696:0:0"
									},
									"scope": 1727,
									"src": "29617:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "30040:234:0",
										"statements": [
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "30050:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"baseExpression": {
														"id": 1453,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "30067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1456,
													"indexExpression": {
														"expression": {
															"id": 1454,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "30075:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "30075:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30067:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30050:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1458,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "30100:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30100:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "30096:172:0",
												"trueBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "30112:156:0",
													"statements": [
														{
															"expression": {
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1461,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "30126:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1464,
																	"indexExpression": {
																		"expression": {
																			"id": 1462,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30134:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30134:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "30126:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "30126:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1467,
															"nodeType": "ExpressionStatement",
															"src": "30126:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1471,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30189:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30189:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1473,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "30201:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1468,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "30163:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$473",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 746,
																	"src": "30163:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$473_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30163:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1475,
															"nodeType": "ExpressionStatement",
															"src": "30163:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1477,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30238:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30238:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1479,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "30250:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1476,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1716,
																	"src": "30227:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30227:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1481,
															"nodeType": "EmitStatement",
															"src": "30222:35:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1445,
											"modifierName": {
												"id": 1444,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 963,
												"src": "30002:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30002:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1447,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "30028:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "30028:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1449,
											"modifierName": {
												"id": 1446,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1694,
												"src": "30015:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30015:24:0"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29992:2:0"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30040:0:0"
									},
									"scope": 1727,
									"src": "29974:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "30305:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1489,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "30324:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1492,
															"indexExpression": {
																"expression": {
																	"id": 1490,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "30334:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "30334:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30324:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1488,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "30315:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30315:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "30315:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1495,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "30356:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30356:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "30356:11:0"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30293:2:0"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30305:0:0"
									},
									"scope": 1727,
									"src": "30280:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "30605:962:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1512,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30619:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "30619:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1514,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "30638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30619:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1549,
													"nodeType": "Block",
													"src": "30723:204:0",
													"statements": [
														{
															"assignments": [
																1525
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1525,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 1549,
																	"src": "30737:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1524,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30737:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1531,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1528,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "30774:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "30774:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1526,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "30757:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "30757:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30757:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30737:53:0"
														},
														{
															"assignments": [
																1533
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1533,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nodeType": "VariableDeclaration",
																	"scope": 1549,
																	"src": "30804:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30804:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1538,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1536,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "30837:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1534,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "30823:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 309,
																	"src": "30823:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30823:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30804:44:0"
														},
														{
															"expression": {
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1539,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "30862:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1545,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "30900:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1542,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1533,
																					"src": "30886:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1540,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "30875:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 229,
																				"src": "30875:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30875:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "30875:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30875:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30862:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1548,
															"nodeType": "ExpressionStatement",
															"src": "30862:54:0"
														}
													]
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "30615:312:0",
												"trueBody": {
													"id": 1523,
													"nodeType": "Block",
													"src": "30652:65:0",
													"statements": [
														{
															"expression": {
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1516,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "30666:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1519,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "30690:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1517,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "30679:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "30679:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30679:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30666:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "30666:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1588,
														"src": "31281:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1551,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "31281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1557,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31327:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1727",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31319:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31319:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1553,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "31296:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 412,
														"src": "31296:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31296:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31281:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1562,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "31351:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1565,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "31377:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1563,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "31365:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 326,
																	"src": "31365:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31365:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31351:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31395:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31343:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "31343:79:0"
											},
											{
												"expression": {
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1571,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "31433:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1572,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31450:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31433:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "31433:32:0"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1576,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "31475:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1580,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "31510:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1577,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "31490:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "31490:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "31490:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31490:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31475:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "31475:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1585,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "31553:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1584,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "31541:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31541:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1587,
												"nodeType": "EmitStatement",
												"src": "31536:24:0"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1504,
											"modifierName": {
												"id": 1503,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "30570:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30570:9:0"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30601:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1506,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30593:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30593:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1510,
											"modifierName": {
												"id": 1505,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1694,
												"src": "30580:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30580:24:0"
										}
									],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "30545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30544:16:0"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30605:0:0"
									},
									"scope": 1727,
									"src": "30517:1050:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "31776:216:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1601,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "31794:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1604,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "31818:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$473",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$473",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31810:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1602,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31810:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31810:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31794:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31833:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															},
															"value": "Cannot withdraw the staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															}
														],
														"id": 1600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31786:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "31786:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1614,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "31913:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31913:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1616,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "31922:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1611,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "31886:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1610,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "31879:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$473_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31879:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$473",
																"typeString": "contract IERC20"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 746,
														"src": "31879:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$473_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$473_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31879:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "31879:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1620,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "31959:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1621,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "31973:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"name": "Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "31949:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31949:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "EmitStatement",
												"src": "31944:41:0"
											}
										]
									},
									"functionSelector": "8980f11f",
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1596,
											"modifierName": {
												"id": 1595,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "31753:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31753:9:0"
										},
										{
											"id": 1598,
											"modifierName": {
												"id": 1597,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 963,
												"src": "31763:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31763:12:0"
										}
									],
									"name": "recoverERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "31701:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "31723:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31700:43:0"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31776:0:0"
									},
									"scope": 1727,
									"src": "31679:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "32071:352:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1633,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "32102:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "32102:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1635,
																"name": "periodFinish",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "32120:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32102:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32146:90:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															},
															"value": "Previous rewards period must be complete before changing the duration for the new period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															}
														],
														"id": 1632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32081:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "32081:165:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1641,
																"name": "_rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "32264:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32264:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526577617264206475726174696f6e2063616e2774206265207a65726f",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32286:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfaf9ef34f14c515de496896d3fc709059a94896dea7c1a1a9a1d952aace9405",
																"typeString": "literal_string \"Reward duration can't be zero\""
															},
															"value": "Reward duration can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfaf9ef34f14c515de496896d3fc709059a94896dea7c1a1a9a1d952aace9405",
																"typeString": "literal_string \"Reward duration can't be zero\""
															}
														],
														"id": 1640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32256:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "32256:62:0"
											},
											{
												"expression": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1647,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "32328:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1648,
														"name": "_rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "32346:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32328:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "32328:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1652,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "32400:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1651,
														"name": "RewardsDurationUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "32377:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32377:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "EmitStatement",
												"src": "32372:44:0"
											}
										]
									},
									"functionSelector": "cc1a378f",
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1630,
											"modifierName": {
												"id": 1629,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "32061:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "32061:9:0"
										}
									],
									"name": "setRewardsDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "_rewardsDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "32026:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32025:26:0"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32071:0:0"
									},
									"scope": 1727,
									"src": "31998:425:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "32511:283:0",
										"statements": [
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "32521:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1661,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "32544:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32544:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32521:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "32521:39:0"
											},
											{
												"expression": {
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1665,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "32570:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1666,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "32587:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32587:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32570:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "32570:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1670,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "32627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1671,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32638:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32638:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "32627:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1691,
												"nodeType": "IfStatement",
												"src": "32623:154:0",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "32650:127:0",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1676,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "32664:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1678,
																	"indexExpression": {
																		"id": 1677,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "32672:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32664:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1680,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "32690:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1679,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "32683:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32683:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32664:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "32664:34:0"
														},
														{
															"expression": {
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1684,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "32712:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1686,
																	"indexExpression": {
																		"id": 1685,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "32735:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32712:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1687,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "32746:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32712:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1689,
															"nodeType": "ExpressionStatement",
															"src": "32712:54:0"
														}
													]
												}
											},
											{
												"id": 1692,
												"nodeType": "PlaceholderStatement",
												"src": "32786:1:0"
											}
										]
									},
									"id": 1694,
									"name": "updateReward",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "32494:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32493:17:0"
									},
									"src": "32472:322:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1698,
									"name": "RewardAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "32858:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32857:16:0"
									},
									"src": "32840:34:0"
								},
								{
									"anonymous": false,
									"id": 1704,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "32892:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "32914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32891:38:0"
									},
									"src": "32879:51:0"
								},
								{
									"anonymous": false,
									"id": 1710,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "32951:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "32973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32950:38:0"
									},
									"src": "32935:54:0"
								},
								{
									"anonymous": false,
									"id": 1716,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "33011:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "33033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33010:38:0"
									},
									"src": "32994:55:0"
								},
								{
									"anonymous": false,
									"id": 1720,
									"name": "RewardsDurationUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "33083:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33082:21:0"
									},
									"src": "33054:50:0"
								},
								{
									"anonymous": false,
									"id": 1726,
									"name": "Recovered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "33125:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "33140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33124:31:0"
									},
									"src": "33109:47:0"
								}
							],
							"scope": 1728,
							"src": "26736:6422:0"
						}
					],
					"src": "158:33000:0"
				},
				"id": 0
			}
		}
	}
}