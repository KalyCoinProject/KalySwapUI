{
	"id": "16fa65b73a3c8fa9bdf54e2987283052",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GnosisSafeProxyFactory.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n/// @author Richard Meissner - <richard@gnosis.io>\ninterface IProxy {\n    function masterCopy() external view returns (address);\n}\n\n/// @title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n/// @author Stefan George - <stefan@gnosis.io>\n/// @author Richard Meissner - <richard@gnosis.io>\ncontract GnosisSafeProxy {\n    // singleton always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\n    address internal singleton;\n\n    /// @dev Constructor function sets address of singleton contract.\n    /// @param _singleton Singleton address.\n    constructor(address _singleton) {\n        require(_singleton != address(0), \"Invalid singleton address provided\");\n        singleton = _singleton;\n    }\n\n    /// @dev Fallback function forwards all transactions and returns all received return data.\n    fallback() external payable {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let _singleton := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\n            if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {\n                mstore(0, _singleton)\n                return(0, 0x20)\n            }\n            calldatacopy(0, 0, calldatasize())\n            let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            if eq(success, 0) {\n                revert(0, returndatasize())\n            }\n            return(0, returndatasize())\n        }\n    }\n}\n\ninterface IProxyCreationCallback {\n    function proxyCreated(\n        GnosisSafeProxy proxy,\n        address _singleton,\n        bytes calldata initializer,\n        uint256 saltNonce\n    ) external;\n}\n\n/// @title Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n/// @author Stefan George - <stefan@gnosis.pm>\ncontract GnosisSafeProxyFactory {\n    event ProxyCreation(GnosisSafeProxy proxy, address singleton);\n\n    /// @dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n    /// @param singleton Address of singleton contract.\n    /// @param data Payload for message call sent to new proxy contract.\n    function createProxy(address singleton, bytes memory data) public returns (GnosisSafeProxy proxy) {\n        proxy = new GnosisSafeProxy(singleton);\n        if (data.length > 0)\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                if eq(call(gas(), proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) {\n                    revert(0, 0)\n                }\n            }\n        emit ProxyCreation(proxy, singleton);\n    }\n\n    /// @dev Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.\n    function proxyRuntimeCode() public pure returns (bytes memory) {\n        return type(GnosisSafeProxy).runtimeCode;\n    }\n\n    /// @dev Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\n    function proxyCreationCode() public pure returns (bytes memory) {\n        return type(GnosisSafeProxy).creationCode;\n    }\n\n    /// @dev Allows to create new proxy contact using CREATE2 but it doesn't run the initializer.\n    ///      This method is only meant as an utility to be called from other methods\n    /// @param _singleton Address of singleton contract.\n    /// @param initializer Payload for message call sent to new proxy contract.\n    /// @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\n    function deployProxyWithNonce(\n        address _singleton,\n        bytes memory initializer,\n        uint256 saltNonce\n    ) internal returns (GnosisSafeProxy proxy) {\n        // If the initializer changes the proxy address should change too. Hashing the initializer data is cheaper than just concatinating it\n        bytes32 salt = keccak256(abi.encodePacked(keccak256(initializer), saltNonce));\n        bytes memory deploymentData = abi.encodePacked(type(GnosisSafeProxy).creationCode, uint256(uint160(_singleton)));\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            proxy := create2(0x0, add(0x20, deploymentData), mload(deploymentData), salt)\n        }\n        require(address(proxy) != address(0), \"Create2 call failed\");\n    }\n\n    /// @dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n    /// @param _singleton Address of singleton contract.\n    /// @param initializer Payload for message call sent to new proxy contract.\n    /// @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\n    function createProxyWithNonce(\n        address _singleton,\n        bytes memory initializer,\n        uint256 saltNonce\n    ) public returns (GnosisSafeProxy proxy) {\n        proxy = deployProxyWithNonce(_singleton, initializer, saltNonce);\n        if (initializer.length > 0)\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                if eq(call(gas(), proxy, 0, add(initializer, 0x20), mload(initializer), 0, 0), 0) {\n                    revert(0, 0)\n                }\n            }\n        emit ProxyCreation(proxy, _singleton);\n    }\n\n    /// @dev Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction\n    /// @param _singleton Address of singleton contract.\n    /// @param initializer Payload for message call sent to new proxy contract.\n    /// @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\n    /// @param callback Callback that will be invoced after the new proxy contract has been successfully deployed and initialized.\n    function createProxyWithCallback(\n        address _singleton,\n        bytes memory initializer,\n        uint256 saltNonce,\n        IProxyCreationCallback callback\n    ) public returns (GnosisSafeProxy proxy) {\n        uint256 saltNonceWithCallback = uint256(keccak256(abi.encodePacked(saltNonce, callback)));\n        proxy = createProxyWithNonce(_singleton, initializer, saltNonceWithCallback);\n        if (address(callback) != address(0)) callback.proxyCreated(proxy, _singleton, initializer, saltNonce);\n    }\n\n    /// @dev Allows to get the address for a new proxy contact created via `createProxyWithNonce`\n    ///      This method is only meant for address calculation purpose when you use an initializer that would revert,\n    ///      therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.\n    /// @param _singleton Address of singleton contract.\n    /// @param initializer Payload for message call sent to new proxy contract.\n    /// @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\n    function calculateCreateProxyWithNonceAddress(\n        address _singleton,\n        bytes calldata initializer,\n        uint256 saltNonce\n    ) external returns (GnosisSafeProxy proxy) {\n        proxy = deployProxyWithNonce(_singleton, initializer, saltNonce);\n        revert(string(abi.encodePacked(proxy)));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GnosisSafeProxyFactory.sol": {
				"GnosisSafeProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_singleton",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"author": "Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor function sets address of singleton contract.",
								"params": {
									"_singleton": "Singleton address."
								}
							}
						},
						"title": "GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GnosisSafeProxyFactory.sol\":946:1098  constructor(address _singleton) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GnosisSafeProxyFactory.sol\":996:1020  _singleton != address(0) */\n  dup2\n  and\n    /* \"contracts/GnosisSafeProxyFactory.sol\":988:1059  require(_singleton != address(0), \"Invalid singleton address provided\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  tag_7\n  swap1\n  0x04\n  add\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/GnosisSafeProxyFactory.sol\":1069:1078  singleton */\n  0x00\n    /* \"contracts/GnosisSafeProxyFactory.sol\":1069:1091  singleton = _singleton */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:324   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_12:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_13\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_13:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":329:727   */\ntag_8:\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":513:534   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":570:572   */\n  0x22\n    /* \"#utility.yul\":550:568   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":543:573   */\n  mstore\n    /* \"#utility.yul\":609:643   */\n  0x496e76616c69642073696e676c65746f6e20616464726573732070726f766964\n    /* \"#utility.yul\":604:606   */\n  0x40\n    /* \"#utility.yul\":589:607   */\n  dup3\n  add\n    /* \"#utility.yul\":582:644   */\n  mstore\n  shl(0xf2, 0x1959)\n    /* \"#utility.yul\":675:677   */\n  0x60\n    /* \"#utility.yul\":660:678   */\n  dup3\n  add\n    /* \"#utility.yul\":653:685   */\n  mstore\n    /* \"#utility.yul\":717:720   */\n  0x80\n    /* \"#utility.yul\":702:721   */\n  add\n  swap1\n    /* \"#utility.yul\":503:727   */\n  jump\t// out\ntag_10:\n    /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1338:1346  sload(0) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1334:1391  and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff) */\n      and\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1509:1524  calldataload(0) */\n      dup2\n      calldataload\n      shl(0xe1, 0x530ca437)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1506:1593  eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) */\n      eq\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1503:1505  if */\n      iszero\n      tag_5\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1622:1632  _singleton */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup3\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1612:1633  mstore(0, _singleton) */\n      mstore\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1660:1664  0x20 */\n      0x20\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup3\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1650:1665  return(0, 0x20) */\n      return\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1503:1505  if */\n    tag_5:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1711:1725  calldatasize() */\n      calldatasize\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup3\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1692:1726  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup2\n      dup3\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1711:1725  calldatasize() */\n      calldatasize\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1774:1784  _singleton */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1767:1772  gas() */\n      gas\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1754:1810  delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1739:1810  let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n      swap1\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1844:1860  returndatasize() */\n      returndatasize\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup3\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1823:1861  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1880:1887  success */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1874:1876  if */\n      tag_6\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1920:1936  returndatasize() */\n      returndatasize\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup3\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1910:1937  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1874:1876  if */\n    tag_6:\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1974:1990  returndatasize() */\n      returndatasize\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n      dup2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":1964:1991  return(0, returndatasize()) */\n      return\n\n    auxdata: 0xa2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:729:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:1"
															},
															"nodeType": "YulIf",
															"src": "214:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:310:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "520:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "513:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "565:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "550:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "543:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "593:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "604:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "589:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "609:34:1",
																		"type": "",
																		"value": "Invalid singleton address provid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "582:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "675:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "660:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "680:4:1",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "694:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "717:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "694:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "480:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "494:4:1",
														"type": ""
													}
												],
												"src": "329:398:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Invalid singleton address provid\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161017d38038061017d83398101604081905261002f91610083565b6001600160a01b03811661005e5760405162461bcd60e51b8152600401610055906100b1565b60405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100f3565b600060208284031215610094578081fd5b81516001600160a01b03811681146100aa578182fd5b9392505050565b60208082526022908201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604082015261195960f21b606082015260800190565b607c806101016000396000f3fe6080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17D CODESIZE SUB DUP1 PUSH2 0x17D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073696E676C65746F6E20616464726573732070726F766964 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7C DUP1 PUSH2 0x101 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 CALLDATALOAD PUSH4 0x530CA437 PUSH1 0xE1 SHL EQ ISZERO PUSH1 0x28 JUMPI DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 RETURN JUMPDEST CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 PUSH1 0x41 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATALOAD CALLDATACOPY 0xD9 MUL PUSH22 0xCFBB9962D96957AEE653ED372240999151F8C26A9426 LOG0 PUSH13 0x183C64736F6C63430008000033 ",
							"sourceMap": "512:1497:0:-:0;;;946:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;996:24:0;;988:71;;;;-1:-1:-1;;;988:71:0;;;;;;;:::i;:::-;;;;;;;;;1069:9;:22;;-1:-1:-1;;;;;;1069:22:0;-1:-1:-1;;;;;1069:22:0;;;;;;;;;;512:1497;;14:310:1;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;329:398::-;531:2;513:21;;;570:2;550:18;;;543:30;609:34;604:2;589:18;;582:62;-1:-1:-1;;;675:2:1;660:18;;653:32;717:3;702:19;;503:224::o;:::-;512:1497:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 CALLDATALOAD PUSH4 0x530CA437 PUSH1 0xE1 SHL EQ ISZERO PUSH1 0x28 JUMPI DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 RETURN JUMPDEST CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 PUSH1 0x41 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATALOAD CALLDATACOPY 0xD9 MUL PUSH22 0xCFBB9962D96957AEE653ED372240999151F8C26A9426 LOG0 PUSH13 0x183C64736F6C63430008000033 ",
							"sourceMap": "512:1497:0:-:0;;;1344:1;1338:8;;-1:-1:-1;;;;;1334:57:0;1509:15;;-1:-1:-1;;;1506:87:0;1503:2;;;1622:10;1344:1;1612:21;1660:4;1344:1;1650:15;1503:2;1711:14;1344:1;;1692:34;1344:1;;1711:14;1344:1;1774:10;1767:5;1754:56;1739:71;;1844:16;1344:1;;1823:38;1880:7;1874:2;;1920:16;1344:1;1910:27;1874:2;;1974:16;1344:1;1964:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "24800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 946,
									"end": 1098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 988,
									"end": 1059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1078,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1091,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 329,
									"end": 727,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 329,
									"end": 727,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 534,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 513,
									"end": 534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 513,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 570,
									"end": 572,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 568,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 550,
									"end": 568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 550,
									"end": 568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 543,
									"end": 573,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 609,
									"end": 643,
									"name": "PUSH",
									"source": 1,
									"value": "496E76616C69642073696E676C65746F6E20616464726573732070726F766964"
								},
								{
									"begin": 604,
									"end": 606,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 589,
									"end": 607,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 589,
									"end": 607,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 582,
									"end": 644,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 675,
									"end": 677,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 653,
									"end": 685,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 717,
									"end": 720,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 702,
									"end": 721,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 503,
									"end": 727,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 503,
									"end": 727,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 503,
									"end": 727,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 2009,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033",
									".code": [
										{
											"begin": 512,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 512,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "530CA437"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1503,
											"end": 1505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1665,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1503,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1711,
											"end": 1725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1726,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1711,
											"end": 1725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1810,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1860,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1861,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1991,
											"name": "RETURN",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor function sets address of singleton contract.\",\"params\":{\"_singleton\":\"Singleton address.\"}}},\"title\":\"GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GnosisSafeProxyFactory.sol\":\"GnosisSafeProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GnosisSafeProxyFactory.sol\":{\"keccak256\":\"0x14e4004ba0cefaf58b9898bf6eb9f692dbac0c78f87f98e4d43b08ada388aef7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e3a695c1037665fc4c739b8399b1110eb43416af6737cc09fe90c255a1e0b0fc\",\"dweb:/ipfs/QmShCNxPncmJQkX4pz3RCkMVKxTZXQf7CuGPE7TCr3tv9x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "contracts/GnosisSafeProxyFactory.sol:GnosisSafeProxy",
								"label": "singleton",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GnosisSafeProxyFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract GnosisSafeProxy",
									"name": "proxy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "singleton",
									"type": "address"
								}
							],
							"name": "ProxyCreation",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_singleton",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initializer",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "saltNonce",
									"type": "uint256"
								}
							],
							"name": "calculateCreateProxyWithNonceAddress",
							"outputs": [
								{
									"internalType": "contract GnosisSafeProxy",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "singleton",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "createProxy",
							"outputs": [
								{
									"internalType": "contract GnosisSafeProxy",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_singleton",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initializer",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "saltNonce",
									"type": "uint256"
								},
								{
									"internalType": "contract IProxyCreationCallback",
									"name": "callback",
									"type": "address"
								}
							],
							"name": "createProxyWithCallback",
							"outputs": [
								{
									"internalType": "contract GnosisSafeProxy",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_singleton",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initializer",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "saltNonce",
									"type": "uint256"
								}
							],
							"name": "createProxyWithNonce",
							"outputs": [
								{
									"internalType": "contract GnosisSafeProxy",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxyCreationCode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxyRuntimeCode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Stefan George - <stefan@gnosis.pm>",
						"kind": "dev",
						"methods": {
							"calculateCreateProxyWithNonceAddress(address,bytes,uint256)": {
								"details": "Allows to get the address for a new proxy contact created via `createProxyWithNonce`      This method is only meant for address calculation purpose when you use an initializer that would revert,      therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.",
								"params": {
									"_singleton": "Address of singleton contract.",
									"initializer": "Payload for message call sent to new proxy contract.",
									"saltNonce": "Nonce that will be used to generate the salt to calculate the address of the new proxy contract."
								}
							},
							"createProxy(address,bytes)": {
								"details": "Allows to create new proxy contact and execute a message call to the new proxy within one transaction.",
								"params": {
									"data": "Payload for message call sent to new proxy contract.",
									"singleton": "Address of singleton contract."
								}
							},
							"createProxyWithCallback(address,bytes,uint256,address)": {
								"details": "Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction",
								"params": {
									"_singleton": "Address of singleton contract.",
									"callback": "Callback that will be invoced after the new proxy contract has been successfully deployed and initialized.",
									"initializer": "Payload for message call sent to new proxy contract.",
									"saltNonce": "Nonce that will be used to generate the salt to calculate the address of the new proxy contract."
								}
							},
							"createProxyWithNonce(address,bytes,uint256)": {
								"details": "Allows to create new proxy contact and execute a message call to the new proxy within one transaction.",
								"params": {
									"_singleton": "Address of singleton contract.",
									"initializer": "Payload for message call sent to new proxy contract.",
									"saltNonce": "Nonce that will be used to generate the salt to calculate the address of the new proxy contract."
								}
							},
							"proxyCreationCode()": {
								"details": "Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address."
							},
							"proxyRuntimeCode()": {
								"details": "Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed."
							}
						},
						"title": "Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GnosisSafeProxyFactory.sol\":2390:7892  contract GnosisSafeProxyFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2390:7892  contract GnosisSafeProxyFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1688f0b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2500510e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x53e5d935\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x61b69abd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xaddacc0f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd18af54d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5334:5910  function createProxyWithNonce(... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7576:7890  function calculateCreateProxyWithNonceAddress(... */\n    tag_4:\n      tag_9\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3614:3736  function proxyCreationCode() public pure returns (bytes memory) {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2741:3203  function createProxy(address singleton, bytes memory data) public returns (GnosisSafeProxy proxy) {... */\n    tag_6:\n      tag_9\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3343:3463  function proxyRuntimeCode() public pure returns (bytes memory) {... */\n    tag_7:\n      tag_20\n      tag_30\n      jump\t// in\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6448:6959  function createProxyWithCallback(... */\n    tag_8:\n      tag_9\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5334:5910  function createProxyWithNonce(... */\n    tag_12:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5475:5496  GnosisSafeProxy proxy */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5516:5572  deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      tag_38\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5537:5547  _singleton */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5549:5560  initializer */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5562:5571  saltNonce */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5516:5536  deployProxyWithNonce */\n      tag_39\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5516:5572  deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      jump\t// in\n    tag_38:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5586:5604  initializer.length */\n      dup4\n      mload\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5508:5572  proxy = deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5586:5608  initializer.length > 0 */\n      iszero\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5582:5857  if (initializer.length > 0)... */\n      tag_41\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5788:5789  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5784:5785  0 */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5781:5782  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5767:5778  initializer */\n      dup6\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5761:5779  mload(initializer) */\n      mload\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5754:5758  0x20 */\n      0x20\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5741:5752  initializer */\n      dup8\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5737:5759  add(initializer, 0x20) */\n      add\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5734:5735  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5727:5732  proxy */\n      dup7\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5720:5725  gas() */\n      gas\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5715:5786  call(gas(), proxy, 0, add(initializer, 0x20), mload(initializer), 0, 0) */\n      call\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5712:5790  eq(call(gas(), proxy, 0, add(initializer, 0x20), mload(initializer), 0, 0), 0) */\n      eq\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5709:5711  if */\n      iszero\n      tag_41\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5823:5824  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5820:5821  0 */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5813:5825  revert(0, 0) */\n      revert\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5709:5711  if */\n    tag_41:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5871:5903  ProxyCreation(proxy, _singleton) */\n      0x4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5885:5890  proxy */\n      dup2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5892:5902  _singleton */\n      dup6\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5871:5903  ProxyCreation(proxy, _singleton) */\n      mload(0x40)\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":5334:5910  function createProxyWithNonce(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7576:7890  function calculateCreateProxyWithNonceAddress(... */\n    tag_18:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7737:7758  GnosisSafeProxy proxy */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7778:7834  deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      tag_45\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7799:7809  _singleton */\n      dup6\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7811:7822  initializer */\n      dup6\n      dup6\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7778:7834  deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7824:7833  saltNonce */\n      dup8\n      swap3\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7778:7798  deployProxyWithNonce */\n      tag_39\n      swap2\n      pop\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7778:7834  deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7770:7834  proxy = deployProxyWithNonce(_singleton, initializer, saltNonce) */\n      swap1\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7875:7880  proxy */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7858:7881  abi.encodePacked(proxy) */\n      add(0x20, mload(0x40))\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":7844:7883  revert(string(abi.encodePacked(proxy))) */\n      dup3\n      mstore\n      tag_48\n      swap2\n      0x04\n      add\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3614:3736  function proxyCreationCode() public pure returns (bytes memory) {... */\n    tag_21:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3664:3676  bytes memory */\n      0x60\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3695:3729  type(GnosisSafeProxy).creationCode */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      not(0x1f)\n      dup3\n      dup3\n      sub\n      dup2\n      add\n      dup4\n      mstore\n      0x1f\n      swap1\n      swap2\n      add\n      and\n      0x40\n      mstore\n      swap1\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3614:3736  function proxyCreationCode() public pure returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2741:3203  function createProxy(address singleton, bytes memory data) public returns (GnosisSafeProxy proxy) {... */\n    tag_27:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2816:2837  GnosisSafeProxy proxy */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2877:2886  singleton */\n      dup3\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2857:2887  new GnosisSafeProxy(singleton) */\n      mload(0x40)\n      tag_54\n      swap1\n      tag_52\n      jump\t// in\n    tag_54:\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2901:2912  data.length */\n      dup3\n      mload\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2849:2887  proxy = new GnosisSafeProxy(singleton) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2901:2916  data.length > 0 */\n      iszero\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2897:3151  if (data.length > 0)... */\n      tag_59\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3082:3083  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3078:3079  0 */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3075:3076  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3068:3072  data */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3062:3073  mload(data) */\n      mload\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3055:3059  0x20 */\n      0x20\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3049:3053  data */\n      dup7\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3045:3060  add(data, 0x20) */\n      add\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3042:3043  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3035:3040  proxy */\n      dup7\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3028:3033  gas() */\n      gas\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3023:3080  call(gas(), proxy, 0, add(data, 0x20), mload(data), 0, 0) */\n      call\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3020:3084  eq(call(gas(), proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) */\n      eq\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3017:3019  if */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3117:3118  0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3114:3115  0 */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3107:3119  revert(0, 0) */\n      revert\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3017:3019  if */\n    tag_59:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3165:3196  ProxyCreation(proxy, singleton) */\n      0x4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3179:3184  proxy */\n      dup2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3186:3195  singleton */\n      dup5\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3165:3196  ProxyCreation(proxy, singleton) */\n      mload(0x40)\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":2741:3203  function createProxy(address singleton, bytes memory data) public returns (GnosisSafeProxy proxy) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3343:3463  function proxyRuntimeCode() public pure returns (bytes memory) {... */\n    tag_30:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3392:3404  bytes memory */\n      0x60\n        /* \"contracts/GnosisSafeProxyFactory.sol\":3423:3456  type(GnosisSafeProxy).runtimeCode */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      tag_51\n      swap1\n      tag_63\n      jump\t// in\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6448:6959  function createProxyWithCallback(... */\n    tag_35:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6633:6654  GnosisSafeProxy proxy */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6666:6695  uint256 saltNonceWithCallback */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6733:6742  saltNonce */\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6744:6752  callback */\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6716:6753  abi.encodePacked(saltNonce, callback) */\n      add(0x20, mload(0x40))\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6706:6754  keccak256(abi.encodePacked(saltNonce, callback)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6698:6755  uint256(keccak256(abi.encodePacked(saltNonce, callback))) */\n      0x00\n      shr\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6666:6755  uint256 saltNonceWithCallback = uint256(keccak256(abi.encodePacked(saltNonce, callback))) */\n      swap1\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6773:6841  createProxyWithNonce(_singleton, initializer, saltNonceWithCallback) */\n      tag_67\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6794:6804  _singleton */\n      dup7\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6806:6817  initializer */\n      dup7\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6819:6840  saltNonceWithCallback */\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6773:6793  createProxyWithNonce */\n      tag_12\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6773:6841  createProxyWithNonce(_singleton, initializer, saltNonceWithCallback) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6765:6841  proxy = createProxyWithNonce(_singleton, initializer, saltNonceWithCallback) */\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6855:6886  address(callback) != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6851:6952  if (address(callback) != address(0)) callback.proxyCreated(proxy, _singleton, initializer, saltNonce) */\n      tag_68\n      jumpi\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6888:6952  callback.proxyCreated(proxy, _singleton, initializer, saltNonce) */\n      mload(0x40)\n      shl(0xe3, 0x03ca56a3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6888:6909  callback.proxyCreated */\n      dup5\n      and\n      swap1\n      0x1e52b518\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6888:6952  callback.proxyCreated(proxy, _singleton, initializer, saltNonce) */\n      tag_69\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6910:6915  proxy */\n      dup6\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6917:6927  _singleton */\n      dup11\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6929:6940  initializer */\n      dup11\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6942:6951  saltNonce */\n      dup11\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6888:6952  callback.proxyCreated(proxy, _singleton, initializer, saltNonce) */\n      0x04\n      add\n      tag_70\n      jump\t// in\n    tag_69:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6851:6952  if (address(callback) != address(0)) callback.proxyCreated(proxy, _singleton, initializer, saltNonce) */\n    tag_68:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":6448:6959  function createProxyWithCallback(... */\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4184:4953  function deployProxyWithNonce(... */\n    tag_39:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4327:4348  GnosisSafeProxy proxy */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4502:4514  bytes32 salt */\n      dup1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4554:4565  initializer */\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4544:4566  keccak256(initializer) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4568:4577  saltNonce */\n      dup4\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4527:4578  abi.encodePacked(keccak256(initializer), saltNonce) */\n      add(0x20, mload(0x40))\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4517:4579  keccak256(abi.encodePacked(keccak256(initializer), saltNonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4502:4579  bytes32 salt = keccak256(abi.encodePacked(keccak256(initializer), saltNonce)) */\n      swap1\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4589:4616  bytes memory deploymentData */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4636:4670  type(GnosisSafeProxy).creationCode */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      tag_77\n      swap1\n      tag_52\n      jump\t// in\n    tag_77:\n      not(0x1f)\n      dup3\n      dup3\n      sub\n      dup2\n      add\n      dup4\n      mstore\n      0x1f\n      swap1\n      swap2\n      add\n      and\n      0x40\n      dup2\n      swap1\n      mstore\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4619:4701  abi.encodePacked(type(GnosisSafeProxy).creationCode, uint256(uint160(_singleton))) */\n      tag_78\n      swap2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4636:4670  type(GnosisSafeProxy).creationCode */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4672:4700  uint256(uint160(_singleton)) */\n      dup10\n      and\n      swap1\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4636:4670  type(GnosisSafeProxy).creationCode */\n      0x20\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4619:4701  abi.encodePacked(type(GnosisSafeProxy).creationCode, uint256(uint160(_singleton))) */\n      add\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4589:4701  bytes memory deploymentData = abi.encodePacked(type(GnosisSafeProxy).creationCode, uint256(uint160(_singleton))) */\n      swap1\n      pop\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4862:4866  salt */\n      dup2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4845:4859  deploymentData */\n      dup2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4839:4860  mload(deploymentData) */\n      mload\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4822:4836  deploymentData */\n      dup3\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4816:4820  0x20 */\n      0x20\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4812:4837  add(0x20, deploymentData) */\n      add\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4807:4810  0x0 */\n      0x00\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4799:4867  create2(0x0, add(0x20, deploymentData), mload(deploymentData), salt) */\n      create2\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4790:4867  proxy := create2(0x0, add(0x20, deploymentData), mload(deploymentData), salt) */\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4894:4922  address(proxy) != address(0) */\n      dup4\n      and\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4886:4946  require(address(proxy) != address(0), \"Create2 call failed\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_82\n      jump\t// in\n    tag_80:\n        /* \"contracts/GnosisSafeProxyFactory.sol\":4184:4953  function deployProxyWithNonce(... */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_52:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    tag_63:\n      dataSize(sub_1)\n      dup1\n      dataOffset(sub_1)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:726   */\n    tag_84:\n      0x00\n        /* \"#utility.yul\":111:114   */\n      dup3\n        /* \"#utility.yul\":104:108   */\n      0x1f\n        /* \"#utility.yul\":96:102   */\n      dup4\n        /* \"#utility.yul\":92:109   */\n      add\n        /* \"#utility.yul\":88:115   */\n      slt\n        /* \"#utility.yul\":78:80   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":133:138   */\n      dup1\n        /* \"#utility.yul\":126:131   */\n      dup2\n        /* \"#utility.yul\":119:139   */\n      revert\n        /* \"#utility.yul\":78:80   */\n    tag_86:\n        /* \"#utility.yul\":173:179   */\n      dup2\n        /* \"#utility.yul\":160:180   */\n      calldataload\n        /* \"#utility.yul\":199:217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":236:238   */\n      dup1\n        /* \"#utility.yul\":232:234   */\n      dup3\n        /* \"#utility.yul\":229:239   */\n      gt\n        /* \"#utility.yul\":226:228   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":242:260   */\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":291:293   */\n      0x40\n        /* \"#utility.yul\":285:294   */\n      mload\n        /* \"#utility.yul\":360:362   */\n      0x1f\n        /* \"#utility.yul\":341:354   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":337:364   */\n      and\n        /* \"#utility.yul\":325:365   */\n      dup2\n      add\n        /* \"#utility.yul\":367:371   */\n      0x20\n        /* \"#utility.yul\":321:372   */\n      add\n        /* \"#utility.yul\":387:405   */\n      dup3\n      dup2\n      gt\n        /* \"#utility.yul\":407:429   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":384:430   */\n      or\n        /* \"#utility.yul\":381:383   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":433:451   */\n      tag_91\n      tag_89\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":469:471   */\n      0x40\n        /* \"#utility.yul\":462:484   */\n      mstore\n        /* \"#utility.yul\":493:511   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":530:545   */\n      dup5\n      dup4\n      add\n        /* \"#utility.yul\":547:551   */\n      0x20\n        /* \"#utility.yul\":526:552   */\n      add\n        /* \"#utility.yul\":523:558   */\n      dup7\n      lt\n        /* \"#utility.yul\":520:522   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":575:580   */\n      dup4\n        /* \"#utility.yul\":568:573   */\n      dup5\n        /* \"#utility.yul\":561:581   */\n      revert\n        /* \"#utility.yul\":520:522   */\n    tag_92:\n        /* \"#utility.yul\":643:645   */\n      dup3\n        /* \"#utility.yul\":636:640   */\n      0x20\n        /* \"#utility.yul\":628:634   */\n      dup7\n        /* \"#utility.yul\":624:641   */\n      add\n        /* \"#utility.yul\":617:621   */\n      0x20\n        /* \"#utility.yul\":609:615   */\n      dup4\n        /* \"#utility.yul\":605:622   */\n      add\n        /* \"#utility.yul\":592:646   */\n      calldatacopy\n        /* \"#utility.yul\":666:681   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":683:687   */\n      0x20\n        /* \"#utility.yul\":662:688   */\n      add\n        /* \"#utility.yul\":655:696   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":670:676   */\n      swap4\n        /* \"#utility.yul\":68:726   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":731:1577   */\n    tag_17:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":896:898   */\n      0x60\n        /* \"#utility.yul\":884:893   */\n      dup6\n        /* \"#utility.yul\":875:882   */\n      dup8\n        /* \"#utility.yul\":871:894   */\n      sub\n        /* \"#utility.yul\":867:899   */\n      slt\n        /* \"#utility.yul\":864:866   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":917:923   */\n      dup4\n        /* \"#utility.yul\":909:915   */\n      dup5\n        /* \"#utility.yul\":902:924   */\n      revert\n        /* \"#utility.yul\":864:866   */\n    tag_94:\n        /* \"#utility.yul\":961:970   */\n      dup5\n        /* \"#utility.yul\":948:971   */\n      calldataload\n        /* \"#utility.yul\":980:1013   */\n      tag_95\n        /* \"#utility.yul\":1007:1012   */\n      dup2\n        /* \"#utility.yul\":980:1013   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1032:1037   */\n      swap4\n      pop\n        /* \"#utility.yul\":1088:1090   */\n      0x20\n        /* \"#utility.yul\":1073:1091   */\n      dup6\n      add\n        /* \"#utility.yul\":1060:1092   */\n      calldataload\n        /* \"#utility.yul\":1111:1129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1141:1155   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1138:1140   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup5\n        /* \"#utility.yul\":1165:1171   */\n      dup6\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1138:1140   */\n    tag_97:\n        /* \"#utility.yul\":1216:1222   */\n      dup2\n        /* \"#utility.yul\":1205:1214   */\n      dup8\n        /* \"#utility.yul\":1201:1223   */\n      add\n        /* \"#utility.yul\":1191:1223   */\n      swap2\n      pop\n        /* \"#utility.yul\":1261:1268   */\n      dup8\n        /* \"#utility.yul\":1254:1258   */\n      0x1f\n        /* \"#utility.yul\":1250:1252   */\n      dup4\n        /* \"#utility.yul\":1246:1259   */\n      add\n        /* \"#utility.yul\":1242:1269   */\n      slt\n        /* \"#utility.yul\":1232:1234   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1288:1294   */\n      dup5\n        /* \"#utility.yul\":1280:1286   */\n      dup6\n        /* \"#utility.yul\":1273:1295   */\n      revert\n        /* \"#utility.yul\":1232:1234   */\n    tag_98:\n        /* \"#utility.yul\":1333:1335   */\n      dup2\n        /* \"#utility.yul\":1320:1336   */\n      calldataload\n        /* \"#utility.yul\":1359:1361   */\n      dup2\n        /* \"#utility.yul\":1351:1357   */\n      dup2\n        /* \"#utility.yul\":1348:1362   */\n      gt\n        /* \"#utility.yul\":1345:1347   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1380:1386   */\n      dup6\n        /* \"#utility.yul\":1372:1378   */\n      dup7\n        /* \"#utility.yul\":1365:1387   */\n      revert\n        /* \"#utility.yul\":1345:1347   */\n    tag_99:\n        /* \"#utility.yul\":1430:1437   */\n      dup9\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1416:1422   */\n      dup3\n        /* \"#utility.yul\":1412:1414   */\n      dup6\n        /* \"#utility.yul\":1408:1423   */\n      add\n        /* \"#utility.yul\":1404:1428   */\n      add\n        /* \"#utility.yul\":1401:1438   */\n      gt\n        /* \"#utility.yul\":1398:1400   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1456:1462   */\n      dup6\n        /* \"#utility.yul\":1448:1454   */\n      dup7\n        /* \"#utility.yul\":1441:1463   */\n      revert\n        /* \"#utility.yul\":1398:1400   */\n    tag_100:\n        /* \"#utility.yul\":854:1577   */\n      swap6\n      swap9\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1484:1495   */\n      swap3\n      swap1\n      swap3\n      add\n      swap8\n      pop\n        /* \"#utility.yul\":1514:1520   */\n      swap5\n      swap6\n        /* \"#utility.yul\":1567:1569   */\n      0x40\n        /* \"#utility.yul\":1552:1570   */\n      add\n        /* \"#utility.yul\":1539:1571   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":854:1577   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1582:2061   */\n    tag_26:\n      0x00\n      dup1\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1708:1717   */\n      dup4\n        /* \"#utility.yul\":1699:1706   */\n      dup6\n        /* \"#utility.yul\":1695:1718   */\n      sub\n        /* \"#utility.yul\":1691:1723   */\n      slt\n        /* \"#utility.yul\":1688:1690   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1741:1747   */\n      dup2\n        /* \"#utility.yul\":1733:1739   */\n      dup3\n        /* \"#utility.yul\":1726:1748   */\n      revert\n        /* \"#utility.yul\":1688:1690   */\n    tag_102:\n        /* \"#utility.yul\":1785:1794   */\n      dup3\n        /* \"#utility.yul\":1772:1795   */\n      calldataload\n        /* \"#utility.yul\":1804:1837   */\n      tag_103\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1804:1837   */\n      tag_96\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1856:1861   */\n      swap2\n      pop\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      dup4\n      add\n        /* \"#utility.yul\":1884:1916   */\n      calldataload\n        /* \"#utility.yul\":1939:1957   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1928:1958   */\n      dup2\n      gt\n        /* \"#utility.yul\":1925:1927   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1976:1982   */\n      dup2\n        /* \"#utility.yul\":1968:1974   */\n      dup3\n        /* \"#utility.yul\":1961:1983   */\n      revert\n        /* \"#utility.yul\":1925:1927   */\n    tag_104:\n        /* \"#utility.yul\":2004:2055   */\n      tag_105\n        /* \"#utility.yul\":2047:2054   */\n      dup6\n        /* \"#utility.yul\":2038:2044   */\n      dup3\n        /* \"#utility.yul\":2027:2036   */\n      dup7\n        /* \"#utility.yul\":2023:2045   */\n      add\n        /* \"#utility.yul\":2004:2055   */\n      tag_84\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1994:2055   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1678:2061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2066:2613   */\n    tag_11:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2221:2223   */\n      0x60\n        /* \"#utility.yul\":2209:2218   */\n      dup5\n        /* \"#utility.yul\":2200:2207   */\n      dup7\n        /* \"#utility.yul\":2196:2219   */\n      sub\n        /* \"#utility.yul\":2192:2224   */\n      slt\n        /* \"#utility.yul\":2189:2191   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2242:2248   */\n      dup3\n        /* \"#utility.yul\":2234:2240   */\n      dup4\n        /* \"#utility.yul\":2227:2249   */\n      revert\n        /* \"#utility.yul\":2189:2191   */\n    tag_107:\n        /* \"#utility.yul\":2286:2295   */\n      dup4\n        /* \"#utility.yul\":2273:2296   */\n      calldataload\n        /* \"#utility.yul\":2305:2338   */\n      tag_108\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2305:2338   */\n      tag_96\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2357:2362   */\n      swap3\n      pop\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2398:2416   */\n      dup5\n      add\n        /* \"#utility.yul\":2385:2417   */\n      calldataload\n        /* \"#utility.yul\":2440:2458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2429:2459   */\n      dup2\n      gt\n        /* \"#utility.yul\":2426:2428   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2477:2483   */\n      dup3\n        /* \"#utility.yul\":2469:2475   */\n      dup4\n        /* \"#utility.yul\":2462:2484   */\n      revert\n        /* \"#utility.yul\":2426:2428   */\n    tag_109:\n        /* \"#utility.yul\":2505:2556   */\n      tag_110\n        /* \"#utility.yul\":2548:2555   */\n      dup7\n        /* \"#utility.yul\":2539:2545   */\n      dup3\n        /* \"#utility.yul\":2528:2537   */\n      dup8\n        /* \"#utility.yul\":2524:2546   */\n      add\n        /* \"#utility.yul\":2505:2556   */\n      tag_84\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2495:2556   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2603:2605   */\n      0x40\n        /* \"#utility.yul\":2592:2601   */\n      dup5\n        /* \"#utility.yul\":2588:2606   */\n      add\n        /* \"#utility.yul\":2575:2607   */\n      calldataload\n        /* \"#utility.yul\":2565:2607   */\n      swap1\n      pop\n        /* \"#utility.yul\":2179:2613   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2618:3338   */\n    tag_34:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":2819:2822   */\n      0x80\n        /* \"#utility.yul\":2807:2816   */\n      dup6\n        /* \"#utility.yul\":2798:2805   */\n      dup8\n        /* \"#utility.yul\":2794:2817   */\n      sub\n        /* \"#utility.yul\":2790:2823   */\n      slt\n        /* \"#utility.yul\":2787:2789   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":2841:2847   */\n      dup4\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2826:2848   */\n      revert\n        /* \"#utility.yul\":2787:2789   */\n    tag_112:\n        /* \"#utility.yul\":2885:2894   */\n      dup5\n        /* \"#utility.yul\":2872:2895   */\n      calldataload\n        /* \"#utility.yul\":2904:2937   */\n      tag_113\n        /* \"#utility.yul\":2931:2936   */\n      dup2\n        /* \"#utility.yul\":2904:2937   */\n      tag_96\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2956:2961   */\n      swap4\n      pop\n        /* \"#utility.yul\":3012:3014   */\n      0x20\n        /* \"#utility.yul\":2997:3015   */\n      dup6\n      add\n        /* \"#utility.yul\":2984:3016   */\n      calldataload\n        /* \"#utility.yul\":3039:3057   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3028:3058   */\n      dup2\n      gt\n        /* \"#utility.yul\":3025:3027   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3076:3082   */\n      dup4\n        /* \"#utility.yul\":3068:3074   */\n      dup5\n        /* \"#utility.yul\":3061:3083   */\n      revert\n        /* \"#utility.yul\":3025:3027   */\n    tag_114:\n        /* \"#utility.yul\":3104:3155   */\n      tag_115\n        /* \"#utility.yul\":3147:3154   */\n      dup8\n        /* \"#utility.yul\":3138:3144   */\n      dup3\n        /* \"#utility.yul\":3127:3136   */\n      dup9\n        /* \"#utility.yul\":3123:3145   */\n      add\n        /* \"#utility.yul\":3104:3155   */\n      tag_84\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3094:3155   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":3202:3204   */\n      0x40\n        /* \"#utility.yul\":3191:3200   */\n      dup6\n        /* \"#utility.yul\":3187:3205   */\n      add\n        /* \"#utility.yul\":3174:3206   */\n      calldataload\n        /* \"#utility.yul\":3164:3206   */\n      swap2\n      pop\n        /* \"#utility.yul\":3258:3260   */\n      0x60\n        /* \"#utility.yul\":3247:3256   */\n      dup6\n        /* \"#utility.yul\":3243:3261   */\n      add\n        /* \"#utility.yul\":3230:3262   */\n      calldataload\n        /* \"#utility.yul\":3271:3306   */\n      tag_116\n        /* \"#utility.yul\":3298:3305   */\n      dup2\n        /* \"#utility.yul\":3271:3306   */\n      tag_96\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2777:3338   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3602   */\n    tag_117:\n      0x00\n        /* \"#utility.yul\":3424:3429   */\n      dup2\n        /* \"#utility.yul\":3418:3430   */\n      mload\n        /* \"#utility.yul\":3451:3457   */\n      dup1\n        /* \"#utility.yul\":3446:3449   */\n      dup5\n        /* \"#utility.yul\":3439:3458   */\n      mstore\n        /* \"#utility.yul\":3467:3530   */\n      tag_119\n        /* \"#utility.yul\":3523:3529   */\n      dup2\n        /* \"#utility.yul\":3516:3520   */\n      0x20\n        /* \"#utility.yul\":3511:3514   */\n      dup7\n        /* \"#utility.yul\":3507:3521   */\n      add\n        /* \"#utility.yul\":3500:3504   */\n      0x20\n        /* \"#utility.yul\":3493:3498   */\n      dup7\n        /* \"#utility.yul\":3489:3505   */\n      add\n        /* \"#utility.yul\":3467:3530   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3584:3586   */\n      0x1f\n        /* \"#utility.yul\":3563:3578   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3559:3588   */\n      and\n        /* \"#utility.yul\":3550:3589   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3591:3595   */\n      0x20\n        /* \"#utility.yul\":3546:3596   */\n      add\n      swap3\n        /* \"#utility.yul\":3394:3602   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3607:3854   */\n    tag_76:\n        /* \"#utility.yul\":3764:3783   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"#utility.yul\":3799:3811   */\n      dup3\n      add\n        /* \"#utility.yul\":3792:3820   */\n      mstore\n        /* \"#utility.yul\":3845:3847   */\n      0x40\n        /* \"#utility.yul\":3836:3848   */\n      add\n      swap1\n        /* \"#utility.yul\":3754:3854   */\n      jump\t// out\n        /* \"#utility.yul\":3859:4229   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":4054:4060   */\n      dup4\n        /* \"#utility.yul\":4048:4061   */\n      mload\n        /* \"#utility.yul\":4070:4123   */\n      tag_123\n        /* \"#utility.yul\":4116:4122   */\n      dup2\n        /* \"#utility.yul\":4111:4114   */\n      dup5\n        /* \"#utility.yul\":4104:4108   */\n      0x20\n        /* \"#utility.yul\":4096:4102   */\n      dup9\n        /* \"#utility.yul\":4092:4109   */\n      add\n        /* \"#utility.yul\":4070:4123   */\n      tag_120\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4145:4161   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4170:4191   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":4218:4222   */\n      0x20\n        /* \"#utility.yul\":4207:4223   */\n      add\n      swap2\n        /* \"#utility.yul\":4024:4229   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4234:4493   */\n    tag_47:\n        /* \"#utility.yul\":4413:4415   */\n      0x60\n        /* \"#utility.yul\":4409:4424   */\n      swap2\n      swap1\n      swap2\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":4405:4458   */\n      and\n        /* \"#utility.yul\":4393:4459   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4484:4486   */\n      0x14\n        /* \"#utility.yul\":4475:4487   */\n      add\n      swap1\n        /* \"#utility.yul\":4383:4493   */\n      jump\t// out\n        /* \"#utility.yul\":4498:4821   */\n    tag_66:\n        /* \"#utility.yul\":4684:4703   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":4741:4743   */\n      0x60\n        /* \"#utility.yul\":4737:4752   */\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":4733:4786   */\n      and\n        /* \"#utility.yul\":4728:4730   */\n      0x20\n        /* \"#utility.yul\":4719:4731   */\n      dup3\n      add\n        /* \"#utility.yul\":4712:4787   */\n      mstore\n        /* \"#utility.yul\":4812:4814   */\n      0x34\n        /* \"#utility.yul\":4803:4815   */\n      add\n      swap1\n        /* \"#utility.yul\":4674:4821   */\n      jump\t// out\n        /* \"#utility.yul\":4826:5029   */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4990:5022   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4972:5023   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"#utility.yul\":4945:4963   */\n      add\n      swap1\n        /* \"#utility.yul\":4927:5029   */\n      jump\t// out\n        /* \"#utility.yul\":5034:5253   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5170:5179   */\n      dup3\n        /* \"#utility.yul\":5163:5184   */\n      mstore\n        /* \"#utility.yul\":5201:5247   */\n      tag_128\n        /* \"#utility.yul\":5243:5245   */\n      0x20\n        /* \"#utility.yul\":5232:5241   */\n      dup4\n        /* \"#utility.yul\":5228:5246   */\n      add\n        /* \"#utility.yul\":5220:5226   */\n      dup5\n        /* \"#utility.yul\":5201:5247   */\n      tag_117\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5193:5247   */\n      swap4\n        /* \"#utility.yul\":5153:5253   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5496:5830   */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5756:5771   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":5738:5772   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5808:5823   */\n      swap2\n      and\n        /* \"#utility.yul\":5803:5805   */\n      0x20\n        /* \"#utility.yul\":5788:5806   */\n      dup3\n      add\n        /* \"#utility.yul\":5781:5824   */\n      mstore\n        /* \"#utility.yul\":5688:5690   */\n      0x40\n        /* \"#utility.yul\":5673:5691   */\n      add\n      swap1\n        /* \"#utility.yul\":5655:5830   */\n      jump\t// out\n        /* \"#utility.yul\":5835:6355   */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6134:6149   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":6116:6150   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6186:6201   */\n      dup5\n      and\n        /* \"#utility.yul\":6181:6183   */\n      0x20\n        /* \"#utility.yul\":6166:6184   */\n      dup3\n      add\n        /* \"#utility.yul\":6159:6202   */\n      mstore\n        /* \"#utility.yul\":6238:6241   */\n      0x80\n        /* \"#utility.yul\":6233:6235   */\n      0x40\n        /* \"#utility.yul\":6218:6236   */\n      dup3\n      add\n        /* \"#utility.yul\":6211:6242   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5835:6355   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6259:6306   */\n      tag_132\n      swap1\n        /* \"#utility.yul\":6286:6305   */\n      dup4\n      add\n        /* \"#utility.yul\":6278:6284   */\n      dup6\n        /* \"#utility.yul\":6259:6306   */\n      tag_117\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6251:6306   */\n      swap1\n      pop\n        /* \"#utility.yul\":6342:6348   */\n      dup3\n        /* \"#utility.yul\":6337:6339   */\n      0x60\n        /* \"#utility.yul\":6326:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6340   */\n      add\n        /* \"#utility.yul\":6315:6349   */\n      mstore\n        /* \"#utility.yul\":6068:6355   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6586:6929   */\n    tag_82:\n        /* \"#utility.yul\":6788:6790   */\n      0x20\n        /* \"#utility.yul\":6770:6791   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6827:6829   */\n      0x13\n        /* \"#utility.yul\":6807:6825   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6800:6830   */\n      mstore\n      shl(0x6a, 0x10dc99585d194c8818d85b1b0819985a5b1959)\n        /* \"#utility.yul\":6861:6863   */\n      0x40\n        /* \"#utility.yul\":6846:6864   */\n      dup3\n      add\n        /* \"#utility.yul\":6839:6888   */\n      mstore\n        /* \"#utility.yul\":6920:6922   */\n      0x60\n        /* \"#utility.yul\":6905:6923   */\n      add\n      swap1\n        /* \"#utility.yul\":6760:6929   */\n      jump\t// out\n        /* \"#utility.yul\":6934:7192   */\n    tag_120:\n        /* \"#utility.yul\":7006:7007   */\n      0x00\n        /* \"#utility.yul\":7016:7129   */\n    tag_137:\n        /* \"#utility.yul\":7030:7036   */\n      dup4\n        /* \"#utility.yul\":7027:7028   */\n      dup2\n        /* \"#utility.yul\":7024:7037   */\n      lt\n        /* \"#utility.yul\":7016:7129   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":7106:7117   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7100:7118   */\n      mload\n        /* \"#utility.yul\":7087:7098   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":7080:7119   */\n      mstore\n        /* \"#utility.yul\":7052:7054   */\n      0x20\n        /* \"#utility.yul\":7045:7055   */\n      add\n        /* \"#utility.yul\":7016:7129   */\n      jump(tag_137)\n    tag_139:\n        /* \"#utility.yul\":7147:7153   */\n      dup4\n        /* \"#utility.yul\":7144:7145   */\n      dup2\n        /* \"#utility.yul\":7141:7154   */\n      gt\n        /* \"#utility.yul\":7138:7140   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":7182:7183   */\n      0x00\n        /* \"#utility.yul\":7173:7179   */\n      dup5\n        /* \"#utility.yul\":7168:7171   */\n      dup5\n        /* \"#utility.yul\":7164:7180   */\n      add\n        /* \"#utility.yul\":7157:7184   */\n      mstore\n        /* \"#utility.yul\":7138:7140   */\n    tag_140:\n      pop\n        /* \"#utility.yul\":6987:7192   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7197:7324   */\n    tag_89:\n        /* \"#utility.yul\":7258:7268   */\n      0x4e487b71\n        /* \"#utility.yul\":7253:7256   */\n      0xe0\n        /* \"#utility.yul\":7249:7269   */\n      shl\n        /* \"#utility.yul\":7246:7247   */\n      0x00\n        /* \"#utility.yul\":7239:7270   */\n      mstore\n        /* \"#utility.yul\":7289:7293   */\n      0x41\n        /* \"#utility.yul\":7286:7287   */\n      0x04\n        /* \"#utility.yul\":7279:7294   */\n      mstore\n        /* \"#utility.yul\":7313:7317   */\n      0x24\n        /* \"#utility.yul\":7310:7311   */\n      0x00\n        /* \"#utility.yul\":7303:7318   */\n      revert\n        /* \"#utility.yul\":7329:7462   */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7406:7437   */\n      dup2\n      and\n        /* \"#utility.yul\":7396:7438   */\n      dup2\n      eq\n        /* \"#utility.yul\":7386:7388   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":7452:7453   */\n      0x00\n        /* \"#utility.yul\":7449:7450   */\n      dup1\n        /* \"#utility.yul\":7442:7454   */\n      revert\n        /* \"#utility.yul\":7386:7388   */\n    tag_143:\n        /* \"#utility.yul\":7376:7462   */\n      pop\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n          mstore(0x40, 0x80)\n            /* \"contracts/GnosisSafeProxyFactory.sol\":946:1098  constructor(address _singleton) {... */\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          add\n          0x40\n          dup2\n          swap1\n          mstore\n          tag_2\n          swap2\n          tag_3\n          jump\t// in\n        tag_2:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"contracts/GnosisSafeProxyFactory.sol\":996:1020  _singleton != address(0) */\n          dup2\n          and\n            /* \"contracts/GnosisSafeProxyFactory.sol\":988:1059  require(_singleton != address(0), \"Invalid singleton address provided\") */\n          tag_6\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n          tag_7\n          swap1\n          0x04\n          add\n          tag_8\n          jump\t// in\n        tag_7:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n        tag_6:\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1069:1078  singleton */\n          0x00\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1069:1091  singleton = _singleton */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          and\n          sub(shl(0xa0, 0x01), 0x01)\n          swap3\n          swap1\n          swap3\n          and\n          swap2\n          swap1\n          swap2\n          or\n          swap1\n          sstore\n            /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n          jump(tag_10)\n            /* \"#utility.yul\":14:324   */\n        tag_3:\n          0x00\n            /* \"#utility.yul\":137:139   */\n          0x20\n            /* \"#utility.yul\":125:134   */\n          dup3\n            /* \"#utility.yul\":116:123   */\n          dup5\n            /* \"#utility.yul\":112:135   */\n          sub\n            /* \"#utility.yul\":108:140   */\n          slt\n            /* \"#utility.yul\":105:107   */\n          iszero\n          tag_12\n          jumpi\n            /* \"#utility.yul\":158:164   */\n          dup1\n            /* \"#utility.yul\":150:156   */\n          dup2\n            /* \"#utility.yul\":143:165   */\n          revert\n            /* \"#utility.yul\":105:107   */\n        tag_12:\n            /* \"#utility.yul\":189:205   */\n          dup2\n          mload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":234:265   */\n          dup2\n          and\n            /* \"#utility.yul\":224:266   */\n          dup2\n          eq\n            /* \"#utility.yul\":214:216   */\n          tag_13\n          jumpi\n            /* \"#utility.yul\":285:291   */\n          dup2\n            /* \"#utility.yul\":277:283   */\n          dup3\n            /* \"#utility.yul\":270:292   */\n          revert\n            /* \"#utility.yul\":214:216   */\n        tag_13:\n            /* \"#utility.yul\":313:318   */\n          swap4\n            /* \"#utility.yul\":95:324   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":329:727   */\n        tag_8:\n            /* \"#utility.yul\":531:533   */\n          0x20\n            /* \"#utility.yul\":513:534   */\n          dup1\n          dup3\n          mstore\n            /* \"#utility.yul\":570:572   */\n          0x22\n            /* \"#utility.yul\":550:568   */\n          swap1\n          dup3\n          add\n            /* \"#utility.yul\":543:573   */\n          mstore\n            /* \"#utility.yul\":609:643   */\n          0x496e76616c69642073696e676c65746f6e20616464726573732070726f766964\n            /* \"#utility.yul\":604:606   */\n          0x40\n            /* \"#utility.yul\":589:607   */\n          dup3\n          add\n            /* \"#utility.yul\":582:644   */\n          mstore\n          shl(0xf2, 0x1959)\n            /* \"#utility.yul\":675:677   */\n          0x60\n            /* \"#utility.yul\":660:678   */\n          dup3\n          add\n            /* \"#utility.yul\":653:685   */\n          mstore\n            /* \"#utility.yul\":717:720   */\n          0x80\n            /* \"#utility.yul\":702:721   */\n          add\n          swap1\n            /* \"#utility.yul\":503:727   */\n          jump\t// out\n        tag_10:\n            /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n              mstore(0x40, 0x80)\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              0x00\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1338:1346  sload(0) */\n              dup1\n              sload\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1334:1391  and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff) */\n              and\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1509:1524  calldataload(0) */\n              dup2\n              calldataload\n              shl(0xe1, 0x530ca437)\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1506:1593  eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) */\n              eq\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1503:1505  if */\n              iszero\n              tag_5\n              jumpi\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1622:1632  _singleton */\n              dup1\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup3\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1612:1633  mstore(0, _singleton) */\n              mstore\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1660:1664  0x20 */\n              0x20\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup3\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1650:1665  return(0, 0x20) */\n              return\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1503:1505  if */\n            tag_5:\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1711:1725  calldatasize() */\n              calldatasize\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup3\n              dup4\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1692:1726  calldatacopy(0, 0, calldatasize()) */\n              calldatacopy\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup2\n              dup3\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1711:1725  calldatasize() */\n              calldatasize\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup5\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1774:1784  _singleton */\n              dup5\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1767:1772  gas() */\n              gas\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1754:1810  delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n              delegatecall\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1739:1810  let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n              swap1\n              pop\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1844:1860  returndatasize() */\n              returndatasize\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup3\n              dup4\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1823:1861  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1880:1887  success */\n              dup1\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1874:1876  if */\n              tag_6\n              jumpi\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1920:1936  returndatasize() */\n              returndatasize\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup3\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1910:1937  revert(0, returndatasize()) */\n              revert\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1874:1876  if */\n            tag_6:\n              pop\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1974:1990  returndatasize() */\n              returndatasize\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n              dup2\n                /* \"contracts/GnosisSafeProxyFactory.sol\":1964:1991  return(0, returndatasize()) */\n              return\n\n            auxdata: 0xa2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033\n        }\n    }\n\n    sub_1: assembly {\n            /* \"contracts/GnosisSafeProxyFactory.sol\":512:2009  contract GnosisSafeProxy {... */\n          mstore(0x40, 0x80)\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          0x00\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1338:1346  sload(0) */\n          dup1\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1334:1391  and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff) */\n          and\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1509:1524  calldataload(0) */\n          dup2\n          calldataload\n          shl(0xe1, 0x530ca437)\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1506:1593  eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) */\n          eq\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1503:1505  if */\n          iszero\n          tag_5\n          jumpi\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1622:1632  _singleton */\n          dup1\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup3\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1612:1633  mstore(0, _singleton) */\n          mstore\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1660:1664  0x20 */\n          0x20\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup3\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1650:1665  return(0, 0x20) */\n          return\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1503:1505  if */\n        tag_5:\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1711:1725  calldatasize() */\n          calldatasize\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup3\n          dup4\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1692:1726  calldatacopy(0, 0, calldatasize()) */\n          calldatacopy\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup2\n          dup3\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1711:1725  calldatasize() */\n          calldatasize\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup5\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1774:1784  _singleton */\n          dup5\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1767:1772  gas() */\n          gas\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1754:1810  delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n          delegatecall\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1739:1810  let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0) */\n          swap1\n          pop\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1844:1860  returndatasize() */\n          returndatasize\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup3\n          dup4\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1823:1861  returndatacopy(0, 0, returndatasize()) */\n          returndatacopy\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1880:1887  success */\n          dup1\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1874:1876  if */\n          tag_6\n          jumpi\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1920:1936  returndatasize() */\n          returndatasize\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup3\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1910:1937  revert(0, returndatasize()) */\n          revert\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1874:1876  if */\n        tag_6:\n          pop\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1974:1990  returndatasize() */\n          returndatasize\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1344:1345  0 */\n          dup2\n            /* \"contracts/GnosisSafeProxyFactory.sol\":1964:1991  return(0, returndatasize()) */\n          return\n\n        auxdata: 0xa2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033\n    }\n\n    auxdata: 0xa2646970667358221220df483018393a41e868860d1d9d2bec4ace87e65e6443c17c33dee393bcf015b164736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610a36806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631688f0b9146100675780632500510e1461009057806353e5d935146100a357806361b69abd146100b8578063addacc0f146100cb578063d18af54d146100d3575b600080fd5b61007a61007536600461059d565b6100e6565b60405161008791906106f7565b60405180910390f35b61007a61009e3660046104c9565b610158565b6100ab6101de565b604051610087919061070b565b61007a6100c636600461054f565b610208565b6100ab6102a2565b61007a6100e13660046105f4565b6102b4565b60006100f384848461036f565b8351909150156101185760008060008551602087016000865af1141561011857600080fd5b7f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2358185604051610149929190610725565b60405180910390a19392505050565b600061019c8585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087925061036f915050565b9050806040516020016101af91906106ba565b60408051601f198184030181529082905262461bcd60e51b82526101d59160040161070b565b60405180910390fd5b6060604051806020016101f09061042f565b601f1982820381018352601f90910116604052905090565b6000826040516102179061042f565b61022191906106f7565b604051809103906000f08015801561023d573d6000803e3d6000fd5b508251909150156102635760008060008451602086016000865af1141561026357600080fd5b7f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2358184604051610294929190610725565b60405180910390a192915050565b6060604051806020016101f09061043c565b60008083836040516020016102ca9291906106d7565b6040516020818303038152906040528051906020012060001c90506102f08686836100e6565b91506001600160a01b03831615610366576040516303ca56a360e31b81526001600160a01b03841690631e52b518906103339085908a908a908a9060040161073f565b600060405180830381600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208360405160200161038c92919061068a565b6040516020818303038152906040528051906020012090506000604051806020016103b69061042f565b601f1982820381018352601f9091011660408190526103e391906001600160a01b03891690602001610698565b6040516020818303038152906040529050818151826020016000f592506001600160a01b0383166104265760405162461bcd60e51b81526004016101d59061077c565b50509392505050565b61017d8061080883390190565b607c8061098583390190565b600082601f830112610458578081fd5b813567ffffffffffffffff80821115610473576104736107d9565b604051601f8301601f191681016020018281118282101715610497576104976107d9565b6040528281528483016020018610156104ae578384fd5b82602086016020830137918201602001929092529392505050565b600080600080606085870312156104de578384fd5b84356104e9816107ef565b9350602085013567ffffffffffffffff80821115610505578485fd5b818701915087601f830112610518578485fd5b813581811115610526578586fd5b886020828501011115610537578586fd5b95986020929092019750949560400135945092505050565b60008060408385031215610561578182fd5b823561056c816107ef565b9150602083013567ffffffffffffffff811115610587578182fd5b61059385828601610448565b9150509250929050565b6000806000606084860312156105b1578283fd5b83356105bc816107ef565b9250602084013567ffffffffffffffff8111156105d7578283fd5b6105e386828701610448565b925050604084013590509250925092565b60008060008060808587031215610609578384fd5b8435610614816107ef565b9350602085013567ffffffffffffffff81111561062f578384fd5b61063b87828801610448565b935050604085013591506060850135610653816107ef565b939692955090935050565b600081518084526106768160208601602086016107a9565b601f01601f19169290920160200192915050565b918252602082015260400190565b600083516106aa8184602088016107a9565b9190910191825250602001919050565b60609190911b6bffffffffffffffffffffffff1916815260140190565b91825260601b6bffffffffffffffffffffffff1916602082015260340190565b6001600160a01b0391909116815260200190565b60006020825261071e602083018461065e565b9392505050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0385811682528416602082015260806040820181905260009061076b9083018561065e565b905082606083015295945050505050565b60208082526013908201527210dc99585d194c8818d85b1b0819985a5b1959606a1b604082015260600190565b60005b838110156107c45781810151838201526020016107ac565b838111156107d3576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461080457600080fd5b5056fe608060405234801561001057600080fd5b5060405161017d38038061017d83398101604081905261002f91610083565b6001600160a01b03811661005e5760405162461bcd60e51b8152600401610055906100b1565b60405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100f3565b600060208284031215610094578081fd5b81516001600160a01b03811681146100aa578182fd5b9392505050565b60208082526022908201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604082015261195960f21b606082015260800190565b607c806101016000396000f3fe6080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c634300080000336080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033a2646970667358221220df483018393a41e868860d1d9d2bec4ace87e65e6443c17c33dee393bcf015b164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA36 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1688F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2500510E EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x53E5D935 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x61B69ABD EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0xADDACC0F EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD18AF54D EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x59D JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x7A PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x54F JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP5 DUP5 DUP5 PUSH2 0x36F JUMP JUMPDEST DUP4 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP7 GAS CALL EQ ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F51FAF6C4561FF95F067657E43439F0F856D97C04D9EC9070A6199AD418E235 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x149 SWAP3 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP8 SWAP3 POP PUSH2 0x36F SWAP2 POP POP JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x1D5 SWAP2 PUSH1 0x4 ADD PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x1F0 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x217 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x23D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP7 GAS CALL EQ ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F51FAF6C4561FF95F067657E43439F0F856D97C04D9EC9070A6199AD418E235 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x294 SWAP3 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x1F0 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CA SWAP3 SWAP2 SWAP1 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x2F0 DUP7 DUP7 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3CA56A3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x1E52B518 SWAP1 PUSH2 0x333 SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x73F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x38C SWAP3 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3E3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 DUP2 MLOAD DUP3 PUSH1 0x20 ADD PUSH1 0x0 CREATE2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5 SWAP1 PUSH2 0x77C JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17D DUP1 PUSH2 0x808 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x7C DUP1 PUSH2 0x985 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x458 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x473 JUMPI PUSH2 0x473 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x4AE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4DE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x4E9 DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x505 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x518 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x526 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x537 JUMPI DUP6 DUP7 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x561 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x56C DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x587 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x593 DUP6 DUP3 DUP7 ADD PUSH2 0x448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5B1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5BC DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x5E3 DUP7 DUP3 DUP8 ADD PUSH2 0x448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x609 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x614 DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x63B DUP8 DUP3 DUP9 ADD PUSH2 0x448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x653 DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x676 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x6AA DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x71E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x76B SWAP1 DUP4 ADD DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x10DC99585D194C8818D85B1B0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7C4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7AC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17D CODESIZE SUB DUP1 PUSH2 0x17D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073696E676C65746F6E20616464726573732070726F766964 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7C DUP1 PUSH2 0x101 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 CALLDATALOAD PUSH4 0x530CA437 PUSH1 0xE1 SHL EQ ISZERO PUSH1 0x28 JUMPI DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 RETURN JUMPDEST CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 PUSH1 0x41 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATALOAD CALLDATACOPY 0xD9 MUL PUSH22 0xCFBB9962D96957AEE653ED372240999151F8C26A9426 LOG0 PUSH13 0x183C64736F6C63430008000033 PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 CALLDATALOAD PUSH4 0x530CA437 PUSH1 0xE1 SHL EQ ISZERO PUSH1 0x28 JUMPI DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 RETURN JUMPDEST CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 PUSH1 0x41 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATALOAD CALLDATACOPY 0xD9 MUL PUSH22 0xCFBB9962D96957AEE653ED372240999151F8C26A9426 LOG0 PUSH13 0x183C64736F6C63430008000033 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0x48 ADDRESS XOR CODECOPY GASPRICE COINBASE 0xE8 PUSH9 0x860D1D9D2BEC4ACE87 0xE6 0x5E PUSH5 0x43C17C33DE 0xE3 SWAP4 0xBC CREATE ISZERO 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "2390:5502:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7464:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "68:658:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "117:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "126:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "133:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "119:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "119:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "96:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "104:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "92:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "92:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "111:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "88:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "81:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "81:35:1"
															},
															"nodeType": "YulIf",
															"src": "78:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "150:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "173:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "160:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "154:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "189:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "199:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "193:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "240:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "242:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "242:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "242:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "232:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "236:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "229:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "229:10:1"
															},
															"nodeType": "YulIf",
															"src": "226:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "271:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "291:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "285:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "285:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "275:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "303:69:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "329:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "345:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "349:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "341:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "341:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "360:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "356:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "356:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "337:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "337:27:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "325:40:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "367:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "321:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "321:51:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "307:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "433:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "390:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "402:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "387:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "410:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "422:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "407:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "407:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "384:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:46:1"
															},
															"nodeType": "YulIf",
															"src": "381:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "469:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "473:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "462:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "462:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "500:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "508:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "559:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "568:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "575:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "561:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "561:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "534:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "542:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "530:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "530:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "547:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "526:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "526:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "554:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "523:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:35:1"
															},
															"nodeType": "YulIf",
															"src": "520:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "617:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "628:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "636:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "624:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "643:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "592:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "592:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "678:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:26:1"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "690:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "655:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "705:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "714:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "705:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "50:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "58:5:1",
														"type": ""
													}
												],
												"src": "14:712:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "854:723:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "909:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "917:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "875:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "884:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "871:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "896:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:32:1"
															},
															"nodeType": "YulIf",
															"src": "864:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "935:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "961:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "948:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "939:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1007:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "980:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "980:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1022:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1032:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1022:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1046:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1077:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1088:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1073:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1060:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1050:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1101:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1111:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1105:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1152:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1141:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:14:1"
															},
															"nodeType": "YulIf",
															"src": "1138:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1191:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1205:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1216:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1195:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1271:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1280:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1288:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1273:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1273:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1273:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1250:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1254:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1246:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1246:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1261:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:35:1"
															},
															"nodeType": "YulIf",
															"src": "1232:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1306:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1333:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1320:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1310:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1363:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1372:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1380:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1365:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1351:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1359:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1348:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:14:1"
															},
															"nodeType": "YulIf",
															"src": "1345:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1439:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1448:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1456:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1441:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1441:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1441:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1412:2:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1416:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1408:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1408:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1425:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1430:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1401:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:37:1"
															},
															"nodeType": "YulIf",
															"src": "1398:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1488:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:11:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1504:16:1",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1514:6:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1504:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1529:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1556:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1539:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "796:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "807:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "819:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "835:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "843:6:1",
														"type": ""
													}
												],
												"src": "731:846:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1678:383:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1724:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1733:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1741:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1726:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1726:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1699:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1708:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:32:1"
															},
															"nodeType": "YulIf",
															"src": "1688:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1759:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1785:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1772:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1763:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1804:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1804:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1846:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1856:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1897:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1884:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1874:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1968:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1976:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1961:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1931:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1939:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1928:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:30:1"
															},
															"nodeType": "YulIf",
															"src": "1925:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1994:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2027:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2047:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2004:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1994:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1636:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1647:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1659:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1667:6:1",
														"type": ""
													}
												],
												"src": "1582:479:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2179:434:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2225:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2234:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2242:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2227:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2227:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2227:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2200:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2209:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2196:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2221:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:32:1"
															},
															"nodeType": "YulIf",
															"src": "2189:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2286:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2273:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2264:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2332:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2305:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2347:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2357:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2347:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2371:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2402:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2413:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2385:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2375:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2469:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2477:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2429:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:30:1"
															},
															"nodeType": "YulIf",
															"src": "2426:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2495:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2528:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2539:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2548:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2505:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2565:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2592:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2603:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2575:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2129:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2140:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2152:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2160:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2168:6:1",
														"type": ""
													}
												],
												"src": "2066:547:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2777:561:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2824:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2833:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2841:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2826:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2826:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2826:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2798:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2807:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2794:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:33:1"
															},
															"nodeType": "YulIf",
															"src": "2787:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2859:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2885:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2872:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2863:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2931:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2904:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2904:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2946:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2956:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2970:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3012:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2997:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2984:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2974:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3068:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3076:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3061:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3031:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3039:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3028:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:30:1"
															},
															"nodeType": "YulIf",
															"src": "3025:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3094:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3138:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3147:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3104:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3164:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3202:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3174:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3215:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3258:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3243:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3230:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3219:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3298:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3271:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3271:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3315:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3325:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3315:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_contract$_IProxyCreationCallback_$52",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2719:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2730:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2742:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2750:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2758:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2766:6:1",
														"type": ""
													}
												],
												"src": "2618:720:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3394:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3424:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3418:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3408:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3446:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3493:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3500:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3489:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3511:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3516:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3507:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3523:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3467:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3467:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3539:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3554:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3567:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3575:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3563:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3563:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3584:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3580:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3580:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3559:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3559:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3550:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3371:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3378:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"src": "3343:259:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3754:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3776:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3764:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3803:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3799:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3813:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3792:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3829:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3840:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3845:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3722:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3727:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3735:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3746:3:1",
														"type": ""
													}
												],
												"src": "3607:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4034:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4054:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4048:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4038:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4092:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4111:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4116:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4070:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4132:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4149:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4154:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4136:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4177:5:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4184:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4200:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4211:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4200:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3992:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3997:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4005:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4016:3:1",
														"type": ""
													}
												],
												"src": "3859:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4383:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4400:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4413:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4417:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4409:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4409:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4430:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4426:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4393:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4393:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4468:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4479:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4484:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_contract$_GnosisSafeProxy_$39__to_t_address_payable__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4359:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4375:3:1",
														"type": ""
													}
												],
												"src": "4234:259:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4674:147:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4691:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4696:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4684:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4723:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4728:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4719:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4741:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "4745:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4737:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4737:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4758:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4754:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4754:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4733:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4796:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4807:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4812:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4796:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_contract$_IProxyCreationCallback_$52__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4642:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4647:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4655:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4666:3:1",
														"type": ""
													}
												],
												"src": "4498:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4927:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4937:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4945:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4937:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4994:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5010:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5015:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5006:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5006:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5019:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5002:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5002:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4990:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4972:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4896:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4907:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4918:4:1",
														"type": ""
													}
												],
												"src": "4826:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5163:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5193:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5220:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5228:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5201:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5193:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:1",
														"type": ""
													}
												],
												"src": "5034:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5389:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5399:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5407:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5399:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5441:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5456:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5472:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5477:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5468:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5468:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5481:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5464:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5464:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5452:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5434:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_GnosisSafeProxy_$39__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5358:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5369:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5380:4:1",
														"type": ""
													}
												],
												"src": "5258:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5655:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5665:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5677:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5688:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5665:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5700:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5718:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5723:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5704:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5745:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5760:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5768:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5756:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5738:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5803:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5812:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5820:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5808:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5781:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5781:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_GnosisSafeProxy_$39_t_address__to_t_address_payable_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5616:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5627:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5646:4:1",
														"type": ""
													}
												],
												"src": "5496:334:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:287:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6078:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6096:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6101:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6092:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6082:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6123:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6138:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6146:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6134:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6116:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6166:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6190:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6198:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6159:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6222:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6233:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6238:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6211:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6251:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6278:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6290:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6301:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6286:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6286:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6259:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:47:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6251:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6326:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6337:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6322:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6342:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_GnosisSafeProxy_$39_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_payable_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6013:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6024:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6032:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6040:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6048:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6059:4:1",
														"type": ""
													}
												],
												"src": "5835:520:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6481:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6560:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6571:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6529:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6529:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6521:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6450:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6461:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6472:4:1",
														"type": ""
													}
												],
												"src": "6360:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6760:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6777:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6788:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6770:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6770:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6811:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6822:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6807:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6827:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6800:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6800:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6850:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6861:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6846:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6866:21:1",
																		"type": "",
																		"value": "Create2 call failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6839:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6897:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6909:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6920:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6905:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6897:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7c71a0bdd2eb2834ad042153c811dd478e4ee2324e3003b9522e03e7b3735dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6737:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6751:4:1",
														"type": ""
													}
												],
												"src": "6586:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6987:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6997:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7006:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7001:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7066:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7091:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7096:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7087:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7087:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7115:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7106:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7106:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7100:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7100:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7080:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7080:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7080:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7030:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7024:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7038:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7040:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7049:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7052:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7045:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7045:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7040:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7020:3:1",
																"statements": []
															},
															"src": "7016:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7155:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7168:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7173:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7164:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7164:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7182:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7157:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7157:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7144:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7147:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7141:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:13:1"
															},
															"nodeType": "YulIf",
															"src": "7138:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6965:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6970:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6975:6:1",
														"type": ""
													}
												],
												"src": "6934:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7229:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7253:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7258:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7249:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7239:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7239:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7289:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7310:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7303:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7197:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7376:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7440:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7449:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7452:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7442:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7442:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7399:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7410:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7425:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7430:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7421:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7421:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7434:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7417:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7417:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7406:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7396:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7396:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:50:1"
															},
															"nodeType": "YulIf",
															"src": "7386:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7365:5:1",
														"type": ""
													}
												],
												"src": "7329:133:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value1, value1) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value1, value1) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_contract$_IProxyCreationCallback_$52(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, value1)\n        end := add(end_1, 0x20)\n    }\n    function abi_encode_tuple_packed_t_contract$_GnosisSafeProxy_$39__to_t_address_payable__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_contract$_IProxyCreationCallback_$52__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_GnosisSafeProxy_$39__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_GnosisSafeProxy_$39_t_address__to_t_address_payable_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_contract$_GnosisSafeProxy_$39_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_payable_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_d7c71a0bdd2eb2834ad042153c811dd478e4ee2324e3003b9522e03e7b3735dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Create2 call failed\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631688f0b9146100675780632500510e1461009057806353e5d935146100a357806361b69abd146100b8578063addacc0f146100cb578063d18af54d146100d3575b600080fd5b61007a61007536600461059d565b6100e6565b60405161008791906106f7565b60405180910390f35b61007a61009e3660046104c9565b610158565b6100ab6101de565b604051610087919061070b565b61007a6100c636600461054f565b610208565b6100ab6102a2565b61007a6100e13660046105f4565b6102b4565b60006100f384848461036f565b8351909150156101185760008060008551602087016000865af1141561011857600080fd5b7f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2358185604051610149929190610725565b60405180910390a19392505050565b600061019c8585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525087925061036f915050565b9050806040516020016101af91906106ba565b60408051601f198184030181529082905262461bcd60e51b82526101d59160040161070b565b60405180910390fd5b6060604051806020016101f09061042f565b601f1982820381018352601f90910116604052905090565b6000826040516102179061042f565b61022191906106f7565b604051809103906000f08015801561023d573d6000803e3d6000fd5b508251909150156102635760008060008451602086016000865af1141561026357600080fd5b7f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2358184604051610294929190610725565b60405180910390a192915050565b6060604051806020016101f09061043c565b60008083836040516020016102ca9291906106d7565b6040516020818303038152906040528051906020012060001c90506102f08686836100e6565b91506001600160a01b03831615610366576040516303ca56a360e31b81526001600160a01b03841690631e52b518906103339085908a908a908a9060040161073f565b600060405180830381600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208360405160200161038c92919061068a565b6040516020818303038152906040528051906020012090506000604051806020016103b69061042f565b601f1982820381018352601f9091011660408190526103e391906001600160a01b03891690602001610698565b6040516020818303038152906040529050818151826020016000f592506001600160a01b0383166104265760405162461bcd60e51b81526004016101d59061077c565b50509392505050565b61017d8061080883390190565b607c8061098583390190565b600082601f830112610458578081fd5b813567ffffffffffffffff80821115610473576104736107d9565b604051601f8301601f191681016020018281118282101715610497576104976107d9565b6040528281528483016020018610156104ae578384fd5b82602086016020830137918201602001929092529392505050565b600080600080606085870312156104de578384fd5b84356104e9816107ef565b9350602085013567ffffffffffffffff80821115610505578485fd5b818701915087601f830112610518578485fd5b813581811115610526578586fd5b886020828501011115610537578586fd5b95986020929092019750949560400135945092505050565b60008060408385031215610561578182fd5b823561056c816107ef565b9150602083013567ffffffffffffffff811115610587578182fd5b61059385828601610448565b9150509250929050565b6000806000606084860312156105b1578283fd5b83356105bc816107ef565b9250602084013567ffffffffffffffff8111156105d7578283fd5b6105e386828701610448565b925050604084013590509250925092565b60008060008060808587031215610609578384fd5b8435610614816107ef565b9350602085013567ffffffffffffffff81111561062f578384fd5b61063b87828801610448565b935050604085013591506060850135610653816107ef565b939692955090935050565b600081518084526106768160208601602086016107a9565b601f01601f19169290920160200192915050565b918252602082015260400190565b600083516106aa8184602088016107a9565b9190910191825250602001919050565b60609190911b6bffffffffffffffffffffffff1916815260140190565b91825260601b6bffffffffffffffffffffffff1916602082015260340190565b6001600160a01b0391909116815260200190565b60006020825261071e602083018461065e565b9392505050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0385811682528416602082015260806040820181905260009061076b9083018561065e565b905082606083015295945050505050565b60208082526013908201527210dc99585d194c8818d85b1b0819985a5b1959606a1b604082015260600190565b60005b838110156107c45781810151838201526020016107ac565b838111156107d3576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461080457600080fd5b5056fe608060405234801561001057600080fd5b5060405161017d38038061017d83398101604081905261002f91610083565b6001600160a01b03811661005e5760405162461bcd60e51b8152600401610055906100b1565b60405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100f3565b600060208284031215610094578081fd5b81516001600160a01b03811681146100aa578182fd5b9392505050565b60208082526022908201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604082015261195960f21b606082015260800190565b607c806101016000396000f3fe6080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c634300080000336080604052600080546001600160a01b0316813563530ca43760e11b1415602857808252602082f35b3682833781823684845af490503d82833e806041573d82fd5b503d81f3fea2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033a2646970667358221220df483018393a41e868860d1d9d2bec4ace87e65e6443c17c33dee393bcf015b164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1688F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2500510E EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x53E5D935 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x61B69ABD EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0xADDACC0F EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD18AF54D EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x59D JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x7A PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x54F JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP5 DUP5 DUP5 PUSH2 0x36F JUMP JUMPDEST DUP4 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP7 GAS CALL EQ ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F51FAF6C4561FF95F067657E43439F0F856D97C04D9EC9070A6199AD418E235 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x149 SWAP3 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP8 SWAP3 POP PUSH2 0x36F SWAP2 POP POP JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x1D5 SWAP2 PUSH1 0x4 ADD PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x1F0 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x217 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x23D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP7 GAS CALL EQ ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F51FAF6C4561FF95F067657E43439F0F856D97C04D9EC9070A6199AD418E235 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x294 SWAP3 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x1F0 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CA SWAP3 SWAP2 SWAP1 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x2F0 DUP7 DUP7 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3CA56A3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x1E52B518 SWAP1 PUSH2 0x333 SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x73F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x38C SWAP3 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3E3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 DUP2 MLOAD DUP3 PUSH1 0x20 ADD PUSH1 0x0 CREATE2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5 SWAP1 PUSH2 0x77C JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17D DUP1 PUSH2 0x808 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x7C DUP1 PUSH2 0x985 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x458 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x473 JUMPI PUSH2 0x473 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x4AE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4DE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x4E9 DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x505 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x518 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x526 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x537 JUMPI DUP6 DUP7 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x561 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x56C DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x587 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x593 DUP6 DUP3 DUP7 ADD PUSH2 0x448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5B1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5BC DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x5E3 DUP7 DUP3 DUP8 ADD PUSH2 0x448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x609 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x614 DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x63B DUP8 DUP3 DUP9 ADD PUSH2 0x448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x653 DUP2 PUSH2 0x7EF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x676 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x6AA DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x71E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x76B SWAP1 DUP4 ADD DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x10DC99585D194C8818D85B1B0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7C4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7AC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17D CODESIZE SUB DUP1 PUSH2 0x17D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073696E676C65746F6E20616464726573732070726F766964 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7C DUP1 PUSH2 0x101 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 CALLDATALOAD PUSH4 0x530CA437 PUSH1 0xE1 SHL EQ ISZERO PUSH1 0x28 JUMPI DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 RETURN JUMPDEST CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 PUSH1 0x41 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATALOAD CALLDATACOPY 0xD9 MUL PUSH22 0xCFBB9962D96957AEE653ED372240999151F8C26A9426 LOG0 PUSH13 0x183C64736F6C63430008000033 PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 CALLDATALOAD PUSH4 0x530CA437 PUSH1 0xE1 SHL EQ ISZERO PUSH1 0x28 JUMPI DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 RETURN JUMPDEST CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 PUSH1 0x41 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATALOAD CALLDATACOPY 0xD9 MUL PUSH22 0xCFBB9962D96957AEE653ED372240999151F8C26A9426 LOG0 PUSH13 0x183C64736F6C63430008000033 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0x48 ADDRESS XOR CODECOPY GASPRICE COINBASE 0xE8 PUSH9 0x860D1D9D2BEC4ACE87 0xE6 0x5E PUSH5 0x43C17C33DE 0xE3 SWAP4 0xBC CREATE ISZERO 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "2390:5502:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5334:576;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7576:314;;;;;;:::i;:::-;;:::i;3614:122::-;;;:::i;:::-;;;;;;;:::i;2741:462::-;;;;;;:::i;:::-;;:::i;3343:120::-;;;:::i;6448:511::-;;;;;;:::i;:::-;;:::i;5334:576::-;5475:21;5516:56;5537:10;5549:11;5562:9;5516:20;:56::i;:::-;5586:18;;5508:64;;-1:-1:-1;5586:22:0;5582:275;;5788:1;5784;5781;5767:11;5761:18;5754:4;5741:11;5737:22;5734:1;5727:5;5720;5715:71;5712:78;5709:2;;;5823:1;5820;5813:12;5709:2;5871:32;5885:5;5892:10;5871:32;;;;;;;:::i;:::-;;;;;;;;5334:576;;;;;:::o;7576:314::-;7737:21;7778:56;7799:10;7811:11;;7778:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7824:9:0;;-1:-1:-1;7778:20:0;;-1:-1:-1;;7778:56:0:i;:::-;7770:64;;7875:5;7858:23;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7858:23:0;;;;;;;;;;-1:-1:-1;;;7844:39:0;;;;;;;:::i;:::-;;;;;;;;3614:122;3664:12;3695:34;;;;;;;;:::i;:::-;-1:-1:-1;;3695:34:0;;;;;;;;;;;;;;;-1:-1:-1;3614:122:0;:::o;2741:462::-;2816:21;2877:9;2857:30;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2901:11:0;;2849:38;;-1:-1:-1;2901:15:0;2897:254;;3082:1;3078;3075;3068:4;3062:11;3055:4;3049;3045:15;3042:1;3035:5;3028;3023:57;3020:64;3017:2;;;3117:1;3114;3107:12;3017:2;3165:31;3179:5;3186:9;3165:31;;;;;;;:::i;:::-;;;;;;;;2741:462;;;;:::o;3343:120::-;3392:12;3423:33;;;;;;;;:::i;6448:511::-;6633:21;6666:29;6733:9;6744:8;6716:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6706:48;;;;;;6698:57;;6666:89;;6773:68;6794:10;6806:11;6819:21;6773:20;:68::i;:::-;6765:76;-1:-1:-1;;;;;;6855:31:0;;;6851:101;;6888:64;;-1:-1:-1;;;6888:64:0;;-1:-1:-1;;;;;6888:21:0;;;;;:64;;6910:5;;6917:10;;6929:11;;6942:9;;6888:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6851:101;6448:511;;;;;;;:::o;4184:769::-;4327:21;4502:12;4554:11;4544:22;;;;;;4568:9;4527:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4517:62;;;;;;4502:77;;4589:27;4636:34;;;;;;;;:::i;:::-;-1:-1:-1;;4636:34:0;;;;;;;;;;;;;;;;4619:82;;4636:34;-1:-1:-1;;;;;4672:28:0;;;4636:34;4619:82;;:::i;:::-;;;;;;;;;;;;;4589:112;;4862:4;4845:14;4839:21;4822:14;4816:4;4812:25;4807:3;4799:68;4790:77;-1:-1:-1;;;;;;4894:28:0;;4886:60;;;;-1:-1:-1;;;4886:60:0;;;;;;;:::i;:::-;4184:769;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:712:1:-;;111:3;104:4;96:6;92:17;88:27;78:2;;133:5;126;119:20;78:2;173:6;160:20;199:18;236:2;232;229:10;226:2;;;242:18;;:::i;:::-;291:2;285:9;360:2;341:13;;-1:-1:-1;;337:27:1;325:40;;367:4;321:51;387:18;;;407:22;;;384:46;381:2;;;433:18;;:::i;:::-;469:2;462:22;493:18;;;530:15;;;547:4;526:26;523:35;-1:-1:-1;520:2:1;;;575:5;568;561:20;520:2;643;636:4;628:6;624:17;617:4;609:6;605:17;592:54;666:15;;;683:4;662:26;655:41;;;;670:6;68:658;-1:-1:-1;;;68:658:1:o;731:846::-;;;;;896:2;884:9;875:7;871:23;867:32;864:2;;;917:6;909;902:22;864:2;961:9;948:23;980:33;1007:5;980:33;:::i;:::-;1032:5;-1:-1:-1;1088:2:1;1073:18;;1060:32;1111:18;1141:14;;;1138:2;;;1173:6;1165;1158:22;1138:2;1216:6;1205:9;1201:22;1191:32;;1261:7;1254:4;1250:2;1246:13;1242:27;1232:2;;1288:6;1280;1273:22;1232:2;1333;1320:16;1359:2;1351:6;1348:14;1345:2;;;1380:6;1372;1365:22;1345:2;1430:7;1425:2;1416:6;1412:2;1408:15;1404:24;1401:37;1398:2;;;1456:6;1448;1441:22;1398:2;854:723;;1492:2;1484:11;;;;;-1:-1:-1;1514:6:1;;1567:2;1552:18;1539:32;;-1:-1:-1;854:723:1;-1:-1:-1;;;854:723:1:o;1582:479::-;;;1720:2;1708:9;1699:7;1695:23;1691:32;1688:2;;;1741:6;1733;1726:22;1688:2;1785:9;1772:23;1804:33;1831:5;1804:33;:::i;:::-;1856:5;-1:-1:-1;1912:2:1;1897:18;;1884:32;1939:18;1928:30;;1925:2;;;1976:6;1968;1961:22;1925:2;2004:51;2047:7;2038:6;2027:9;2023:22;2004:51;:::i;:::-;1994:61;;;1678:383;;;;;:::o;2066:547::-;;;;2221:2;2209:9;2200:7;2196:23;2192:32;2189:2;;;2242:6;2234;2227:22;2189:2;2286:9;2273:23;2305:33;2332:5;2305:33;:::i;:::-;2357:5;-1:-1:-1;2413:2:1;2398:18;;2385:32;2440:18;2429:30;;2426:2;;;2477:6;2469;2462:22;2426:2;2505:51;2548:7;2539:6;2528:9;2524:22;2505:51;:::i;:::-;2495:61;;;2603:2;2592:9;2588:18;2575:32;2565:42;;2179:434;;;;;:::o;2618:720::-;;;;;2819:3;2807:9;2798:7;2794:23;2790:33;2787:2;;;2841:6;2833;2826:22;2787:2;2885:9;2872:23;2904:33;2931:5;2904:33;:::i;:::-;2956:5;-1:-1:-1;3012:2:1;2997:18;;2984:32;3039:18;3028:30;;3025:2;;;3076:6;3068;3061:22;3025:2;3104:51;3147:7;3138:6;3127:9;3123:22;3104:51;:::i;:::-;3094:61;;;3202:2;3191:9;3187:18;3174:32;3164:42;;3258:2;3247:9;3243:18;3230:32;3271:35;3298:7;3271:35;:::i;:::-;2777:561;;;;-1:-1:-1;2777:561:1;;-1:-1:-1;;2777:561:1:o;3343:259::-;;3424:5;3418:12;3451:6;3446:3;3439:19;3467:63;3523:6;3516:4;3511:3;3507:14;3500:4;3493:5;3489:16;3467:63;:::i;:::-;3584:2;3563:15;-1:-1:-1;;3559:29:1;3550:39;;;;3591:4;3546:50;;3394:208;-1:-1:-1;;3394:208:1:o;3607:247::-;3764:19;;;3808:2;3799:12;;3792:28;3845:2;3836:12;;3754:100::o;3859:370::-;;4054:6;4048:13;4070:53;4116:6;4111:3;4104:4;4096:6;4092:17;4070:53;:::i;:::-;4145:16;;;;4170:21;;;-1:-1:-1;4218:4:1;4207:16;;4024:205;-1:-1:-1;4024:205:1:o;4234:259::-;4413:2;4409:15;;;;-1:-1:-1;;4405:53:1;4393:66;;4484:2;4475:12;;4383:110::o;4498:323::-;4684:19;;;4741:2;4737:15;-1:-1:-1;;4733:53:1;4728:2;4719:12;;4712:75;4812:2;4803:12;;4674:147::o;4826:203::-;-1:-1:-1;;;;;4990:32:1;;;;4972:51;;4960:2;4945:18;;4927:102::o;5034:219::-;;5181:2;5170:9;5163:21;5201:46;5243:2;5232:9;5228:18;5220:6;5201:46;:::i;:::-;5193:54;5153:100;-1:-1:-1;;;5153:100:1:o;5496:334::-;-1:-1:-1;;;;;5756:15:1;;;5738:34;;5808:15;;5803:2;5788:18;;5781:43;5688:2;5673:18;;5655:175::o;5835:520::-;-1:-1:-1;;;;;6134:15:1;;;6116:34;;6186:15;;6181:2;6166:18;;6159:43;6238:3;6233:2;6218:18;;6211:31;;;5835:520;;6259:47;;6286:19;;6278:6;6259:47;:::i;:::-;6251:55;;6342:6;6337:2;6326:9;6322:18;6315:34;6068:287;;;;;;;:::o;6586:343::-;6788:2;6770:21;;;6827:2;6807:18;;;6800:30;-1:-1:-1;;;6861:2:1;6846:18;;6839:49;6920:2;6905:18;;6760:169::o;6934:258::-;7006:1;7016:113;7030:6;7027:1;7024:13;7016:113;;;7106:11;;;7100:18;7087:11;;;7080:39;7052:2;7045:10;7016:113;;;7147:6;7144:1;7141:13;7138:2;;;7182:1;7173:6;7168:3;7164:16;7157:27;7138:2;;6987:205;;;:::o;7197:127::-;7258:10;7253:3;7249:20;7246:1;7239:31;7289:4;7286:1;7279:15;7313:4;7310:1;7303:15;7329:133;-1:-1:-1;;;;;7406:31:1;;7396:42;;7386:2;;7452:1;7449;7442:12;7386:2;7376:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "522800",
								"executionCost": "556",
								"totalCost": "523356"
							},
							"external": {
								"calculateCreateProxyWithNonceAddress(address,bytes,uint256)": "infinite",
								"createProxy(address,bytes)": "infinite",
								"createProxyWithCallback(address,bytes,uint256,address)": "infinite",
								"createProxyWithNonce(address,bytes,uint256)": "infinite",
								"proxyCreationCode()": "infinite",
								"proxyRuntimeCode()": "infinite"
							},
							"internal": {
								"deployProxyWithNonce(address,bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2390,
									"end": 7892,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df483018393a41e868860d1d9d2bec4ace87e65e6443c17c33dee393bcf015b164736f6c63430008000033",
									".code": [
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "1688F0B9"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "2500510E"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "53E5D935"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "61B69ABD"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "ADDACC0F"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "D18AF54D"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 7892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5537,
											"end": 5547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5549,
											"end": 5560,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5516,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5516,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5586,
											"end": 5608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5582,
											"end": 5857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 5789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5752,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5734,
											"end": 5735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5727,
											"end": 5732,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5725,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5786,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "4F51FAF6C4561FF95F067657E43439F0F856D97C04D9EC9070A6199AD418E235"
										},
										{
											"begin": 5885,
											"end": 5890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5892,
											"end": 5902,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5334,
											"end": 5910,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7576,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7737,
											"end": 7758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7799,
											"end": 7809,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7822,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7822,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7778,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7875,
											"end": 7880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7883,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2897,
											"end": 3151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3049,
											"end": 3053,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3040,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3080,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3084,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "4F51FAF6C4561FF95F067657E43439F0F856D97C04D9EC9070A6199AD418E235"
										},
										{
											"begin": 3179,
											"end": 3184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3196,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 3203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3343,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3423,
											"end": 3456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6716,
											"end": 6753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6755,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6794,
											"end": 6804,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6817,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6773,
											"end": 6841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6773,
											"end": 6841,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6773,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6855,
											"end": 6886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6851,
											"end": 6952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3CA56A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "1E52B518"
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6910,
											"end": 6915,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6910,
											"end": 6915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6917,
											"end": 6927,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6917,
											"end": 6927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6940,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6888,
											"end": 6952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6952,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6851,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6959,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4517,
											"end": 4579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4672,
											"end": 4700,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 4700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 4700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4799,
											"end": 4867,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4894,
											"end": 4922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4894,
											"end": 4922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4886,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4953,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000001"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000001"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 104,
											"end": 108,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 92,
											"end": 109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 115,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 78,
											"end": 80,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 78,
											"end": 80,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 133,
											"end": 138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 119,
											"end": 139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 78,
											"end": 80,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 78,
											"end": 80,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 199,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 239,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 226,
											"end": 228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 226,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 226,
											"end": 228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 242,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 242,
											"end": 260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 242,
											"end": 260,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 242,
											"end": 260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 291,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 341,
											"end": 354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 341,
											"end": 354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 337,
											"end": 364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 325,
											"end": 365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 387,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 405,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 407,
											"end": 429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 407,
											"end": 429,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 384,
											"end": 430,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 381,
											"end": 383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 381,
											"end": 383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 433,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 433,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 433,
											"end": 451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 433,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 530,
											"end": 545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 547,
											"end": 551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 523,
											"end": 558,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 520,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 520,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 520,
											"end": 522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 568,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 561,
											"end": 581,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 520,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 520,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 643,
											"end": 645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 624,
											"end": 641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 605,
											"end": 622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 646,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 666,
											"end": 681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 666,
											"end": 681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 666,
											"end": 681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 655,
											"end": 696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 670,
											"end": 676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 68,
											"end": 726,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 68,
											"end": 726,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 731,
											"end": 1577,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 731,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 1577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 731,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 1577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 884,
											"end": 893,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 875,
											"end": 882,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 871,
											"end": 894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 867,
											"end": 899,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 864,
											"end": 866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 864,
											"end": 866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 902,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 864,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 864,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 948,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 980,
											"end": 1013,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 980,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1091,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1092,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1155,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1268,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1250,
											"end": 1252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1269,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1286,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1295,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1336,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1387,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 854,
											"end": 1577,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 854,
											"end": 1577,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1495,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 1577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 1577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1582,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1582,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 2061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1706,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1723,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1748,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1804,
											"end": 1837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1804,
											"end": 1837,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1804,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1916,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2047,
											"end": 2054,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2036,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2004,
											"end": 2055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2004,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2066,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2066,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2209,
											"end": 2218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2224,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2249,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2296,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2305,
											"end": 2338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2305,
											"end": 2338,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2305,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2556,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2505,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2601,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2607,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2613,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2618,
											"end": 3338,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2618,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 3338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 3338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2823,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2895,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2931,
											"end": 2936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2904,
											"end": 2937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2904,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2961,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3012,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3016,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3083,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3147,
											"end": 3154,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3136,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3104,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3155,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3204,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3260,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2777,
											"end": 3338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3343,
											"end": 3602,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3343,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3511,
											"end": 3514,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3498,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3563,
											"end": 3578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3596,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3602,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3607,
											"end": 3854,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3607,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3854,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3859,
											"end": 4229,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3859,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4102,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4070,
											"end": 4123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4070,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4070,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4229,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4234,
											"end": 4493,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4234,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4409,
											"end": 4424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4424,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4405,
											"end": 4458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4475,
											"end": 4487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4493,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4498,
											"end": 4821,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4498,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4743,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4737,
											"end": 4752,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4733,
											"end": 4786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4730,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4803,
											"end": 4815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4821,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4826,
											"end": 5029,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4826,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4945,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5034,
											"end": 5253,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5034,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5220,
											"end": 5226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5201,
											"end": 5247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5201,
											"end": 5247,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5201,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5247,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5253,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5496,
											"end": 5830,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5496,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5756,
											"end": 5771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5823,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5803,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5690,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5830,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5835,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5835,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6241,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6233,
											"end": 6235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 6355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 6355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6259,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6259,
											"end": 6306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6259,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6259,
											"end": 6306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6306,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6259,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6342,
											"end": 6348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6326,
											"end": 6335,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6355,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6586,
											"end": 6929,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6586,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DC99585D194C8818D85B1B0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6905,
											"end": 6923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6929,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6934,
											"end": 7192,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6934,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7037,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7016,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7154,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7157,
											"end": 7184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7192,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7197,
											"end": 7324,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7197,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7253,
											"end": 7256,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7249,
											"end": 7269,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7286,
											"end": 7287,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7317,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7310,
											"end": 7311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7462,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7329,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7406,
											"end": 7437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7386,
											"end": 7388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7388,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7386,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7462,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSHSIZE",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "CODESIZE",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSHSIZE",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "CODECOPY",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "JUMP",
													"source": 0,
													"value": "[in]"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 946,
													"end": 1098,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 996,
													"end": 1020,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 996,
													"end": 1020,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "JUMP",
													"source": 0,
													"value": "[in]"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "tag",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 988,
													"end": 1059,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1078,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "AND",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1069,
													"end": 1091,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 14,
													"end": 324,
													"name": "tag",
													"source": 1,
													"value": "3"
												},
												{
													"begin": 14,
													"end": 324,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 14,
													"end": 324,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 137,
													"end": 139,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 125,
													"end": 134,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 116,
													"end": 123,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 112,
													"end": 135,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 108,
													"end": 140,
													"name": "SLT",
													"source": 1
												},
												{
													"begin": 105,
													"end": 107,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 105,
													"end": 107,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "12"
												},
												{
													"begin": 105,
													"end": 107,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 158,
													"end": 164,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 150,
													"end": 156,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 143,
													"end": 165,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 105,
													"end": 107,
													"name": "tag",
													"source": 1,
													"value": "12"
												},
												{
													"begin": 105,
													"end": 107,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 189,
													"end": 205,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 189,
													"end": 205,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 234,
													"end": 265,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 234,
													"end": 265,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 224,
													"end": 266,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 224,
													"end": 266,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 214,
													"end": 216,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "13"
												},
												{
													"begin": 214,
													"end": 216,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 285,
													"end": 291,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 277,
													"end": 283,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 270,
													"end": 292,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 214,
													"end": 216,
													"name": "tag",
													"source": 1,
													"value": "13"
												},
												{
													"begin": 214,
													"end": 216,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 313,
													"end": 318,
													"name": "SWAP4",
													"source": 1
												},
												{
													"begin": 95,
													"end": 324,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 95,
													"end": 324,
													"name": "JUMP",
													"source": 1,
													"value": "[out]"
												},
												{
													"begin": 329,
													"end": 727,
													"name": "tag",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 329,
													"end": 727,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 531,
													"end": 533,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 513,
													"end": 534,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 513,
													"end": 534,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 513,
													"end": 534,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 570,
													"end": 572,
													"name": "PUSH",
													"source": 1,
													"value": "22"
												},
												{
													"begin": 550,
													"end": 568,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 550,
													"end": 568,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 550,
													"end": 568,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 543,
													"end": 573,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 609,
													"end": 643,
													"name": "PUSH",
													"source": 1,
													"value": "496E76616C69642073696E676C65746F6E20616464726573732070726F766964"
												},
												{
													"begin": 604,
													"end": 606,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 589,
													"end": 607,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 589,
													"end": 607,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 582,
													"end": 644,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1959"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "F2"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 675,
													"end": 677,
													"name": "PUSH",
													"source": 1,
													"value": "60"
												},
												{
													"begin": 660,
													"end": 678,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 660,
													"end": 678,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 653,
													"end": 685,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 717,
													"end": 720,
													"name": "PUSH",
													"source": 1,
													"value": "80"
												},
												{
													"begin": 702,
													"end": 721,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 702,
													"end": 721,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 503,
													"end": 727,
													"name": "JUMP",
													"source": 1,
													"value": "[out]"
												},
												{
													"begin": 503,
													"end": 727,
													"name": "tag",
													"source": 1,
													"value": "10"
												},
												{
													"begin": 503,
													"end": 727,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH #[$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH [$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "CODECOPY",
													"source": 0
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "RETURN",
													"source": 0
												}
											],
											".data": {
												"0": {
													".auxdata": "a2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033",
													".code": [
														{
															"begin": 512,
															"end": 2009,
															"name": "PUSH",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 512,
															"end": 2009,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 512,
															"end": 2009,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1338,
															"end": 1346,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1338,
															"end": 1346,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 1334,
															"end": 1391,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 1509,
															"end": 1524,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 1509,
															"end": 1524,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "530CA437"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 1506,
															"end": 1593,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1503,
															"end": 1505,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 1503,
															"end": 1505,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 1503,
															"end": 1505,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1622,
															"end": 1632,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 1612,
															"end": 1633,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1660,
															"end": 1664,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 1650,
															"end": 1665,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 1503,
															"end": 1505,
															"name": "tag",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 1503,
															"end": 1505,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1711,
															"end": 1725,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 1692,
															"end": 1726,
															"name": "CALLDATACOPY",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 1711,
															"end": 1725,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 1774,
															"end": 1784,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 1767,
															"end": 1772,
															"name": "GAS",
															"source": 0
														},
														{
															"begin": 1754,
															"end": 1810,
															"name": "DELEGATECALL",
															"source": 0
														},
														{
															"begin": 1739,
															"end": 1810,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1739,
															"end": 1810,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 1844,
															"end": 1860,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 1823,
															"end": 1861,
															"name": "RETURNDATACOPY",
															"source": 0
														},
														{
															"begin": 1880,
															"end": 1887,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1874,
															"end": 1876,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "6"
														},
														{
															"begin": 1874,
															"end": 1876,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1920,
															"end": 1936,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 1910,
															"end": 1937,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 1874,
															"end": 1876,
															"name": "tag",
															"source": 0,
															"value": "6"
														},
														{
															"begin": 1874,
															"end": 1876,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1874,
															"end": 1876,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 1974,
															"end": 1990,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 1344,
															"end": 1345,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 1964,
															"end": 1991,
															"name": "RETURN",
															"source": 0
														}
													]
												}
											}
										},
										"1": {
											".auxdata": "a2646970667358221220933537d90275cfbb9962d96957aee653ed372240999151f8c26a9426a06c183c64736f6c63430008000033",
											".code": [
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 512,
													"end": 2009,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1338,
													"end": 1346,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1338,
													"end": 1346,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1334,
													"end": 1391,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 1509,
													"end": 1524,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1509,
													"end": 1524,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "530CA437"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1506,
													"end": 1593,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1503,
													"end": 1505,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 1503,
													"end": 1505,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1503,
													"end": 1505,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1622,
													"end": 1632,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1612,
													"end": 1633,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1660,
													"end": 1664,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1650,
													"end": 1665,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 1503,
													"end": 1505,
													"name": "tag",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1503,
													"end": 1505,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1711,
													"end": 1725,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 1692,
													"end": 1726,
													"name": "CALLDATACOPY",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1711,
													"end": 1725,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 1774,
													"end": 1784,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 1767,
													"end": 1772,
													"name": "GAS",
													"source": 0
												},
												{
													"begin": 1754,
													"end": 1810,
													"name": "DELEGATECALL",
													"source": 0
												},
												{
													"begin": 1739,
													"end": 1810,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1739,
													"end": 1810,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 1844,
													"end": 1860,
													"name": "RETURNDATASIZE",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 1823,
													"end": 1861,
													"name": "RETURNDATACOPY",
													"source": 0
												},
												{
													"begin": 1880,
													"end": 1887,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1874,
													"end": 1876,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 1874,
													"end": 1876,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1920,
													"end": 1936,
													"name": "RETURNDATASIZE",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1910,
													"end": 1937,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1874,
													"end": 1876,
													"name": "tag",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 1874,
													"end": 1876,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1874,
													"end": 1876,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 1974,
													"end": 1990,
													"name": "RETURNDATASIZE",
													"source": 0
												},
												{
													"begin": 1344,
													"end": 1345,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1964,
													"end": 1991,
													"name": "RETURN",
													"source": 0
												}
											]
										}
									}
								}
							}
						},
						"methodIdentifiers": {
							"calculateCreateProxyWithNonceAddress(address,bytes,uint256)": "2500510e",
							"createProxy(address,bytes)": "61b69abd",
							"createProxyWithCallback(address,bytes,uint256,address)": "d18af54d",
							"createProxyWithNonce(address,bytes,uint256)": "1688f0b9",
							"proxyCreationCode()": "53e5d935",
							"proxyRuntimeCode()": "addacc0f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"calculateCreateProxyWithNonceAddress\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createProxy\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"},{\"internalType\":\"contract IProxyCreationCallback\",\"name\":\"callback\",\"type\":\"address\"}],\"name\":\"createProxyWithCallback\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createProxyWithNonce\",\"outputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRuntimeCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{\"calculateCreateProxyWithNonceAddress(address,bytes,uint256)\":{\"details\":\"Allows to get the address for a new proxy contact created via `createProxyWithNonce`      This method is only meant for address calculation purpose when you use an initializer that would revert,      therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.\",\"params\":{\"_singleton\":\"Address of singleton contract.\",\"initializer\":\"Payload for message call sent to new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxy(address,bytes)\":{\"details\":\"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\",\"params\":{\"data\":\"Payload for message call sent to new proxy contract.\",\"singleton\":\"Address of singleton contract.\"}},\"createProxyWithCallback(address,bytes,uint256,address)\":{\"details\":\"Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction\",\"params\":{\"_singleton\":\"Address of singleton contract.\",\"callback\":\"Callback that will be invoced after the new proxy contract has been successfully deployed and initialized.\",\"initializer\":\"Payload for message call sent to new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxyWithNonce(address,bytes,uint256)\":{\"details\":\"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\",\"params\":{\"_singleton\":\"Address of singleton contract.\",\"initializer\":\"Payload for message call sent to new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"proxyCreationCode()\":{\"details\":\"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\"},\"proxyRuntimeCode()\":{\"details\":\"Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.\"}},\"title\":\"Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GnosisSafeProxyFactory.sol\":\"GnosisSafeProxyFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GnosisSafeProxyFactory.sol\":{\"keccak256\":\"0x14e4004ba0cefaf58b9898bf6eb9f692dbac0c78f87f98e4d43b08ada388aef7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e3a695c1037665fc4c739b8399b1110eb43416af6737cc09fe90c255a1e0b0fc\",\"dweb:/ipfs/QmShCNxPncmJQkX4pz3RCkMVKxTZXQf7CuGPE7TCr3tv9x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "masterCopy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Richard Meissner - <richard@gnosis.io>",
						"kind": "dev",
						"methods": {},
						"title": "IProxy - Helper interface to access masterCopy of the Proxy on-chain",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"masterCopy()": "a619486e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IProxy - Helper interface to access masterCopy of the Proxy on-chain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GnosisSafeProxyFactory.sol\":\"IProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GnosisSafeProxyFactory.sol\":{\"keccak256\":\"0x14e4004ba0cefaf58b9898bf6eb9f692dbac0c78f87f98e4d43b08ada388aef7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e3a695c1037665fc4c739b8399b1110eb43416af6737cc09fe90c255a1e0b0fc\",\"dweb:/ipfs/QmShCNxPncmJQkX4pz3RCkMVKxTZXQf7CuGPE7TCr3tv9x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IProxyCreationCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract GnosisSafeProxy",
									"name": "proxy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_singleton",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initializer",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "saltNonce",
									"type": "uint256"
								}
							],
							"name": "proxyCreated",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxyCreated(address,address,bytes,uint256)": "1e52b518"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"proxyCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GnosisSafeProxyFactory.sol\":\"IProxyCreationCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GnosisSafeProxyFactory.sol\":{\"keccak256\":\"0x14e4004ba0cefaf58b9898bf6eb9f692dbac0c78f87f98e4d43b08ada388aef7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e3a695c1037665fc4c739b8399b1110eb43416af6737cc09fe90c255a1e0b0fc\",\"dweb:/ipfs/QmShCNxPncmJQkX4pz3RCkMVKxTZXQf7CuGPE7TCr3tv9x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/GnosisSafeProxyFactory.sol": {
				"ast": {
					"absolutePath": "contracts/GnosisSafeProxyFactory.sol",
					"exportedSymbols": {
						"GnosisSafeProxy": [
							39
						],
						"GnosisSafeProxyFactory": [
							295
						],
						"IProxy": [
							8
						],
						"IProxyCreationCallback": [
							52
						]
					},
					"id": 296,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "75:131:0",
								"text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
							},
							"fullyImplemented": false,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "IProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a619486e",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "masterCopy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:0"
									},
									"scope": 8,
									"src": "229:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "206:79:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "287:225:0",
								"text": "@title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "GnosisSafeProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "singleton",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "798:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "978:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "_singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1018:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 19,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1010:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1010:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "996:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1022:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
																"typeString": "literal_string \"Invalid singleton address provided\""
															},
															"value": "Invalid singleton address provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
																"typeString": "literal_string \"Invalid singleton address provided\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "988:71:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "singleton",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1069:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "_singleton",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1081:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1069:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "1069:22:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "831:110:0",
										"text": "@dev Constructor function sets address of singleton contract.\n @param _singleton Singleton address."
									},
									"id": 32,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_singleton",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "958:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:20:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:0"
									},
									"scope": 39,
									"src": "946:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "1227:780:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1302:699:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1316:75:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1344:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "1338:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:8:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1348:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1334:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:57:0"
															},
															"variables": [
																{
																	"name": "_singleton",
																	"nodeType": "YulTypedName",
																	"src": "1320:10:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1594:85:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1619:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "_singleton",
																					"nodeType": "YulIdentifier",
																					"src": "1622:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1612:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1612:21:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1612:21:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1657:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1660:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "return",
																				"nodeType": "YulIdentifier",
																				"src": "1650:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1650:15:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1650:15:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1522:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1509:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:15:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1526:66:0",
																		"type": "",
																		"value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1506:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:87:0"
															},
															"nodeType": "YulIf",
															"src": "1503:2:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1708:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1711:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1692:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1692:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1692:34:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1739:71:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:5:0"
																	},
																	{
																		"name": "_singleton",
																		"nodeType": "YulIdentifier",
																		"src": "1774:10:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1786:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1789:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1789:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1805:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1754:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:56:0"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "1743:7:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1838:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1844:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1844:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1823:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:38:0"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:59:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "1880:7:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1889:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1877:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:14:0"
															},
															"nodeType": "YulIf",
															"src": "1874:2:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1974:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1974:16:0"
																	}
																],
																"functionName": {
																	"name": "return",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1964:27:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [],
												"id": 36,
												"nodeType": "InlineAssembly",
												"src": "1293:708:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1104:90:0",
										"text": "@dev Fallback function forwards all transactions and returns all received return data."
									},
									"id": 38,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:0:0"
									},
									"scope": 39,
									"src": "1199:808:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "512:1497:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "IProxyCreationCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1e52b518",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxyCreated",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2081:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "2081:15:0"
													},
													"referencedDeclaration": 39,
													"src": "2081:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_singleton",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2112:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "initializer",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2140:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 45,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "saltNonce",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2176:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2071:128:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:0:0"
									},
									"scope": 52,
									"src": "2050:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "2011:200:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [
								39
							],
							"contractKind": "contract",
							"documentation": {
								"id": 53,
								"nodeType": "StructuredDocumentation",
								"src": "2213:177:0",
								"text": "@title Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n @author Stefan George - <stefan@gnosis.pm>"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "GnosisSafeProxyFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 60,
									"name": "ProxyCreation",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2448:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 55,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 54,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "2448:15:0"
													},
													"referencedDeclaration": 39,
													"src": "2448:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "singleton",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2471:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:42:0"
									},
									"src": "2428:62:0"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2839:364:0",
										"statements": [
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "2849:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 75,
																"name": "singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2877:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2857:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GnosisSafeProxy_$39_$",
																"typeString": "function (address) returns (contract GnosisSafeProxy)"
															},
															"typeName": {
																"id": 73,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 72,
																	"name": "GnosisSafeProxy",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 39,
																	"src": "2861:15:0"
																},
																"referencedDeclaration": 39,
																"src": "2861:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																	"typeString": "contract GnosisSafeProxy"
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2857:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"src": "2849:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2849:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 79,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "2901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2901:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2915:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2901:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "2897:254:0",
												"trueBody": {
													"AST": {
														"nodeType": "YulBlock",
														"src": "2999:152:0",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "3085:52:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3114:1:0",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3117:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "revert",
																					"nodeType": "YulIdentifier",
																					"src": "3107:6:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3107:12:0"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "3107:12:0"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nodeType": "YulIdentifier",
																						"src": "3028:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3028:5:0"
																				},
																				{
																					"name": "proxy",
																					"nodeType": "YulIdentifier",
																					"src": "3035:5:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3042:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nodeType": "YulIdentifier",
																							"src": "3049:4:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3055:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3045:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3045:15:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nodeType": "YulIdentifier",
																							"src": "3068:4:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3062:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3062:11:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3075:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3078:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nodeType": "YulIdentifier",
																				"src": "3023:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3023:57:0"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3082:1:0",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "eq",
																		"nodeType": "YulIdentifier",
																		"src": "3020:2:0"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "3020:64:0"
																},
																"nodeType": "YulIf",
																"src": "3017:2:0"
															}
														]
													},
													"evmVersion": "istanbul",
													"externalReferences": [
														{
															"declaration": 65,
															"isOffset": false,
															"isSlot": false,
															"src": "3049:4:0",
															"valueSize": 1
														},
														{
															"declaration": 65,
															"isOffset": false,
															"isSlot": false,
															"src": "3068:4:0",
															"valueSize": 1
														},
														{
															"declaration": 69,
															"isOffset": false,
															"isSlot": false,
															"src": "3035:5:0",
															"valueSize": 1
														}
													],
													"id": 83,
													"nodeType": "InlineAssembly",
													"src": "2990:161:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 86,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "3179:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																"typeString": "contract GnosisSafeProxy"
															}
														},
														{
															"id": 87,
															"name": "singleton",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "3186:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																"typeString": "contract GnosisSafeProxy"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "ProxyCreation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3165:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_GnosisSafeProxy_$39_$_t_address_$returns$__$",
															"typeString": "function (contract GnosisSafeProxy,address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3165:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "EmitStatement",
												"src": "3160:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2496:240:0",
										"text": "@dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n @param singleton Address of singleton contract.\n @param data Payload for message call sent to new proxy contract."
									},
									"functionSelector": "61b69abd",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createProxy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "singleton",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2762:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2781:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 64,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:38:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2816:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 68,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 67,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "2816:15:0"
													},
													"referencedDeclaration": 39,
													"src": "2816:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:23:0"
									},
									"scope": 295,
									"src": "2741:462:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "3406:57:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 98,
																"name": "GnosisSafeProxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "3428:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GnosisSafeProxy_$39_$",
																	"typeString": "type(contract GnosisSafeProxy)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_contract$_GnosisSafeProxy_$39_$",
																	"typeString": "type(contract GnosisSafeProxy)"
																}
															],
															"id": 97,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "3423:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3423:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_contract$_GnosisSafeProxy_$39",
															"typeString": "type(contract GnosisSafeProxy)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "runtimeCode",
													"nodeType": "MemberAccess",
													"src": "3423:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 96,
												"id": 101,
												"nodeType": "Return",
												"src": "3416:40:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3209:129:0",
										"text": "@dev Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed."
									},
									"functionSelector": "addacc0f",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proxyRuntimeCode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3368:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3392:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:14:0"
									},
									"scope": 295,
									"src": "3343:120:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3678:58:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 110,
																"name": "GnosisSafeProxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "3700:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GnosisSafeProxy_$39_$",
																	"typeString": "type(contract GnosisSafeProxy)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_contract$_GnosisSafeProxy_$39_$",
																	"typeString": "type(contract GnosisSafeProxy)"
																}
															],
															"id": 109,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "3695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3695:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_contract$_GnosisSafeProxy_$39",
															"typeString": "type(contract GnosisSafeProxy)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "creationCode",
													"nodeType": "MemberAccess",
													"src": "3695:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 108,
												"id": 113,
												"nodeType": "Return",
												"src": "3688:41:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3469:140:0",
										"text": "@dev Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address."
									},
									"functionSelector": "53e5d935",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proxyCreationCode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3640:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3664:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:14:0"
									},
									"scope": 295,
									"src": "3614:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "4350:603:0",
										"statements": [
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "salt",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "4502:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 128,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 134,
																			"name": "initializer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 120,
																			"src": "4554:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 133,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4544:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4544:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 136,
																	"name": "saltNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "4568:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 131,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4527:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4527:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4527:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 130,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4517:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4517:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4502:77:0"
											},
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "deploymentData",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "4589:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 140,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4589:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 145,
																		"name": "GnosisSafeProxy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "4641:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_GnosisSafeProxy_$39_$",
																			"typeString": "type(contract GnosisSafeProxy)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_GnosisSafeProxy_$39_$",
																			"typeString": "type(contract GnosisSafeProxy)"
																		}
																	],
																	"id": 144,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4636:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4636:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_GnosisSafeProxy_$39",
																	"typeString": "type(contract GnosisSafeProxy)"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "creationCode",
															"nodeType": "MemberAccess",
															"src": "4636:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 152,
																			"name": "_singleton",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 118,
																			"src": "4688:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4680:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 150,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "4680:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4680:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4672:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 148,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4672:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4672:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 142,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4619:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "4619:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4619:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4589:112:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4776:101:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4790:77:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4807:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4816:4:0",
																				"type": "",
																				"value": "0x20"
																			},
																			{
																				"name": "deploymentData",
																				"nodeType": "YulIdentifier",
																				"src": "4822:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:25:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "deploymentData",
																				"nodeType": "YulIdentifier",
																				"src": "4845:14:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4839:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:21:0"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "4799:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:68:0"
															},
															"variableNames": [
																{
																	"name": "proxy",
																	"nodeType": "YulIdentifier",
																	"src": "4790:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "4822:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "4845:14:0",
														"valueSize": 1
													},
													{
														"declaration": 126,
														"isOffset": false,
														"isSlot": false,
														"src": "4790:5:0",
														"valueSize": 1
													},
													{
														"declaration": 129,
														"isOffset": false,
														"isSlot": false,
														"src": "4862:4:0",
														"valueSize": 1
													}
												],
												"id": 157,
												"nodeType": "InlineAssembly",
												"src": "4767:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 161,
																		"name": "proxy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "4902:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																			"typeString": "contract GnosisSafeProxy"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																			"typeString": "contract GnosisSafeProxy"
																		}
																	],
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 159,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4894:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4920:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4912:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4912:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4912:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4894:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "437265617465322063616c6c206661696c6564",
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4924:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7c71a0bdd2eb2834ad042153c811dd478e4ee2324e3003b9522e03e7b3735dc",
																"typeString": "literal_string \"Create2 call failed\""
															},
															"value": "Create2 call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7c71a0bdd2eb2834ad042153c811dd478e4ee2324e3003b9522e03e7b3735dc",
																"typeString": "literal_string \"Create2 call failed\""
															}
														],
														"id": 158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4886:60:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3742:437:0",
										"text": "@dev Allows to create new proxy contact using CREATE2 but it doesn't run the initializer.\n      This method is only meant as an utility to be called from other methods\n @param _singleton Address of singleton contract.\n @param initializer Payload for message call sent to new proxy contract.\n @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract."
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deployProxyWithNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_singleton",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4223:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "initializer",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4251:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "saltNonce",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4285:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4213:95:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4327:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 124,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "4327:15:0"
													},
													"referencedDeclaration": 39,
													"src": "4327:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:23:0"
									},
									"scope": 295,
									"src": "4184:769:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "5498:412:0",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "5508:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 187,
																"name": "_singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5537:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 188,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "5549:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 189,
																"name": "saltNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "5562:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 186,
															"name": "deployProxyWithNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5516:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_contract$_GnosisSafeProxy_$39_$",
																"typeString": "function (address,bytes memory,uint256) returns (contract GnosisSafeProxy)"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5516:56:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"src": "5508:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "5508:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 193,
															"name": "initializer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5586:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5586:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5607:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5586:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 198,
												"nodeType": "IfStatement",
												"src": "5582:275:0",
												"trueBody": {
													"AST": {
														"nodeType": "YulBlock",
														"src": "5691:166:0",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "5791:52:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5820:1:0",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5823:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "revert",
																					"nodeType": "YulIdentifier",
																					"src": "5813:6:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5813:12:0"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "5813:12:0"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nodeType": "YulIdentifier",
																						"src": "5720:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5720:5:0"
																				},
																				{
																					"name": "proxy",
																					"nodeType": "YulIdentifier",
																					"src": "5727:5:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5734:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "initializer",
																							"nodeType": "YulIdentifier",
																							"src": "5741:11:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5754:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5737:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5737:22:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "initializer",
																							"nodeType": "YulIdentifier",
																							"src": "5767:11:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5761:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5761:18:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5781:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5784:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nodeType": "YulIdentifier",
																				"src": "5715:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5715:71:0"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5788:1:0",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "eq",
																		"nodeType": "YulIdentifier",
																		"src": "5712:2:0"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5712:78:0"
																},
																"nodeType": "YulIf",
																"src": "5709:2:0"
															}
														]
													},
													"evmVersion": "istanbul",
													"externalReferences": [
														{
															"declaration": 177,
															"isOffset": false,
															"isSlot": false,
															"src": "5741:11:0",
															"valueSize": 1
														},
														{
															"declaration": 177,
															"isOffset": false,
															"isSlot": false,
															"src": "5767:11:0",
															"valueSize": 1
														},
														{
															"declaration": 183,
															"isOffset": false,
															"isSlot": false,
															"src": "5727:5:0",
															"valueSize": 1
														}
													],
													"id": 197,
													"nodeType": "InlineAssembly",
													"src": "5682:175:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 200,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "5885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																"typeString": "contract GnosisSafeProxy"
															}
														},
														{
															"id": 201,
															"name": "_singleton",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5892:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																"typeString": "contract GnosisSafeProxy"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 199,
														"name": "ProxyCreation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5871:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_GnosisSafeProxy_$39_$_t_address_$returns$__$",
															"typeString": "function (contract GnosisSafeProxy,address)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5871:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "EmitStatement",
												"src": "5866:37:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "4959:370:0",
										"text": "@dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n @param _singleton Address of singleton contract.\n @param initializer Payload for message call sent to new proxy contract.\n @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract."
									},
									"functionSelector": "1688f0b9",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createProxyWithNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_singleton",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5373:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "initializer",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5401:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5401:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "saltNonce",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5435:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5363:95:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5475:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 181,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "5475:15:0"
													},
													"referencedDeclaration": 39,
													"src": "5475:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5474:23:0"
									},
									"scope": 295,
									"src": "5334:576:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "6656:303:0",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "saltNonceWithCallback",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "6666:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 228,
																			"name": "saltNonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 212,
																			"src": "6733:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 229,
																			"name": "callback",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "6744:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
																				"typeString": "contract IProxyCreationCallback"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
																				"typeString": "contract IProxyCreationCallback"
																			}
																		],
																		"expression": {
																			"id": 226,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "6716:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "6716:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6716:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 225,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "6706:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6706:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6698:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6698:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6666:89:0"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6765:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 236,
																"name": "_singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "6794:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 237,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "6806:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 238,
																"name": "saltNonceWithCallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6819:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 235,
															"name": "createProxyWithNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6773:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_contract$_GnosisSafeProxy_$39_$",
																"typeString": "function (address,bytes memory,uint256) returns (contract GnosisSafeProxy)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6773:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"src": "6765:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "6765:76:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 244,
																"name": "callback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "6863:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
																	"typeString": "contract IProxyCreationCallback"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
																	"typeString": "contract IProxyCreationCallback"
																}
															],
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6855:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6855:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6884:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6876:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6876:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6855:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 260,
												"nodeType": "IfStatement",
												"src": "6851:101:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 254,
																"name": "proxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6910:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																	"typeString": "contract GnosisSafeProxy"
																}
															},
															{
																"id": 255,
																"name": "_singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "6917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 256,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "6929:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 257,
																"name": "saltNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "6942:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																	"typeString": "contract GnosisSafeProxy"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 251,
																"name": "callback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "6888:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
																	"typeString": "contract IProxyCreationCallback"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "proxyCreated",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "6888:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_contract$_GnosisSafeProxy_$39_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
																"typeString": "function (contract GnosisSafeProxy,address,bytes memory,uint256) external"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6888:64:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 259,
													"nodeType": "ExpressionStatement",
													"src": "6888:64:0"
												}
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "5916:527:0",
										"text": "@dev Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction\n @param _singleton Address of singleton contract.\n @param initializer Payload for message call sent to new proxy contract.\n @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\n @param callback Callback that will be invoced after the new proxy contract has been successfully deployed and initialized."
									},
									"functionSelector": "d18af54d",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createProxyWithCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "_singleton",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6490:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "initializer",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6518:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "saltNonce",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6552:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "callback",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6579:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
													"typeString": "contract IProxyCreationCallback"
												},
												"typeName": {
													"id": 214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 213,
														"name": "IProxyCreationCallback",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 52,
														"src": "6579:22:0"
													},
													"referencedDeclaration": 52,
													"src": "6579:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProxyCreationCallback_$52",
														"typeString": "contract IProxyCreationCallback"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6480:136:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6633:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 217,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "6633:15:0"
													},
													"referencedDeclaration": 39,
													"src": "6633:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:23:0"
									},
									"scope": 295,
									"src": "6448:511:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7760:130:0",
										"statements": [
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "7770:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 277,
																"name": "_singleton",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "7799:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 278,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7811:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															{
																"id": 279,
																"name": "saltNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7824:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 276,
															"name": "deployProxyWithNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "7778:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_contract$_GnosisSafeProxy_$39_$",
																"typeString": "function (address,bytes memory,uint256) returns (contract GnosisSafeProxy)"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7778:56:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
															"typeString": "contract GnosisSafeProxy"
														}
													},
													"src": "7770:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "7770:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 288,
																			"name": "proxy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "7875:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																				"typeString": "contract GnosisSafeProxy"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
																				"typeString": "contract GnosisSafeProxy"
																			}
																		],
																		"expression": {
																			"id": 286,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "7858:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "7858:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7858:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7851:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 284,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "7851:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7851:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 283,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "7844:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7844:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "7844:39:0"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "6965:606:0",
										"text": "@dev Allows to get the address for a new proxy contact created via `createProxyWithNonce`\n      This method is only meant for address calculation purpose when you use an initializer that would revert,\n      therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.\n @param _singleton Address of singleton contract.\n @param initializer Payload for message call sent to new proxy contract.\n @param saltNonce Nonce that will be used to generate the salt to calculate the address of the new proxy contract."
									},
									"functionSelector": "2500510e",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateCreateProxyWithNonceAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_singleton",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7631:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "initializer",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7659:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7659:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "saltNonce",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7695:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:97:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "proxy",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7737:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
													"typeString": "contract GnosisSafeProxy"
												},
												"typeName": {
													"id": 272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 271,
														"name": "GnosisSafeProxy",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 39,
														"src": "7737:15:0"
													},
													"referencedDeclaration": 39,
													"src": "7737:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafeProxy_$39",
														"typeString": "contract GnosisSafeProxy"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7736:23:0"
									},
									"scope": 295,
									"src": "7576:314:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "2390:5502:0"
						}
					],
					"src": "42:7851:0"
				},
				"id": 0
			}
		}
	}
}