{
	"id": "aa5d8294dea814d76a6acf65f12621d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol": {
				"content": "pragma solidity ^0.7.6;\n\nimport \"../kalyswap-core/interfaces/IKalyswapERC20.sol\";\nimport \"../kalyswap-lib/libraries/TransferHelper.sol\";\nimport \"./interfaces/IBridgeToken.sol\";\nimport \"./libraries/Roles.sol\";\nimport \"./libraries/KalyswapLibrary.sol\";\n\ncontract KalyswapBridgeMigrationRouter {\n    using SafeMath for uint;\n    using Roles for Roles.Role;\n\n    Roles.Role private adminRole;\n    mapping(address => address) public bridgeMigrator;\n\n    constructor() public {\n        adminRole.add(msg.sender);\n    }\n\n    // safety measure to prevent clear front-running by delayed block\n    modifier ensure(uint deadline) {\n        require(deadline >= block.timestamp, 'KalyswapBridgeMigrationRouter: EXPIRED');\n        _;\n    }\n\n    // makes sure the admin is the one calling protected methods\n    modifier onlyAdmin() {\n        require(adminRole.has(msg.sender), 'KalyswapBridgeMigrationRouter: Unauthorized');\n        _;\n    }\n\n    /**\n     * @notice Given an address, this address is added to the list of admin.\n     * @dev Any admin can add or remove other admins, careful.\n     * @param account The address of the account.\n     */\n    function addAdmin(address account) external onlyAdmin {\n        require(account != address(0), \"KalyswapBridgeMigrationRouter: Address 0 not allowed\");\n        adminRole.add(account);\n    }\n\n    /**\n     * @notice Given an address, this address is added to the list of admin.\n     * @dev Any admin can add or remove other admins, careful.\n     * @param account The address of the account.\n     */\n    function removeAdmin(address account) external onlyAdmin {\n        require(msg.sender != account, \"KalyswapBridgeMigrationRouter: You can't demote yourself\");\n        adminRole.remove(account);\n    }\n\n    /**\n     * @notice Given an address, returns whether or not he's already an admin\n     * @param account The address of the account.\n     * @return Whether or not the account address is an admin.\n     */\n    function isAdmin(address account) external view returns(bool) {\n        return adminRole.has(account);\n    }\n\n    /**\n     * @notice Given an token, and it's migrator address, it configures the migrator for later usage\n     * @param tokenAddress The ERC20 token address that will be migrated using the migrator\n     * @param migratorAddress The WrappedERC20 token address that will be migrate the token\n     */\n    function addMigrator(address tokenAddress, address migratorAddress) external onlyAdmin {\n        require(tokenAddress != address(0), \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\");\n        require(migratorAddress != address(0), \"KalyswapBridgeMigrationRouter: migratorAddress 0 not supported\");\n        uint256 amount = IBridgeToken(migratorAddress).swapSupply(tokenAddress);\n        require(\n            amount > 0,\n            \"The migrator doesn't have swap supply for this token\"\n        );\n        _allowToken(tokenAddress, migratorAddress);\n        bridgeMigrator[tokenAddress] = migratorAddress;\n    }\n\n    /**\n     * @notice Internal function to manage approval, allows an ERC20 to be spent to the maximum\n     * @param tokenAddress The ERC20 token address that will be allowed to be used\n     * @param spenderAddress Who's going to spend the ERC20 token\n     */\n    function _allowToken(address tokenAddress, address spenderAddress) internal {\n        IKalyswapERC20(tokenAddress).approve(spenderAddress, type(uint).max);\n    }\n\n    /**\n     * @notice Internal function add liquidity on a low level, without the use of a router\n     * @dev This function will try to maximize one of the tokens amount and match the other\n     * one, can cause dust so consider charge backs\n     * @param pairToken The pair that will receive the liquidity\n     * @param token0 The first token of the pair\n     * @param token1 The second token of the pair\n     * @param amountIn0 The amount of first token that can be used to deposit liquidity\n     * @param amountIn1 The amount of second token that can be used to deposit liquidity\n     * @param to The address who will receive the liquidity\n     * @return amount0 Charge back from token0\n     * @return amount1 Charge back from token1\n     * @return liquidityAmount Total liquidity token amount acquired\n     */\n    function _addLiquidity(\n        address pairToken,\n        address token0,\n        address token1,\n        uint amountIn0,\n        uint amountIn1,\n        address to\n    ) private returns (uint amount0, uint amount1, uint liquidityAmount) {\n        (uint112 reserve0, uint112 reserve1,) = IKalyswapPair(pairToken).getReserves();\n        uint quote0 = amountIn0;\n        uint quote1 = KalyswapLibrary.quote(amountIn0, reserve0, reserve1);\n        if (quote1 > amountIn1) {\n            quote1 = amountIn1;\n            quote0 = KalyswapLibrary.quote(amountIn1, reserve1, reserve0);\n        }\n        TransferHelper.safeTransfer(token0, pairToken, quote0);\n        TransferHelper.safeTransfer(token1, pairToken, quote1);\n        amount0 = amountIn0 - quote0;\n        amount1 = amountIn1 - quote1;\n        liquidityAmount = IKalyswapPair(pairToken).mint(to);\n    }\n\n    /**\n     * @notice Internal function to remove liquidity on a low level, without the use of a router\n     * @dev This function requires the user to approve this contract to transfer the liquidity pair on it's behalf\n     * @param liquidityPair The pair that will have the liquidity removed\n     * @param amount The amount of liquidity token that you want to rescue\n     * @return amountTokenA The amount of token0 from burning liquidityPair token\n     * @return amountTokenB The amount of token1 from burning liquidityPair token\n     */\n    function _rescueLiquidity(\n        address liquidityPair,\n        uint amount\n    ) internal returns (uint amountTokenA, uint amountTokenB) {\n        TransferHelper.safeTransferFrom(liquidityPair, msg.sender, liquidityPair, amount);\n        (amountTokenA, amountTokenB) = IKalyswapPair(liquidityPair).burn(address(this));\n    }\n\n    /**\n     * @notice Internal function that checks if the minimum requirements are met to accept the pairs to migrate\n     * @dev This function makes the main function(migrateLiquidity) cleaner, this function can revert the transaction\n     * @param pairA The pair that is going to be migrated from\n     * @param pairB The pair that is going to be migrated to\n     */\n    function _arePairsCompatible(address pairA, address pairB) internal view {\n        require(pairA != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0\");\n        require(pairA != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0\");\n        require(pairA != pairB, \"KalyswapBridgeMigrationRouter: Cant convert to the same liquidity pairs\");\n        require(\n            IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||\n            IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token1() ||\n            IKalyswapPair(pairA).token1() == IKalyswapPair(pairB).token0() ||\n            IKalyswapPair(pairA).token1() == IKalyswapPair(pairB).token1(),\n            \"KalyswapBridgeMigrationRouter: Pair does not have one token matching\"\n        );\n    }\n\n    /**\n     * @notice Internal function that implements the token migration\n     * @dev This function only checks if the expected balance was received, it doesn't check for migrator existance\n     * @param tokenAddress The ERC20 token address that will be migrated\n     * @param amount The amount of the token to be migrated\n     */\n    function _migrateToken(\n        address tokenAddress,\n        uint amount\n    ) internal {\n        require(tokenAddress != address(0), \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\");\n        IBridgeToken(bridgeMigrator[tokenAddress]).swap(tokenAddress, amount);\n        require(\n            IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) == amount,\n            \"KalyswapBridgeMigrationRouter: Didn't yield the correct amount\"\n        );\n    }\n\n    /**\n     * @notice Front facing function that migrates the token\n     * @dev This function includes important checks\n     * @param token The ERC20 token address that will be migrated\n     * @param to The address of who's receiving the token\n     * @param amount The amount of the token to be migrated\n     * @param deadline The deadline limit that should be met, otherwise revert to prevent front-run\n     */\n    function migrateToken(\n        address token,\n        address to,\n        uint amount,\n        uint deadline\n    ) external ensure(deadline) {\n        require(\n            bridgeMigrator[token] != address(0),\n            \"KalyswapBridgeMigrationRouter: migrator not registered\"\n        );\n        TransferHelper.safeTransferFrom(token, msg.sender, address(this), amount);\n        _migrateToken(token, amount);\n        TransferHelper.safeTransfer(bridgeMigrator[token], to, amount);\n    }\n\n    /**\n     * @notice Front facing function that migrates the liquidity, with permit\n     * @param liquidityPairFrom The pair address to be migrated from\n     * @param liquidityPairTo The pair address to be migrated to\n     * @param to The address that will receive the liquidity and the charge backs\n     * @param amount The amount of token liquidityPairFrom that will be migrated\n     * @param deadline The deadline limit that should be met, otherwise revert to prevent front-run\n     * @param v by passing param for the permit validation\n     * @param r by passing param for the permit validation\n     * @param s by passing param for the permit validation\n     */\n    function migrateLiquidityWithPermit(\n        address liquidityPairFrom,\n        address liquidityPairTo,\n        address to,\n        uint amount,\n        uint deadline,\n        uint8 v, bytes32 r, bytes32 s\n    ) external ensure(deadline) {\n        IKalyswapPair(liquidityPairFrom).permit(msg.sender, address(this), amount, deadline, v, r, s);\n        _migrateLiquidity(\n            liquidityPairFrom,\n            liquidityPairTo,\n            to,\n            amount\n        );\n    }\n\n    /**\n     * @notice Front facing function that migrates the liquidity\n     * @dev This function assumes sender already gave approval to move the assets\n     * @param liquidityPairFrom The pair address to be migrated from\n     * @param liquidityPairTo The pair address to be migrated to\n     * @param to The address that will receive the liquidity and the charge backs\n     * @param amount The amount of token liquidityPairFrom that will be migrated\n     * @param deadline The deadline limit that should be met, otherwise revert to prevent front-run\n     */\n    function migrateLiquidity(\n        address liquidityPairFrom,\n        address liquidityPairTo,\n        address to,\n        uint amount,\n        uint deadline\n    ) external ensure(deadline) {\n        _migrateLiquidity(\n            liquidityPairFrom,\n            liquidityPairTo,\n            to,\n            amount\n        );\n    }\n\n    /**\n     * @notice This was extracted into a internal method to use with both migrateLiquidity and with permit\n     * @dev This function includes important checks\n     * @param liquidityPairFrom The pair address to be migrated from\n     * @param liquidityPairTo The pair address to be migrated to\n     * @param to The address that will receive the liquidity and the charge backs\n     * @param amount The amount of token liquidityPairFrom that will be migrated\n     */\n    function _migrateLiquidity(\n        address liquidityPairFrom,\n        address liquidityPairTo,\n        address to,\n        uint amount\n    ) internal {\n        _arePairsCompatible(liquidityPairFrom, liquidityPairTo);\n        address tokenToMigrate = IKalyswapPair(liquidityPairFrom).token0();\n        if (\n            IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token0() ||\n            IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token1()\n        ) {\n            tokenToMigrate = IKalyswapPair(liquidityPairFrom).token1();\n        }\n        address newTokenAddress = bridgeMigrator[tokenToMigrate];\n        require(\n            newTokenAddress != address(0),\n            \"KalyswapBridgeMigrationRouter: Migrator not registered for the pair\"\n        );\n        require(\n            newTokenAddress == IKalyswapPair(liquidityPairTo).token0() ||\n            newTokenAddress == IKalyswapPair(liquidityPairTo).token1(),\n            \"KalyswapBridgeMigrationRouter: Pair doesn't match the migration token\"\n        );\n\n        (uint amountTokenA, uint amountTokenB) = _rescueLiquidity(liquidityPairFrom, amount);\n        {\n            uint amountToSwap = amountTokenA;\n            if (tokenToMigrate != IKalyswapPair(liquidityPairFrom).token0()) {\n                amountToSwap = amountTokenB;\n            }\n            _migrateToken(tokenToMigrate, amountToSwap);\n        }\n        if (IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&\n            IKalyswapPair(liquidityPairFrom).token1() != IKalyswapPair(liquidityPairTo).token1()\n        ) {\n            (amountTokenA, amountTokenB) = (amountTokenB, amountTokenA);\n        }\n\n        (uint changeAmount0, uint changeAmount1, ) = _addLiquidity(\n            liquidityPairTo,\n            IKalyswapPair(liquidityPairTo).token0(), IKalyswapPair(liquidityPairTo).token1(),\n            amountTokenA, amountTokenB, to\n        );\n        if (changeAmount0 > 0) {\n            TransferHelper.safeTransfer(IKalyswapPair(liquidityPairTo).token0(), to, changeAmount0);\n        }\n        if (changeAmount1 > 0) {\n            TransferHelper.safeTransfer(IKalyswapPair(liquidityPairTo).token1(), to, changeAmount1);\n        }\n    }\n\n    /**\n     * @notice Internal function that simulates the amount received from the liquidity burn\n     * @dev This function is a support function that can be used by the front-end to show possible charge back\n     * @param pairAddress The pair address that will be burned(simulated)\n     * @param amount The amount of the liquidity token to be burned(simulated)\n     * @return amount0 Amounts of token0 acquired from burning the pairAddress token\n     * @return amount1 Amounts of token1 acquired from burning the pairAddress token\n     */\n    function _calculateRescueLiquidity(address pairAddress, uint amount) internal view returns (uint amount0, uint amount1) {\n        (uint112 reserves0, uint112 reserves1, ) = IKalyswapPair(pairAddress).getReserves();\n        uint totalSupply = IKalyswapPair(pairAddress).totalSupply();\n        amount0 = amount.mul(reserves0) / totalSupply;\n        amount1 = amount.mul(reserves1) / totalSupply;\n    }\n\n    /**\n     * @notice Front facing function that computes the possible charge back from the migration\n     * @dev No need to be extra careful as this is only a view function\n     * @param liquidityPairFrom The pair address that will be migrated from(simulated)\n     * @param liquidityPairTo The pair address that will be migrated to(simulated)\n     * @param amount The amount of the liquidity token to be migrated(simulated)\n     * @return amount0 Amount of token0 will be charged back after the migration\n     * @return amount1 Amount of token1 will be charged back after the migration\n     */\n    function calculateChargeBack(\n        address liquidityPairFrom,\n        address liquidityPairTo,\n        uint amount\n    ) external view returns (uint amount0, uint amount1) {\n        require(liquidityPairFrom != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0 not supported\");\n        require(liquidityPairTo != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0 not supported\");\n        (uint amountIn0, uint amountIn1) = _calculateRescueLiquidity(liquidityPairFrom, amount);\n        if (IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&\n            IKalyswapPair(liquidityPairFrom).token1() != IKalyswapPair(liquidityPairTo).token1()\n        ) {\n            (amountIn0, amountIn1) = (amountIn1, amountIn0);\n        }\n        (uint112 reserve0, uint112 reserve1,) = IKalyswapPair(liquidityPairTo).getReserves();\n        uint quote0 = amountIn0;\n        uint quote1 = KalyswapLibrary.quote(amountIn0, reserve0, reserve1);\n        if (quote1 > amountIn1) {\n            quote1 = amountIn1;\n            quote0 = KalyswapLibrary.quote(amountIn1, reserve1, reserve0);\n        }\n        amount0 = amountIn0 - quote0;\n        amount1 = amountIn1 - quote1;\n    }\n\n}"
			},
			"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol": {
				"content": "pragma solidity >=0.5.0;\n\nimport '../../kalyswap-core/interfaces/IKalyswapFactory.sol';\nimport '../../kalyswap-core/interfaces/IKalyswapPair.sol';\n\nimport \"./SafeMath.sol\";\n\nlibrary KalyswapLibrary {\n    using SafeMath for uint;\n\n    // returns sorted token addresses, used to handle return values from pairs sorted in this order\n    function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {\n        require(tokenA != tokenB, 'KalyswapLibrary: IDENTICAL_ADDRESSES');\n        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'KalyswapLibrary: ZERO_ADDRESS');\n    }\n\n    // calculates the CREATE2 address for a pair without making any external calls\n    function pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair) {\n        (address token0, address token1) = sortTokens(tokenA, tokenB);\n        pair = address(uint(keccak256(abi.encodePacked(\n                hex'ff',\n                factory,\n                keccak256(abi.encodePacked(token0, token1)),\n                hex'40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545' // init code hash\n            ))));\n    }\n\n    // fetches and sorts the reserves for a pair\n    function getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB) {\n        (address token0,) = sortTokens(tokenA, tokenB);\n        (uint reserve0, uint reserve1,) = IKalyswapPair(pairFor(factory, tokenA, tokenB)).getReserves();\n        (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\n    }\n\n    // given some amount of an asset and pair reserves, returns an equivalent amount of the other asset\n    function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB) {\n        require(amountA > 0, 'KalyswapLibrary: INSUFFICIENT_AMOUNT');\n        require(reserveA > 0 && reserveB > 0, 'KalyswapLibrary: INSUFFICIENT_LIQUIDITY');\n        amountB = amountA.mul(reserveB) / reserveA;\n    }\n\n    // given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut) {\n        require(amountIn > 0, 'KalyswapLibrary: INSUFFICIENT_INPUT_AMOUNT');\n        require(reserveIn > 0 && reserveOut > 0, 'KalyswapLibrary: INSUFFICIENT_LIQUIDITY');\n        uint amountInWithFee = amountIn.mul(997);\n        uint numerator = amountInWithFee.mul(reserveOut);\n        uint denominator = reserveIn.mul(1000).add(amountInWithFee);\n        amountOut = numerator / denominator;\n    }\n\n    // given an output amount of an asset and pair reserves, returns a required input amount of the other asset\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn) {\n        require(amountOut > 0, 'KalyswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT');\n        require(reserveIn > 0 && reserveOut > 0, 'KalyswapLibrary: INSUFFICIENT_LIQUIDITY');\n        uint numerator = reserveIn.mul(amountOut).mul(1000);\n        uint denominator = reserveOut.sub(amountOut).mul(997);\n        amountIn = (numerator / denominator).add(1);\n    }\n\n    // performs chained getAmountOut calculations on any number of pairs\n    function getAmountsOut(address factory, uint amountIn, address[] memory path) internal view returns (uint[] memory amounts) {\n        require(path.length >= 2, 'KalyswapLibrary: INVALID_PATH');\n        amounts = new uint[](path.length);\n        amounts[0] = amountIn;\n        for (uint i; i < path.length - 1; i++) {\n            (uint reserveIn, uint reserveOut) = getReserves(factory, path[i], path[i + 1]);\n            amounts[i + 1] = getAmountOut(amounts[i], reserveIn, reserveOut);\n        }\n    }\n\n    // performs chained getAmountIn calculations on any number of pairs\n    function getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts) {\n        require(path.length >= 2, 'KalyswapLibrary: INVALID_PATH');\n        amounts = new uint[](path.length);\n        amounts[amounts.length - 1] = amountOut;\n        for (uint i = path.length - 1; i > 0; i--) {\n            (uint reserveIn, uint reserveOut) = getReserves(factory, path[i - 1], path[i]);\n            amounts[i - 1] = getAmountIn(amounts[i], reserveIn, reserveOut);\n        }\n    }\n}\n"
			},
			"CoreContracts/kalyswap-periphery/libraries/Roles.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nlibrary Roles {\n    struct Role {\n        mapping(address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account)\n        internal\n        view\n        returns (bool)\n    {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}"
			},
			"CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol": {
				"content": "pragma solidity >=0.5.0;\n\nimport \"../../kalyswap-core/interfaces/IKalyswapERC20.sol\";\n\ninterface IBridgeToken is IKalyswapERC20 {\n    function swap(address token, uint256 amount) external;\n    function swapSupply(address token) external view returns (uint256);\n}"
			},
			"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.6.0;\n\n// helper methods for interacting with ERC20 tokens and sending KLC that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n    }\n\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n    }\n\n    function safeTransferKLC(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'TransferHelper: KLC_TRANSFER_FAILED');\n    }\n}\n"
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IKalyswapERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
			},
			"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol": {
				"content": "pragma solidity >=0.6.6 <0.8.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IKalyswapPair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IKalyswapFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol": {
				"IKalyswapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol\":\"IKalyswapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol\":{\"keccak256\":\"0xdfafc93cc637ae528f35b1f2bfc38156b977477d0075dcab0036a899f2a8d594\",\"urls\":[\"bzz-raw://e2061c6ec30bc96e4869494a70c325b2d26db7c62f53877c44134ff72df09bd7\",\"dweb:/ipfs/QmfEBXe1rFgQbzFfpifdbgETdSYUaBy7WYAAZSr7jirUG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol": {
				"IKalyswapFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol\":\"IKalyswapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol\":{\"keccak256\":\"0xa614ed4f9dc2ed32c1f7d03d60c41d2ff204fccbe413bb2e7cbbfbfe29061728\",\"urls\":[\"bzz-raw://8d99392c6dd7eb99ba185d7d0fcc8ac018b6d845ffaf5ca21986a045bee50323\",\"dweb:/ipfs/QmYGMMvoAdX5wieRdiLBpNsUs3RSrV5jXPYxwpPvR22npK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol": {
				"IKalyswapPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol\":\"IKalyswapPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol\":{\"keccak256\":\"0xd05210b00f31f9557ffbbd3b5df0098a2196d33a07a38504a932578ef0c97a61\",\"urls\":[\"bzz-raw://f64916071f9d3d91e1167620711cfed8c7e7797489ad25351295cf21aebeaaba\",\"dweb:/ipfs/QmXTYWuhMBiUm7zoyiUyKYjQPpa1z8xkiPgPbS25jNP52f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":183:1645  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":183:1645  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122056f9a4b74f20ae7473fa60c62e82550c82470f4f6bf1da76c4d62e8e9774cb3a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056f9a4b74f20ae7473fa60c62e82550c82470f4f6bf1da76c4d62e8e9774cb3a64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xF9 LOG4 0xB7 0x4F KECCAK256 0xAE PUSH21 0x73FA60C62E82550C82470F4F6BF1DA76C4D62E8E97 PUSH21 0xCB3A64736F6C634300070600330000000000000000 ",
							"sourceMap": "183:1462:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056f9a4b74f20ae7473fa60c62e82550c82470f4f6bf1da76c4d62e8e9774cb3a64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xF9 LOG4 0xB7 0x4F KECCAK256 0xAE PUSH21 0x73FA60C62E82550C82470F4F6BF1DA76C4D62E8E97 PUSH21 0xCB3A64736F6C634300070600330000000000000000 ",
							"sourceMap": "183:1462:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite",
								"safeTransferKLC(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 183,
									"end": 1645,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056f9a4b74f20ae7473fa60c62e82550c82470f4f6bf1da76c4d62e8e9774cb3a64736f6c63430007060033",
									".code": [
										{
											"begin": 183,
											"end": 1645,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 1645,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":{\"keccak256\":\"0x1ce3b33fff8d97ed889ac250bcd33ab7dd14d9fe428169a63db4881e187ac34f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://07adbed20f18d6d6079fc9ad7c399d6656554931c4d8a6ca3dab09383c7fa89e\",\"dweb:/ipfs/QmUPd2EtGG5AxJ9F9xzgT9nkGCmW6CWFoxA4R54wC62q2w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol": {
				"KalyswapBridgeMigrationRouter": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "migratorAddress",
									"type": "address"
								}
							],
							"name": "addMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bridgeMigrator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "liquidityPairFrom",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidityPairTo",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateChargeBack",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "liquidityPairFrom",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidityPairTo",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "migrateLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "liquidityPairFrom",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidityPairTo",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "migrateLiquidityWithPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "migrateToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addAdmin(address)": {
								"details": "Any admin can add or remove other admins, careful.",
								"params": {
									"account": "The address of the account."
								}
							},
							"addMigrator(address,address)": {
								"params": {
									"migratorAddress": "The WrappedERC20 token address that will be migrate the token",
									"tokenAddress": "The ERC20 token address that will be migrated using the migrator"
								}
							},
							"calculateChargeBack(address,address,uint256)": {
								"details": "No need to be extra careful as this is only a view function",
								"params": {
									"amount": "The amount of the liquidity token to be migrated(simulated)",
									"liquidityPairFrom": "The pair address that will be migrated from(simulated)",
									"liquidityPairTo": "The pair address that will be migrated to(simulated)"
								},
								"returns": {
									"amount0": "Amount of token0 will be charged back after the migration",
									"amount1": "Amount of token1 will be charged back after the migration"
								}
							},
							"isAdmin(address)": {
								"params": {
									"account": "The address of the account."
								},
								"returns": {
									"_0": "Whether or not the account address is an admin."
								}
							},
							"migrateLiquidity(address,address,address,uint256,uint256)": {
								"details": "This function assumes sender already gave approval to move the assets",
								"params": {
									"amount": "The amount of token liquidityPairFrom that will be migrated",
									"deadline": "The deadline limit that should be met, otherwise revert to prevent front-run",
									"liquidityPairFrom": "The pair address to be migrated from",
									"liquidityPairTo": "The pair address to be migrated to",
									"to": "The address that will receive the liquidity and the charge backs"
								}
							},
							"migrateLiquidityWithPermit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount of token liquidityPairFrom that will be migrated",
									"deadline": "The deadline limit that should be met, otherwise revert to prevent front-run",
									"liquidityPairFrom": "The pair address to be migrated from",
									"liquidityPairTo": "The pair address to be migrated to",
									"r": "by passing param for the permit validation",
									"s": "by passing param for the permit validation",
									"to": "The address that will receive the liquidity and the charge backs",
									"v": "by passing param for the permit validation"
								}
							},
							"migrateToken(address,address,uint256,uint256)": {
								"details": "This function includes important checks",
								"params": {
									"amount": "The amount of the token to be migrated",
									"deadline": "The deadline limit that should be met, otherwise revert to prevent front-run",
									"to": "The address of who's receiving the token",
									"token": "The ERC20 token address that will be migrated"
								}
							},
							"removeAdmin(address)": {
								"details": "Any admin can add or remove other admins, careful.",
								"params": {
									"account": "The address of the account."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":252:16461  contract KalyswapBridgeMigrationRouter {... */\n  mstore(0x40, 0x80)\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":449:512  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":480:505  adminRole.add(msg.sender) */\n  tag_4\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":494:504  msg.sender */\n  caller\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":480:489  adminRole */\n  0x00\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":480:493  adminRole.add */\n  or(tag_0_41, shl(0x20, tag_5))\n  swap1\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":480:505  adminRole.add(msg.sender) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":252:16461  contract KalyswapBridgeMigrationRouter {... */\n  jump(tag_6)\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":208:383  function add(Role storage role, address account) internal {... */\ntag_5:\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":285:303  has(role, account) */\n  tag_8\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":289:293  role */\n  dup3\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":295:302  account */\n  dup3\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":285:288  has */\n  tag_9\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":285:303  has(role, account) */\n  jump\t// in\ntag_8:\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":284:303  !has(role, account) */\n  iszero\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":276:339  require(!has(role, account), \"Roles: account already has role\") */\n  tag_10\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1f\n  0x24\n  dup3\n  add\n  mstore\n  0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:369  role.bearer[account] */\n  and\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:360  role.bearer */\n  0x00\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:369  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:376  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":372:376  true */\n  0x01\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:376  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":208:383  function add(Role storage role, address account) internal {... */\n  jump\t// out\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":727:955  function has(Role storage role, address account)... */\ntag_9:\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":823:827  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":851:872  account != address(0) */\n  dup3\n  and\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":843:911  require(account != address(0), \"Roles: account is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x22\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n  0x22\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":928:948  role.bearer[account] */\n  and\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":928:939  role.bearer */\n  0x00\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":928:948  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":727:955  function has(Role storage role, address account)... */\n  jump\t// out\n    /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":252:16461  contract KalyswapBridgeMigrationRouter {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n\nsub_0: assembly {\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":252:16461  contract KalyswapBridgeMigrationRouter {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70480275\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xb032fff7\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xb032fff7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf057d237\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xffc50594\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x70480275\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x99a0df82\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x1785f53c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x495952f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4c389d26\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1539:1738  function removeAdmin(address account) external onlyAdmin {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1951:2059  function isAdmin(address account) external view returns(bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_19\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10602:10932  function migrateLiquidity(... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      add\n      calldataload\n      tag_22\n      jump\t// in\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2366:2990  function addMigrator(address tokenAddress, address migratorAddress) external onlyAdmin {... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_25\n      jump\t// in\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1138:1327  function addAdmin(address account) external onlyAdmin {... */\n    tag_7:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_28\n      jump\t// in\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15221:16458  function calculateChargeBack(... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9554:10036  function migrateLiquidityWithPermit(... */\n    tag_9:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x0100\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0xa0\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xc0\n      dup2\n      add\n      calldataload\n      swap1\n      0xe0\n      add\n      calldataload\n      tag_34\n      jump\t// in\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8393:8880  function migrateToken(... */\n    tag_10:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_37\n      jump\t// in\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":393:442  mapping(address => address) public bridgeMigrator */\n    tag_11:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1539:1738  function removeAdmin(address account) external onlyAdmin {... */\n    tag_16:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:860  adminRole.has(msg.sender) */\n      tag_43\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:844  adminRole */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":849:859  msg.sender */\n      caller\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:848  adminRole.has */\n      tag_44\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:860  adminRole.has(msg.sender) */\n      jump\t// in\n    tag_43:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":827:908  require(adminRole.has(msg.sender), 'KalyswapBridgeMigrationRouter: Unauthorized') */\n      tag_45\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_72bf313591ceddf754ca6a5c3bb1bce298c6ad13c15c3e899581c1b7df075c21\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1614:1624  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1614:1635  msg.sender != account */\n      dup3\n      and\n      eq\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1606:1696  require(msg.sender != account, \"KalyswapBridgeMigrationRouter: You can't demote yourself\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e6c3cbc1b9cc3350f2defb4add44202bf98de183d551d772ba5896f5bb0d10cc\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1706:1731  adminRole.remove(account) */\n      tag_48\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1706:1715  adminRole */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1723:1730  account */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1706:1722  adminRole.remove */\n      tag_49\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1706:1731  adminRole.remove(account) */\n      jump\t// in\n    tag_48:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1539:1738  function removeAdmin(address account) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1951:2059  function isAdmin(address account) external view returns(bool) {... */\n    tag_19:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2007:2011  bool */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2030:2052  adminRole.has(account) */\n      tag_51\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2007:2011  bool */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2044:2051  account */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2030:2043  adminRole.has */\n      tag_44\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2030:2052  adminRole.has(account) */\n      jump\t// in\n    tag_51:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2023:2052  return adminRole.has(account) */\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1951:2059  function isAdmin(address account) external view returns(bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10602:10932  function migrateLiquidity(... */\n    tag_22:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10782:10790  deadline */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":649:664  block.timestamp */\n      timestamp\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":637:645  deadline */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":637:664  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":629:707  require(deadline >= block.timestamp, 'KalyswapBridgeMigrationRouter: EXPIRED') */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ab411b16b48c0dfc5a303ed96b1803938c6e2d0701b8085498de3b758ca25a98\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10802:10925  _migrateLiquidity(... */\n      tag_55\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10833:10850  liquidityPairFrom */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10864:10879  liquidityPairTo */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10893:10895  to */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10909:10915  amount */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10802:10819  _migrateLiquidity */\n      tag_56\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10802:10925  _migrateLiquidity(... */\n      jump\t// in\n    tag_55:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10602:10932  function migrateLiquidity(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2366:2990  function addMigrator(address tokenAddress, address migratorAddress) external onlyAdmin {... */\n    tag_25:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:860  adminRole.has(msg.sender) */\n      tag_58\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:844  adminRole */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":849:859  msg.sender */\n      caller\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:848  adminRole.has */\n      tag_44\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:860  adminRole.has(msg.sender) */\n      jump\t// in\n    tag_58:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":827:908  require(adminRole.has(msg.sender), 'KalyswapBridgeMigrationRouter: Unauthorized') */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_72bf313591ceddf754ca6a5c3bb1bce298c6ad13c15c3e899581c1b7df075c21\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2471:2497  tokenAddress != address(0) */\n      dup3\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2463:2561  require(tokenAddress != address(0), \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2579:2608  migratorAddress != address(0) */\n      dup2\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2571:2675  require(migratorAddress != address(0), \"KalyswapBridgeMigrationRouter: migratorAddress 0 not supported\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1c7c659b1ae1b6657f6277780e3b866d18de2ae7bdb0795c710a1378deb7c207\n      0x3e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2685:2699  uint256 amount */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2715:2730  migratorAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2702:2742  IBridgeToken(migratorAddress).swapSupply */\n      and\n      0xab32dbb7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2743:2755  tokenAddress */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2702:2756  IBridgeToken(migratorAddress).swapSupply(tokenAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      mload\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2787:2797  amount > 0 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2766:2875  require(... */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_67de629378f206179ef1573eeb90ada9b246d75587b16d0d1d34653b7fb2db45\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2885:2927  _allowToken(tokenAddress, migratorAddress) */\n      tag_68\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2897:2909  tokenAddress */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2911:2926  migratorAddress */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2885:2896  _allowToken */\n      tag_69\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2885:2927  _allowToken(tokenAddress, migratorAddress) */\n      jump\t// in\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2937:2965  bridgeMigrator[tokenAddress] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2937:2951  bridgeMigrator */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2937:2965  bridgeMigrator[tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2937:2983  bridgeMigrator[tokenAddress] = migratorAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":2366:2990  function addMigrator(address tokenAddress, address migratorAddress) external onlyAdmin {... */\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1138:1327  function addAdmin(address account) external onlyAdmin {... */\n    tag_28:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:860  adminRole.has(msg.sender) */\n      tag_71\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:844  adminRole */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":849:859  msg.sender */\n      caller\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:848  adminRole.has */\n      tag_44\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":835:860  adminRole.has(msg.sender) */\n      jump\t// in\n    tag_71:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":827:908  require(adminRole.has(msg.sender), 'KalyswapBridgeMigrationRouter: Unauthorized') */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_72bf313591ceddf754ca6a5c3bb1bce298c6ad13c15c3e899581c1b7df075c21\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1210:1231  account != address(0) */\n      dup2\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1202:1288  require(account != address(0), \"KalyswapBridgeMigrationRouter: Address 0 not allowed\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_05cf0a3569a15a3c6d55134bc83c6e310486fc5d86c57fe969396f1673709115\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1298:1320  adminRole.add(account) */\n      tag_48\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1298:1307  adminRole */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1312:1319  account */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1298:1311  adminRole.add */\n      tag_41\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":1298:1320  adminRole.add(account) */\n      jump\t// in\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15221:16458  function calculateChargeBack(... */\n    tag_31:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15368:15380  uint amount0 */\n      0x00\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15414:15445  liquidityPairFrom != address(0) */\n      dup6\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15406:15522  require(liquidityPairFrom != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0 not supported\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x48\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_200248fc6ca52a59603938cda7204781ce09d1bfbab0ded816a7da12334c83d7\n      0x48\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15540:15569  liquidityPairTo != address(0) */\n      dup5\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15532:15644  require(liquidityPairTo != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0 not supported\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x46\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_55b0696d49f993eb1ace324d5663bb2fcaf6a2e9adf7d970b2aa88f8e8484c73\n      0x46\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15655:15669  uint amountIn0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15671:15685  uint amountIn1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15689:15741  _calculateRescueLiquidity(liquidityPairFrom, amount) */\n      tag_79\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15715:15732  liquidityPairFrom */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15734:15740  amount */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15689:15714  _calculateRescueLiquidity */\n      tag_80\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15689:15741  _calculateRescueLiquidity(liquidityPairFrom, amount) */\n      jump\t// in\n    tag_79:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15654:15741  (uint amountIn0, uint amountIn1) = _calculateRescueLiquidity(liquidityPairFrom, amount) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15814:15829  liquidityPairTo */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15800:15837  IKalyswapPair(liquidityPairTo).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15800:15839  IKalyswapPair(liquidityPairTo).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15796  IKalyswapPair(liquidityPairFrom).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15839  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15794  IKalyswapPair(liquidityPairFrom).token0 */\n      dup11\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15796  IKalyswapPair(liquidityPairFrom).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15800:15839  IKalyswapPair(liquidityPairTo).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15796  IKalyswapPair(liquidityPairFrom).token0() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15794  IKalyswapPair(liquidityPairFrom).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15796  IKalyswapPair(liquidityPairFrom).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15839  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() */\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15939  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n      tag_89\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15914:15929  liquidityPairTo */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15900:15937  IKalyswapPair(liquidityPairTo).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15900:15939  IKalyswapPair(liquidityPairTo).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15896  IKalyswapPair(liquidityPairFrom).token1() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd21220a7)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15939  IKalyswapPair(liquidityPairFrom).token1() != IKalyswapPair(liquidityPairTo).token1() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15894  IKalyswapPair(liquidityPairFrom).token1 */\n      dup11\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15896  IKalyswapPair(liquidityPairFrom).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15900:15939  IKalyswapPair(liquidityPairTo).token1() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15896  IKalyswapPair(liquidityPairFrom).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15894  IKalyswapPair(liquidityPairFrom).token1 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15896  IKalyswapPair(liquidityPairFrom).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15855:15939  IKalyswapPair(liquidityPairFrom).token1() != IKalyswapPair(liquidityPairTo).token1() */\n      and\n      eq\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15755:15939  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n    tag_89:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15751:16022  if (IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n      iszero\n      tag_98\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15990:15999  amountIn1 */\n      swap1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15751:16022  if (IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n    tag_98:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16032:16048  uint112 reserve0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16050:16066  uint112 reserve1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16085:16100  liquidityPairTo */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16071:16113  IKalyswapPair(liquidityPairTo).getReserves */\n      and\n      0x0902f1ac\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16071:16115  IKalyswapPair(liquidityPairTo).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16139:16148  amountIn0 */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16125:16136  uint quote0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16172:16224  KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      tag_103\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16139:16148  amountIn0 */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16172:16224  KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      0xffffffffffffffffffffffffffff\n      dup1\n      dup8\n      and\n      swap1\n      dup7\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16172:16193  KalyswapLibrary.quote */\n      tag_104\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16172:16224  KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      jump\t// in\n    tag_103:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16158:16224  uint quote1 = KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16247:16256  amountIn1 */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16238:16244  quote1 */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16238:16256  quote1 > amountIn1 */\n      gt\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16234:16376  if (quote1 > amountIn1) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16281:16290  amountIn1 */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16272:16290  quote1 = amountIn1 */\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16313:16365  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      tag_106\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16335:16344  amountIn1 */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16346:16354  reserve1 */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16313:16365  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16356:16364  reserve0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16313:16365  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16313:16334  KalyswapLibrary.quote */\n      tag_104\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16313:16365  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      jump\t// in\n    tag_106:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16304:16365  quote0 = KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      swap2\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16234:16376  if (quote1 > amountIn1) {... */\n    tag_105:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16395:16413  amountIn0 - quote0 */\n      swap5\n      sub\n      swap10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":16433:16451  amountIn1 - quote1 */\n      swap4\n      swap1\n      swap3\n      sub\n      swap8\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":15221:16458  function calculateChargeBack(... */\n      swap2\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9554:10036  function migrateLiquidityWithPermit(... */\n    tag_34:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9783:9791  deadline */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":649:664  block.timestamp */\n      timestamp\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":637:645  deadline */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":637:664  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":629:707  require(deadline >= block.timestamp, 'KalyswapBridgeMigrationRouter: EXPIRED') */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ab411b16b48c0dfc5a303ed96b1803938c6e2d0701b8085498de3b758ca25a98\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9896  IKalyswapPair(liquidityPairFrom).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0x40\n      dup1\n      mload\n      0xd505accf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9843:9853  msg.sender */\n      caller\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9896  IKalyswapPair(liquidityPairFrom).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0x04\n      dup3\n      add\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9863:9867  this */\n      address\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9896  IKalyswapPair(liquidityPairFrom).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      0x64\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n      0xff\n      dup7\n      and\n      0x84\n      dup3\n      add\n      mstore\n      0xa4\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      0xc4\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9842  IKalyswapPair(liquidityPairFrom).permit */\n      dup12\n      and\n      swap2\n      0xd505accf\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9896  IKalyswapPair(liquidityPairFrom).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0xe4\n      dup1\n      dup4\n      add\n      swap3\n      0x00\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9842  IKalyswapPair(liquidityPairFrom).permit */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9803:9896  IKalyswapPair(liquidityPairFrom).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9906:10029  _migrateLiquidity(... */\n      tag_113\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9937:9954  liquidityPairFrom */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9968:9983  liquidityPairTo */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9997:9999  to */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":10013:10019  amount */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9906:9923  _migrateLiquidity */\n      tag_56\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9906:10029  _migrateLiquidity(... */\n      jump\t// in\n    tag_113:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":9554:10036  function migrateLiquidityWithPermit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8393:8880  function migrateToken(... */\n    tag_37:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8524:8532  deadline */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":649:664  block.timestamp */\n      timestamp\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":637:645  deadline */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":637:664  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":629:707  require(deadline >= block.timestamp, 'KalyswapBridgeMigrationRouter: EXPIRED') */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ab411b16b48c0dfc5a303ed96b1803938c6e2d0701b8085498de3b758ca25a98\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8565:8586  bridgeMigrator[token] */\n      dup6\n      dup2\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8598:8599  0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8565:8586  bridgeMigrator[token] */\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8565:8579  bridgeMigrator */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8565:8586  bridgeMigrator[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8544:8680  require(... */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ddde50f1cae8853e86ca4100759dc699a86a58cbbaac272e74d5c0bdd9991550\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8690:8763  TransferHelper.safeTransferFrom(token, msg.sender, address(this), amount) */\n      tag_118\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8722:8727  token */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8729:8739  msg.sender */\n      caller\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8749:8753  this */\n      address\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8756:8762  amount */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8690:8721  TransferHelper.safeTransferFrom */\n      tag_119\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8690:8763  TransferHelper.safeTransferFrom(token, msg.sender, address(this), amount) */\n      jump\t// in\n    tag_118:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8773:8801  _migrateToken(token, amount) */\n      tag_120\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8787:8792  token */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8794:8800  amount */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8773:8786  _migrateToken */\n      tag_121\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8773:8801  _migrateToken(token, amount) */\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8839:8860  bridgeMigrator[token] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8839:8853  bridgeMigrator */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8839:8860  bridgeMigrator[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8811:8873  TransferHelper.safeTransfer(bridgeMigrator[token], to, amount) */\n      tag_122\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8839:8860  bridgeMigrator[token] */\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8862:8864  to */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8866:8872  amount */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8811:8838  TransferHelper.safeTransfer */\n      tag_123\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8811:8873  TransferHelper.safeTransfer(bridgeMigrator[token], to, amount) */\n      jump\t// in\n    tag_122:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":8393:8880  function migrateToken(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":393:442  mapping(address => address) public bridgeMigrator */\n    tag_40:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":208:383  function add(Role storage role, address account) internal {... */\n    tag_41:\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":285:303  has(role, account) */\n      tag_125\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":289:293  role */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":295:302  account */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":285:288  has */\n      tag_44\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":285:303  has(role, account) */\n      jump\t// in\n    tag_125:\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":284:303  !has(role, account) */\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":276:339  require(!has(role, account), \"Roles: account already has role\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:369  role.bearer[account] */\n      and\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:360  role.bearer */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:369  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:376  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":372:376  true */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":349:376  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":208:383  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":727:955  function has(Role storage role, address account)... */\n    tag_44:\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":823:827  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":851:872  account != address(0) */\n      dup3\n      and\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":843:911  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":928:948  role.bearer[account] */\n      and\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":928:939  role.bearer */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":928:948  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":727:955  function has(Role storage role, address account)... */\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":458:638  function remove(Role storage role, address account) internal {... */\n    tag_49:\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":537:555  has(role, account) */\n      tag_130\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":541:545  role */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":547:554  account */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":537:540  has */\n      tag_44\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":537:555  has(role, account) */\n      jump\t// in\n    tag_130:\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":529:593  require(has(role, account), \"Roles: account does not have role\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":603:623  role.bearer[account] */\n      and\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":626:631  false */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":603:623  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":603:631  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":458:638  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11410:13672  function _migrateLiquidity(... */\n    tag_56:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11571:11626  _arePairsCompatible(liquidityPairFrom, liquidityPairTo) */\n      tag_133\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11591:11608  liquidityPairFrom */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11610:11625  liquidityPairTo */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11571:11590  _arePairsCompatible */\n      tag_134\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11571:11626  _arePairsCompatible(liquidityPairFrom, liquidityPairTo) */\n      jump\t// in\n    tag_133:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11636:11658  address tokenToMigrate */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11675:11692  liquidityPairFrom */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11661:11700  IKalyswapPair(liquidityPairFrom).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11661:11702  IKalyswapPair(liquidityPairFrom).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11813  IKalyswapPair(liquidityPairTo).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11661:11702  IKalyswapPair(liquidityPairFrom).token0() */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11811  IKalyswapPair(liquidityPairTo).token0 */\n      dup7\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11813  IKalyswapPair(liquidityPairTo).token0() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11661:11702  IKalyswapPair(liquidityPairFrom).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11813  IKalyswapPair(liquidityPairTo).token0() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11811  IKalyswapPair(liquidityPairTo).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11813  IKalyswapPair(liquidityPairTo).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11770  IKalyswapPair(liquidityPairFrom).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11813  IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token0() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11768  IKalyswapPair(liquidityPairFrom).token0 */\n      dup9\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11770  IKalyswapPair(liquidityPairFrom).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11774:11813  IKalyswapPair(liquidityPairTo).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11770  IKalyswapPair(liquidityPairFrom).token0() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11768  IKalyswapPair(liquidityPairFrom).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11770  IKalyswapPair(liquidityPairFrom).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11813  IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token0() */\n      and\n      eq\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11913  IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token0() ||... */\n      tag_147\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11888:11903  liquidityPairTo */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11874:11911  IKalyswapPair(liquidityPairTo).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11874:11913  IKalyswapPair(liquidityPairTo).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11870  IKalyswapPair(liquidityPairFrom).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11913  IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token1() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11868  IKalyswapPair(liquidityPairFrom).token0 */\n      dup9\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11870  IKalyswapPair(liquidityPairFrom).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11874:11913  IKalyswapPair(liquidityPairTo).token1() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11870  IKalyswapPair(liquidityPairFrom).token0() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11868  IKalyswapPair(liquidityPairFrom).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11870  IKalyswapPair(liquidityPairFrom).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11829:11913  IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token1() */\n      and\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11729:11913  IKalyswapPair(liquidityPairFrom).token0() == IKalyswapPair(liquidityPairTo).token0() ||... */\n    tag_147:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11712:12007  if (... */\n      iszero\n      tag_156\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11969:11986  liquidityPairFrom */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11955:11994  IKalyswapPair(liquidityPairFrom).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11955:11996  IKalyswapPair(liquidityPairFrom).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      mload\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11712:12007  if (... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12042:12072  bridgeMigrator[tokenToMigrate] */\n      dup1\n      dup3\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12016:12039  address newTokenAddress */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12042:12072  bridgeMigrator[tokenToMigrate] */\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12042:12056  bridgeMigrator */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12042:12072  bridgeMigrator[tokenToMigrate] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12103:12132  newTokenAddress != address(0) */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12082:12225  require(... */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x43\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c3ea15ec7964d97f4fca03ff0a261f494af166a8c1b012c373fddb2447a896d1\n      0x43\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12289:12304  liquidityPairTo */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12275:12312  IKalyswapPair(liquidityPairTo).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12275:12314  IKalyswapPair(liquidityPairTo).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12256:12314  newTokenAddress == IKalyswapPair(liquidityPairTo).token0() */\n      dup3\n      dup2\n      and\n      swap2\n      and\n      eq\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12256:12388  newTokenAddress == IKalyswapPair(liquidityPairTo).token0() ||... */\n      tag_166\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12363:12378  liquidityPairTo */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12349:12386  IKalyswapPair(liquidityPairTo).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12349:12388  IKalyswapPair(liquidityPairTo).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12330:12388  newTokenAddress == IKalyswapPair(liquidityPairTo).token1() */\n      dup3\n      dup2\n      and\n      swap2\n      and\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12256:12388  newTokenAddress == IKalyswapPair(liquidityPairTo).token0() ||... */\n    tag_166:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12235:12483  require(... */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x45\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1d8ac38f6fc3450d3a0236480a1ba0d030f5fe1f648621299163fdf4fc11c5c7\n      0x45\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12495:12512  uint amountTokenA */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12514:12531  uint amountTokenB */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12535:12578  _rescueLiquidity(liquidityPairFrom, amount) */\n      tag_172\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12552:12569  liquidityPairFrom */\n      dup9\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12571:12577  amount */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12535:12551  _rescueLiquidity */\n      tag_173\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12535:12578  _rescueLiquidity(liquidityPairFrom, amount) */\n      jump\t// in\n    tag_172:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12494:12578  (uint amountTokenA, uint amountTokenB) = _rescueLiquidity(liquidityPairFrom, amount) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12602:12619  uint amountToSwap */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12622:12634  amountTokenA */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12602:12634  uint amountToSwap = amountTokenA */\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12684:12701  liquidityPairFrom */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12670:12709  IKalyswapPair(liquidityPairFrom).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12670:12711  IKalyswapPair(liquidityPairFrom).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12652:12711  tokenToMigrate != IKalyswapPair(liquidityPairFrom).token0() */\n      dup7\n      dup2\n      and\n      swap2\n      and\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12648:12773  if (tokenToMigrate != IKalyswapPair(liquidityPairFrom).token0()) {... */\n      tag_178\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12746:12758  amountTokenB */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12648:12773  if (tokenToMigrate != IKalyswapPair(liquidityPairFrom).token0()) {... */\n    tag_178:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12786:12829  _migrateToken(tokenToMigrate, amountToSwap) */\n      tag_179\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12800:12814  tokenToMigrate */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12816:12828  amountToSwap */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12786:12799  _migrateToken */\n      tag_121\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12786:12829  _migrateToken(tokenToMigrate, amountToSwap) */\n      jump\t// in\n    tag_179:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11410:13672  function _migrateLiquidity(... */\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12912:12927  liquidityPairTo */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12898:12935  IKalyswapPair(liquidityPairTo).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12898:12937  IKalyswapPair(liquidityPairTo).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12894  IKalyswapPair(liquidityPairFrom).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12937  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12892  IKalyswapPair(liquidityPairFrom).token0 */\n      dup12\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12894  IKalyswapPair(liquidityPairFrom).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12898:12937  IKalyswapPair(liquidityPairTo).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12894  IKalyswapPair(liquidityPairFrom).token0() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12892  IKalyswapPair(liquidityPairFrom).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12894  IKalyswapPair(liquidityPairFrom).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:12937  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() */\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:13037  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n      tag_188\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13012:13027  liquidityPairTo */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12998:13035  IKalyswapPair(liquidityPairTo).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12998:13037  IKalyswapPair(liquidityPairTo).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:12994  IKalyswapPair(liquidityPairFrom).token1() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd21220a7)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:13037  IKalyswapPair(liquidityPairFrom).token1() != IKalyswapPair(liquidityPairTo).token1() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:12992  IKalyswapPair(liquidityPairFrom).token1 */\n      dup12\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:12994  IKalyswapPair(liquidityPairFrom).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12998:13037  IKalyswapPair(liquidityPairTo).token1() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:12994  IKalyswapPair(liquidityPairFrom).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:12992  IKalyswapPair(liquidityPairFrom).token1 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:12994  IKalyswapPair(liquidityPairFrom).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12953:13037  IKalyswapPair(liquidityPairFrom).token1() != IKalyswapPair(liquidityPairTo).token1() */\n      and\n      eq\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12853:13037  IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n    tag_188:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12849:13132  if (IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n      iszero\n      tag_197\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13094:13106  amountTokenB */\n      swap1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":12849:13132  if (IKalyswapPair(liquidityPairFrom).token0() != IKalyswapPair(liquidityPairTo).token0() &&... */\n    tag_197:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13143:13161  uint changeAmount0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13163:13181  uint changeAmount1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13187:13377  _addLiquidity(... */\n      tag_198\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13214:13229  liquidityPairTo */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13257:13272  liquidityPairTo */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13243:13280  IKalyswapPair(liquidityPairTo).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13243:13282  IKalyswapPair(liquidityPairTo).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13284:13323  IKalyswapPair(liquidityPairTo).token1() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd21220a7)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13284:13321  IKalyswapPair(liquidityPairTo).token1 */\n      dup15\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13284:13323  IKalyswapPair(liquidityPairTo).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13243:13282  IKalyswapPair(liquidityPairTo).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13284:13323  IKalyswapPair(liquidityPairTo).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13284:13321  IKalyswapPair(liquidityPairTo).token1 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13284:13323  IKalyswapPair(liquidityPairTo).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13337:13349  amountTokenA */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13351:13363  amountTokenB */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13365:13367  to */\n      dup14\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13187:13200  _addLiquidity */\n      tag_207\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13187:13377  _addLiquidity(... */\n      jump\t// in\n    tag_198:\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13142:13377  (uint changeAmount0, uint changeAmount1, ) = _addLiquidity(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13391:13408  changeAmount0 > 0 */\n      dup2\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13387:13522  if (changeAmount0 > 0) {... */\n      tag_209\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13424:13511  TransferHelper.safeTransfer(IKalyswapPair(liquidityPairTo).token0(), to, changeAmount0) */\n      tag_209\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13466:13481  liquidityPairTo */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13452:13489  IKalyswapPair(liquidityPairTo).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13452:13491  IKalyswapPair(liquidityPairTo).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13493:13495  to */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13497:13510  changeAmount0 */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13424:13451  TransferHelper.safeTransfer */\n      tag_123\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13424:13511  TransferHelper.safeTransfer(IKalyswapPair(liquidityPairTo).token0(), to, changeAmount0) */\n      jump\t// in\n    tag_209:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13535:13552  changeAmount1 > 0 */\n      dup1\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13531:13666  if (changeAmount1 > 0) {... */\n      tag_215\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13568:13655  TransferHelper.safeTransfer(IKalyswapPair(liquidityPairTo).token1(), to, changeAmount1) */\n      tag_215\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13610:13625  liquidityPairTo */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13596:13633  IKalyswapPair(liquidityPairTo).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13596:13635  IKalyswapPair(liquidityPairTo).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13637:13639  to */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13641:13654  changeAmount1 */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13568:13595  TransferHelper.safeTransfer */\n      tag_123\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":13568:13655  TransferHelper.safeTransfer(IKalyswapPair(liquidityPairTo).token1(), to, changeAmount1) */\n      jump\t// in\n    tag_215:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":11410:13672  function _migrateLiquidity(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":3257:3418  function _allowToken(address tokenAddress, address spenderAddress) internal {... */\n    tag_69:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":3358:3370  tokenAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":3343:3379  IKalyswapERC20(tokenAddress).approve */\n      and\n      0x095ea7b3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":3380:3394  spenderAddress */\n      dup3\n      not(0x00)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":3343:3411  IKalyswapERC20(tokenAddress).approve(spenderAddress, type(uint).max) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":3257:3418  function _allowToken(address tokenAddress, address spenderAddress) internal {... */\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14220:14619  function _calculateRescueLiquidity(address pairAddress, uint amount) internal view returns (uint amount0, uint amount1) {... */\n    tag_80:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14312:14324  uint amount0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14326:14338  uint amount1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14351:14368  uint112 reserves0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14370:14387  uint112 reserves1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14407:14418  pairAddress */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14393:14431  IKalyswapPair(pairAddress).getReserves */\n      and\n      0x0902f1ac\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14393:14433  IKalyswapPair(pairAddress).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      dup1\n      mload\n      0x20\n      swap2\n      dup3\n      add\n      mload\n      0x40\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14462:14502  IKalyswapPair(pairAddress).totalSupply() */\n      dup1\n      mload\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14393:14433  IKalyswapPair(pairAddress).getReserves() */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14443:14459  uint totalSupply */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14462:14500  IKalyswapPair(pairAddress).totalSupply */\n      dup11\n      and\n      swap3\n      0x18160ddd\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14462:14502  IKalyswapPair(pairAddress).totalSupply() */\n      0x04\n      dup1\n      dup3\n      add\n      swap4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14393:14433  IKalyswapPair(pairAddress).getReserves() */\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14462:14502  IKalyswapPair(pairAddress).totalSupply() */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14462:14500  IKalyswapPair(pairAddress).totalSupply */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14462:14502  IKalyswapPair(pairAddress).totalSupply() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14522:14543  amount.mul(reserves0) */\n      tag_234\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14522:14528  amount */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14522:14543  amount.mul(reserves0) */\n      0xffffffffffffffffffffffffffff\n      dup7\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14522:14532  amount.mul */\n      tag_235\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14522:14543  amount.mul(reserves0) */\n      jump\t// in\n    tag_234:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14522:14557  amount.mul(reserves0) / totalSupply */\n      dup2\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      div\n      swap5\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14601:14612  totalSupply */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14577:14598  amount.mul(reserves1) */\n      tag_237\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14577:14583  amount */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14577:14598  amount.mul(reserves1) */\n      0xffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14577:14587  amount.mul */\n      tag_235\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14577:14598  amount.mul(reserves1) */\n      jump\t// in\n    tag_237:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14577:14612  amount.mul(reserves1) / totalSupply */\n      dup2\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      div\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14567:14612  amount1 = amount.mul(reserves1) / totalSupply */\n      swap4\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":14220:14619  function _calculateRescueLiquidity(address pairAddress, uint amount) internal view returns (uint amount0, uint amount1) {... */\n      pop\n      pop\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1787:2102  function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB) {... */\n    tag_104:\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1869:1881  uint amountB */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1911:1912  0 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1901:1908  amountA */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1901:1912  amountA > 0 */\n      gt\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1893:1953  require(amountA > 0, 'KalyswapLibrary: INSUFFICIENT_AMOUNT') */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_78840e091b36f1ae3c2e726985d3fca034feef7c212a1c9737acba643adee0ed\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1982:1983  0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1971:1979  reserveA */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1971:1983  reserveA > 0 */\n      gt\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1971:1999  reserveA > 0 && reserveB > 0 */\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1998:1999  0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1987:1995  reserveB */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1987:1999  reserveB > 0 */\n      gt\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1971:1999  reserveA > 0 && reserveB > 0 */\n    tag_241:\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1963:2043  require(reserveA > 0 && reserveB > 0, 'KalyswapLibrary: INSUFFICIENT_LIQUIDITY') */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2087:2095  reserveA */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2063:2084  amountA.mul(reserveB) */\n      tag_243\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2063:2070  amountA */\n      dup6\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2075:2083  reserveB */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2063:2074  amountA.mul */\n      tag_235\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2063:2084  amountA.mul(reserveB) */\n      jump\t// in\n    tag_243:\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":2063:2095  amountA.mul(reserveB) / reserveA */\n      dup2\n      tag_244\n      jumpi\n      invalid\n    tag_244:\n      div\n      swap5\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":1787:2102  function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1001:1440  function safeTransferFrom(... */\n    tag_119:\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1265:1316  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      dup2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      or\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1254:1317  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1219:1231  bool success */\n      0x00\n      swap5\n      dup6\n      swap5\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1254:1264  token.call */\n      swap4\n      dup11\n      and\n      swap4\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1265:1316  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap3\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1254:1317  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1265:1316  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1254:1317  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      dup1\n      dup4\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1265:1316  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1254:1317  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n    tag_246:\n      0x20\n      dup4\n      lt\n      tag_248\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_246)\n    tag_248:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_251\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_250)\n    tag_251:\n      0x60\n      swap2\n      pop\n    tag_250:\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1218:1317  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1335:1342  success */\n      dup2\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1335:1392  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_253\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1347:1358  data.length */\n      dup1\n      mload\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1347:1363  data.length == 0 */\n      iszero\n      dup1\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1347:1391  data.length == 0 || abi.decode(data, (bool)) */\n      tag_253\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1378:1382  data */\n      dup1\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1367:1391  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1347:1391  data.length == 0 || abi.decode(data, (bool)) */\n    tag_253:\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":1327:1433  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7495:7974  function _migrateToken(... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7602:7628  tokenAddress != address(0) */\n      dup3\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7594:7692  require(tokenAddress != address(0), \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7715:7743  bridgeMigrator[tokenAddress] */\n      dup1\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7715:7729  bridgeMigrator */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7715:7743  bridgeMigrator[tokenAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7702:7771  IBridgeToken(bridgeMigrator[tokenAddress]).swap(tokenAddress, amount) */\n      dup2\n      mload\n      0xd004f0f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x24\n      dup5\n      add\n      dup7\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7715:7743  bridgeMigrator[tokenAddress] */\n      swap4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7702:7749  IBridgeToken(bridgeMigrator[tokenAddress]).swap */\n      0xd004f0f7\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7702:7771  IBridgeToken(bridgeMigrator[tokenAddress]).swap(tokenAddress, amount) */\n      0x44\n      dup1\n      dup3\n      add\n      swap4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7715:7743  bridgeMigrator[tokenAddress] */\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7702:7771  IBridgeToken(bridgeMigrator[tokenAddress]).swap(tokenAddress, amount) */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7715:7743  bridgeMigrator[tokenAddress] */\n      dup4\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7702:7771  IBridgeToken(bridgeMigrator[tokenAddress]).swap(tokenAddress, amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_258:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7815:7843  bridgeMigrator[tokenAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7815:7829  bridgeMigrator */\n      0x01\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7815:7843  bridgeMigrator[tokenAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7869  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) */\n      dup3\n      mload\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7863:7867  this */\n      address\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7869  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap3\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7873:7879  amount */\n      dup7\n      swap6\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7815:7843  bridgeMigrator[tokenAddress] */\n      swap4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7854  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf */\n      0x70a08231\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7869  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7815:7843  bridgeMigrator[tokenAddress] */\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7869  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7815:7843  bridgeMigrator[tokenAddress] */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7869  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7802:7879  IBridgeToken(bridgeMigrator[tokenAddress]).balanceOf(address(this)) == amount */\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7781:7967  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_20f37cd99da92a5efeb292e424950a5326eaec74b790503092d9fc76b12f685f\n      0x3e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7495:7974  function _migrateToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":605:995  function safeTransfer(... */\n    tag_123:\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":831:876  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      or\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":820:877  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":785:797  bool success */\n      0x00\n      swap5\n      dup6\n      swap5\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":820:830  token.call */\n      swap4\n      dup10\n      and\n      swap4\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":831:876  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap3\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":820:877  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":831:876  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":820:877  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      dup1\n      dup4\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":831:876  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":820:877  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n    tag_267:\n      0x20\n      dup4\n      lt\n      tag_269\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_267)\n    tag_269:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_272\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_271)\n    tag_272:\n      0x60\n      swap2\n      pop\n    tag_271:\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":784:877  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":895:902  success */\n      dup2\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":895:952  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":907:918  data.length */\n      dup1\n      mload\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":907:923  data.length == 0 */\n      iszero\n      dup1\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":907:951  data.length == 0 || abi.decode(data, (bool)) */\n      tag_274\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":938:942  data */\n      dup1\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":927:951  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":907:951  data.length == 0 || abi.decode(data, (bool)) */\n    tag_274:\n        /* \"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":887:988  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_122\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5472616e7366657248656c7065723a205452414e534645525f4641494c454400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6348:7155  function _arePairsCompatible(address pairA, address pairB) internal view {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6439:6458  pairA != address(0) */\n      dup3\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6431:6521  require(pairA != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2779eff898f898effcf0aa56dae8e93db6d4db04eea06f78f89cd9d6340eca68\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6539:6558  pairA != address(0) */\n      dup3\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6531:6619  require(pairA != address(0), \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d3644c735b72355dd1872214f8cef876b6ab448ac1dcde51a78aae8776c79ea0\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6646:6651  pairB */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6637:6651  pairA != pairB */\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6637:6642  pairA */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6637:6651  pairA != pairB */\n      and\n      eq\n      iszero\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6629:6727  require(pairA != pairB, \"KalyswapBridgeMigrationRouter: Cant convert to the same liquidity pairs\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x47\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2386eadbfa1ec37b2bd48e593f37c43c952d063ca4685d6d4e6b987ed53095cd\n      0x47\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6805:6810  pairB */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6791:6818  IKalyswapPair(pairB).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6791:6820  IKalyswapPair(pairB).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_281\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_281:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6787  IKalyswapPair(pairA).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6820  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6785  IKalyswapPair(pairA).token0 */\n      dup6\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6787  IKalyswapPair(pairA).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6791:6820  IKalyswapPair(pairB).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6787  IKalyswapPair(pairA).token0() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6785  IKalyswapPair(pairA).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6787  IKalyswapPair(pairA).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_285:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6820  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() */\n      and\n      eq\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6898  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||... */\n      tag_289\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6883:6888  pairB */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6869:6896  IKalyswapPair(pairB).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6869:6898  IKalyswapPair(pairB).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6865  IKalyswapPair(pairA).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6898  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token1() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6863  IKalyswapPair(pairA).token0 */\n      dup6\n      and\n      swap2\n      0x0dfe1681\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6865  IKalyswapPair(pairA).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6869:6898  IKalyswapPair(pairB).token1() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6865  IKalyswapPair(pairA).token0() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6863  IKalyswapPair(pairA).token0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6865  IKalyswapPair(pairA).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_294:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6836:6898  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token1() */\n      and\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6898  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||... */\n    tag_289:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6976  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||... */\n      dup1\n      tag_298\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6961:6966  pairB */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6947:6974  IKalyswapPair(pairB).token0 */\n      and\n      0x0dfe1681\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6947:6976  IKalyswapPair(pairB).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_302\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_302:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6943  IKalyswapPair(pairA).token1() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd21220a7)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6976  IKalyswapPair(pairA).token1() == IKalyswapPair(pairB).token0() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6941  IKalyswapPair(pairA).token1 */\n      dup6\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6943  IKalyswapPair(pairA).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6947:6976  IKalyswapPair(pairB).token0() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6943  IKalyswapPair(pairA).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6941  IKalyswapPair(pairA).token1 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6943  IKalyswapPair(pairA).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_303:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6914:6976  IKalyswapPair(pairA).token1() == IKalyswapPair(pairB).token0() */\n      and\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:6976  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||... */\n    tag_298:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:7054  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||... */\n      dup1\n      tag_307\n      jumpi\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7039:7044  pairB */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7025:7052  IKalyswapPair(pairB).token1 */\n      and\n      0xd21220a7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7025:7054  IKalyswapPair(pairB).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_310\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_310:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7021  IKalyswapPair(pairA).token1() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd21220a7)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7054  IKalyswapPair(pairA).token1() == IKalyswapPair(pairB).token1() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7019  IKalyswapPair(pairA).token1 */\n      dup6\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7021  IKalyswapPair(pairA).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":7025:7054  IKalyswapPair(pairB).token1() */\n      0x20\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7021  IKalyswapPair(pairA).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7019  IKalyswapPair(pairA).token1 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7021  IKalyswapPair(pairA).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_312:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_314\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_314:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_315\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_315:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6992:7054  IKalyswapPair(pairA).token1() == IKalyswapPair(pairB).token1() */\n      and\n      eq\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6758:7054  IKalyswapPair(pairA).token0() == IKalyswapPair(pairB).token0() ||... */\n    tag_307:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":6737:7148  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x44\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b8ed0d259757db98fff877ed18290c2e4ef438aefbcbb3f6867ba133df0a875d\n      0x44\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5645:5972  function _rescueLiquidity(... */\n    tag_173:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5747:5764  uint amountTokenA */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5766:5783  uint amountTokenB */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5795:5876  TransferHelper.safeTransferFrom(liquidityPair, msg.sender, liquidityPair, amount) */\n      tag_318\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5827:5840  liquidityPair */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5842:5852  msg.sender */\n      caller\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5854:5867  liquidityPair */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5869:5875  amount */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5795:5826  TransferHelper.safeTransferFrom */\n      tag_119\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5795:5876  TransferHelper.safeTransferFrom(liquidityPair, msg.sender, liquidityPair, amount) */\n      jump\t// in\n    tag_318:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5917:5965  IKalyswapPair(liquidityPair).burn(address(this)) */\n      0x40\n      dup1\n      mload\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5959:5963  this */\n      address\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5917:5965  IKalyswapPair(liquidityPair).burn(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5917:5950  IKalyswapPair(liquidityPair).burn */\n      dup8\n      and\n      swap3\n      0x89afcb44\n      swap3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5917:5965  IKalyswapPair(liquidityPair).burn(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5917:5950  IKalyswapPair(liquidityPair).burn */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5917:5965  IKalyswapPair(liquidityPair).burn(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_319:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_321\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_321:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_322\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_322:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n      swap1\n      swap6\n      swap1\n      swap5\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5645:5972  function _rescueLiquidity(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4239:5098  function _addLiquidity(... */\n    tag_207:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4428:4440  uint amount0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4442:4454  uint amount1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4456:4476  uint liquidityAmount */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4489:4505  uint112 reserve0 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4507:4523  uint112 reserve1 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4542:4551  pairToken */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4528:4564  IKalyswapPair(pairToken).getReserves */\n      and\n      0x0902f1ac\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4528:4566  IKalyswapPair(pairToken).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_324:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_326:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_327\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_327:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4590:4599  amountIn0 */\n      dup8\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4576:4587  uint quote0 */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4623:4675  KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      tag_328\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4590:4599  amountIn0 */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4623:4675  KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      0xffffffffffffffffffffffffffff\n      dup1\n      dup8\n      and\n      swap1\n      dup7\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4623:4644  KalyswapLibrary.quote */\n      tag_104\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4623:4675  KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      jump\t// in\n    tag_328:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4609:4675  uint quote1 = KalyswapLibrary.quote(amountIn0, reserve0, reserve1) */\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4698:4707  amountIn1 */\n      dup9\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4689:4695  quote1 */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4689:4707  quote1 > amountIn1 */\n      gt\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4685:4827  if (quote1 > amountIn1) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4732:4741  amountIn1 */\n      dup9\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4723:4741  quote1 = amountIn1 */\n      swap1\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4764:4816  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      tag_330\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4786:4795  amountIn1 */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4797:4805  reserve1 */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4764:4816  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4807:4815  reserve0 */\n      dup7\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4764:4816  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4764:4785  KalyswapLibrary.quote */\n      tag_104\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4764:4816  KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      jump\t// in\n    tag_330:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4755:4816  quote0 = KalyswapLibrary.quote(amountIn1, reserve1, reserve0) */\n      swap2\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4685:4827  if (quote1 > amountIn1) {... */\n    tag_329:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4836:4890  TransferHelper.safeTransfer(token0, pairToken, quote0) */\n      tag_331\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4864:4870  token0 */\n      dup13\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4872:4881  pairToken */\n      dup15\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4883:4889  quote0 */\n      dup5\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4836:4863  TransferHelper.safeTransfer */\n      tag_123\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4836:4890  TransferHelper.safeTransfer(token0, pairToken, quote0) */\n      jump\t// in\n    tag_331:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4900:4954  TransferHelper.safeTransfer(token1, pairToken, quote1) */\n      tag_332\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4928:4934  token1 */\n      dup12\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4936:4945  pairToken */\n      dup15\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4947:4953  quote1 */\n      dup4\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4900:4927  TransferHelper.safeTransfer */\n      tag_123\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4900:4954  TransferHelper.safeTransfer(token1, pairToken, quote1) */\n      jump\t// in\n    tag_332:\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4986:4992  quote0 */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4974:4983  amountIn0 */\n      dup11\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4974:4992  amountIn0 - quote0 */\n      sub\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4964:4992  amount0 = amountIn0 - quote0 */\n      swap7\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5024:5030  quote1 */\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5012:5021  amountIn1 */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5012:5030  amountIn1 - quote1 */\n      sub\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5002:5030  amount1 = amountIn1 - quote1 */\n      swap6\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5072:5081  pairToken */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5058:5087  IKalyswapPair(pairToken).mint */\n      and\n      0x6a627842\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5088:5090  to */\n      dup10\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5058:5091  IKalyswapPair(pairToken).mint(to) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_333:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_335:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n      pop\n      mload\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4239:5098  function _addLiquidity(... */\n      swap7\n      swap14\n      swap6\n      swap13\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":5058:5091  IKalyswapPair(pairToken).mint(to) */\n      swap6\n      swap11\n      pop\n        /* \"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":4239:5098  function _addLiquidity(... */\n      swap4\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":427:567  function mul(uint x, uint y) internal pure returns (uint z) {... */\n    tag_235:\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":479:485  uint z */\n      0x00\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":505:511  y == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":505:535  y == 0 || (z = x * y) / y == x */\n      tag_338\n      jumpi\n      pop\n      pop\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":520:525  x * y */\n      dup1\n      dup3\n      mul\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":534:535  x */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":529:530  y */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":520:525  x * y */\n      dup3\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":529:530  y */\n      dup2\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":515:530  (z = x * y) / y */\n      tag_339\n      jumpi\n      invalid\n    tag_339:\n      div\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":515:535  (z = x * y) / y == x */\n      eq\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":505:535  y == 0 || (z = x * y) / y == x */\n    tag_338:\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":497:560  require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow') */\n      tag_51\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_05cf0a3569a15a3c6d55134bc83c6e310486fc5d86c57fe969396f1673709115 4b616c79737761704272696467654d6967726174696f6e526f757465723a20416464726573732030206e6f7420616c6c6f776564\n    data_1c7c659b1ae1b6657f6277780e3b866d18de2ae7bdb0795c710a1378deb7c207 4b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72416464726573732030206e6f7420737570706f72746564\n    data_1d8ac38f6fc3450d3a0236480a1ba0d030f5fe1f648621299163fdf4fc11c5c7 4b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f65736e2774206d6174636820746865206d6967726174696f6e20746f6b656e\n    data_200248fc6ca52a59603938cda7204781ce09d1bfbab0ded816a7da12334c83d7 4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030206e6f7420737570706f72746564\n    data_20f37cd99da92a5efeb292e424950a5326eaec74b790503092d9fc76b12f685f 4b616c79737761704272696467654d6967726174696f6e526f757465723a204469646e2774207969656c642074686520636f727265637420616d6f756e74\n    data_2386eadbfa1ec37b2bd48e593f37c43c952d063ca4685d6d4e6b987ed53095cd 4b616c79737761704272696467654d6967726174696f6e526f757465723a2043616e7420636f6e7665727420746f207468652073616d65206c6971756964697479207061697273\n    data_2779eff898f898effcf0aa56dae8e93db6d4db04eea06f78f89cd9d6340eca68 4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030\n    data_55b0696d49f993eb1ace324d5663bb2fcaf6a2e9adf7d970b2aa88f8e8484c73 4b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030206e6f7420737570706f72746564\n    data_67de629378f206179ef1573eeb90ada9b246d75587b16d0d1d34653b7fb2db45 546865206d69677261746f7220646f65736e27742068617665207377617020737570706c7920666f72207468697320746f6b656e\n    data_72bf313591ceddf754ca6a5c3bb1bce298c6ad13c15c3e899581c1b7df075c21 4b616c79737761704272696467654d6967726174696f6e526f757465723a20556e617574686f72697a6564\n    data_78840e091b36f1ae3c2e726985d3fca034feef7c212a1c9737acba643adee0ed 4b616c79737761704c6962726172793a20494e53554646494349454e545f414d4f554e54\n    data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257 526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65\n    data_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1 4b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459\n    data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n    data_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44 4b616c79737761704272696467654d6967726174696f6e526f757465723a20746f6b656e416464726573732030206e6f7420737570706f72746564\n    data_ab411b16b48c0dfc5a303ed96b1803938c6e2d0701b8085498de3b758ca25a98 4b616c79737761704272696467654d6967726174696f6e526f757465723a2045585049524544\n    data_b8ed0d259757db98fff877ed18290c2e4ef438aefbcbb3f6867ba133df0a875d 4b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f6573206e6f742068617665206f6e6520746f6b656e206d61746368696e67\n    data_c3ea15ec7964d97f4fca03ff0a261f494af166a8c1b012c373fddb2447a896d1 4b616c79737761704272696467654d6967726174696f6e526f757465723a204d69677261746f72206e6f74207265676973746572656420666f72207468652070616972\n    data_d3644c735b72355dd1872214f8cef876b6ab448ac1dcde51a78aae8776c79ea0 4b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030\n    data_ddde50f1cae8853e86ca4100759dc699a86a58cbbaac272e74d5c0bdd9991550 4b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72206e6f742072656769737465726564\n    data_e6c3cbc1b9cc3350f2defb4add44202bf98de183d551d772ba5896f5bb0d10cc 4b616c79737761704272696467654d6967726174696f6e526f757465723a20596f752063616e27742064656d6f746520796f757273656c66\n    data_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18 5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544\n\n    auxdata: 0xa2646970667358221220e376511e4bb29c8d900c4e567b804c838e0fe97cb314621637fe4bcc02cd757a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506200002d3360006200003360201b62000b751790919060201c565b62000120565b6200003f8282620000b7565b1562000092576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620001005760405162461bcd60e51b8152600401808060200182810382526022815260200180620029c86022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61289880620001306000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80637048027511610076578063b032fff71161005b578063b032fff7146101ef578063f057d23714610247578063ffc5059414610283576100a3565b8063704802751461017a57806399a0df82146101a0576100a3565b80631785f53c146100a857806324d7806c146100d0578063495952f51461010a5780634c389d261461014c575b600080fd5b6100ce600480360360208110156100be57600080fd5b50356001600160a01b03166102c5565b005b6100f6600480360360208110156100e657600080fd5b50356001600160a01b0316610361565b604080519115158252519081900360200190f35b6100ce600480360360a081101561012057600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060800135610373565b6100ce6004803603604081101561016257600080fd5b506001600160a01b03813581169160200135166103c7565b6100ce6004803603602081101561019057600080fd5b50356001600160a01b03166105a1565b6101d6600480360360608110156101b657600080fd5b506001600160a01b03813581169160208101359091169060400135610637565b6040805192835260208301919091528051918290030190f35b6100ce600480360361010081101561020657600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060ff60a0820135169060c08101359060e00135610987565b6100ce6004803603608081101561025d57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610a81565b6102a96004803603602081101561029957600080fd5b50356001600160a01b0316610b5a565b604080516001600160a01b039092168252519081900360200190f35b6102d0600033610bf6565b61030b5760405162461bcd60e51b815260040180806020018281038252602b8152602001806125f8602b913960400191505060405180910390fd5b336001600160a01b03821614156103535760405162461bcd60e51b81526004018080602001828103825260388152602001806128076038913960400191505060405180910390fd5b61035e600082610c5d565b50565b600061036d8183610bf6565b92915050565b80428110156103b35760405162461bcd60e51b81526004018080602001828103825260268152602001806126ec6026913960400191505060405180910390fd5b6103bf86868686610cc4565b505050505050565b6103d2600033610bf6565b61040d5760405162461bcd60e51b815260040180806020018281038252602b8152602001806125f8602b913960400191505060405180910390fd5b6001600160a01b0382166104525760405162461bcd60e51b815260040180806020018281038252603b8152602001806126b1603b913960400191505060405180910390fd5b6001600160a01b0381166104975760405162461bcd60e51b815260040180806020018281038252603e8152602001806123f4603e913960400191505060405180910390fd5b6000816001600160a01b031663ab32dbb7846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d602081101561051057600080fd5b50519050806105505760405162461bcd60e51b81526004018080602001828103825260348152602001806125c46034913960400191505060405180910390fd5b61055a8383611537565b506001600160a01b03918216600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b6105ac600033610bf6565b6105e75760405162461bcd60e51b815260040180806020018281038252602b8152602001806125f8602b913960400191505060405180910390fd5b6001600160a01b03811661062c5760405162461bcd60e51b81526004018080602001828103825260348152602001806123c06034913960400191505060405180910390fd5b61035e600082610b75565b6000806001600160a01b03851661067f5760405162461bcd60e51b81526004018080602001828103825260488152602001806124776048913960600191505060405180910390fd5b6001600160a01b0384166106c45760405162461bcd60e51b815260040180806020018281038252604681526020018061257e6046913960600191505060405180910390fd5b6000806106d187866115c0565b91509150856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561070e57600080fd5b505afa158015610722573d6000803e3d6000fd5b505050506040513d602081101561073857600080fd5b505160408051630dfe168160e01b815290516001600160a01b03928316928a1691630dfe1681916004808301926020929190829003018186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d60208110156107a857600080fd5b50516001600160a01b03161480159061089d5750856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f557600080fd5b505afa158015610809573d6000803e3d6000fd5b505050506040513d602081101561081f57600080fd5b50516040805163d21220a760e01b815290516001600160a01b03928316928a169163d21220a7916004808301926020929190829003018186803b15801561086557600080fd5b505afa158015610879573d6000803e3d6000fd5b505050506040513d602081101561088f57600080fd5b50516001600160a01b031614155b156108a457905b600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156108e057600080fd5b505afa1580156108f4573d6000803e3d6000fd5b505050506040513d606081101561090a57600080fd5b5080516020909101519092509050836000610939826dffffffffffffffffffffffffffff808716908616611713565b9050848111156109745784905061097185846dffffffffffffffffffffffffffff16866dffffffffffffffffffffffffffff16611713565b91505b9403999390920397509195505050505050565b83428110156109c75760405162461bcd60e51b81526004018080602001828103825260268152602001806126ec6026913960400191505060405180910390fd5b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890526064810187905260ff8616608482015260a4810185905260c4810184905290516001600160a01b038b169163d505accf9160e480830192600092919082900301818387803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b50505050610a7689898989610cc4565b505050505050505050565b8042811015610ac15760405162461bcd60e51b81526004018080602001828103825260268152602001806126ec6026913960400191505060405180910390fd5b6001600160a01b0385811660009081526001602052604090205416610b175760405162461bcd60e51b81526004018080602001828103825260368152602001806127d16036913960400191505060405180910390fd5b610b23853330866117b9565b610b2d858461193b565b6001600160a01b03808616600090815260016020526040902054610b5391168585611aed565b5050505050565b6001602052600090815260409020546001600160a01b031681565b610b7f8282610bf6565b15610bd1576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216610c3d5760405162461bcd60e51b815260040180806020018281038252602281526020018061268f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610c678282610bf6565b610ca25760405162461bcd60e51b81526004018080602001828103825260218152602001806126476021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610cce8484611c7d565b6000846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0957600080fd5b505afa158015610d1d573d6000803e3d6000fd5b505050506040513d6020811015610d3357600080fd5b505160408051630dfe168160e01b815290519192506001600160a01b03861691630dfe168191600480820192602092909190829003018186803b158015610d7957600080fd5b505afa158015610d8d573d6000803e3d6000fd5b505050506040513d6020811015610da357600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692881691630dfe1681916004808301926020929190829003018186803b158015610de957600080fd5b505afa158015610dfd573d6000803e3d6000fd5b505050506040513d6020811015610e1357600080fd5b50516001600160a01b03161480610f055750836001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610e5e57600080fd5b505afa158015610e72573d6000803e3d6000fd5b505050506040513d6020811015610e8857600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692881691630dfe1681916004808301926020929190829003018186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d6020811015610ef857600080fd5b50516001600160a01b0316145b15610f7257846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4357600080fd5b505afa158015610f57573d6000803e3d6000fd5b505050506040513d6020811015610f6d57600080fd5b505190505b6001600160a01b038082166000908152600160205260409020541680610fc95760405162461bcd60e51b81526004018080602001828103825260438152602001806127566043913960600191505060405180910390fd5b846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561100257600080fd5b505afa158015611016573d6000803e3d6000fd5b505050506040513d602081101561102c57600080fd5b50516001600160a01b03828116911614806110b65750846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561107b57600080fd5b505afa15801561108f573d6000803e3d6000fd5b505050506040513d60208110156110a557600080fd5b50516001600160a01b038281169116145b6110f15760405162461bcd60e51b81526004018080602001828103825260458152602001806124326045913960600191505060405180910390fd5b6000806110fe8886612124565b915091506000829050886001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561114057600080fd5b505afa158015611154573d6000803e3d6000fd5b505050506040513d602081101561116a57600080fd5b50516001600160a01b038681169116146111815750805b61118b858261193b565b50866001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c557600080fd5b505afa1580156111d9573d6000803e3d6000fd5b505050506040513d60208110156111ef57600080fd5b505160408051630dfe168160e01b815290516001600160a01b03928316928b1691630dfe1681916004808301926020929190829003018186803b15801561123557600080fd5b505afa158015611249573d6000803e3d6000fd5b505050506040513d602081101561125f57600080fd5b50516001600160a01b0316148015906113545750866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ac57600080fd5b505afa1580156112c0573d6000803e3d6000fd5b505050506040513d60208110156112d657600080fd5b50516040805163d21220a760e01b815290516001600160a01b03928316928b169163d21220a7916004808301926020929190829003018186803b15801561131c57600080fd5b505afa158015611330573d6000803e3d6000fd5b505050506040513d602081101561134657600080fd5b50516001600160a01b031614155b1561135b57905b60008061143b898a6001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561139b57600080fd5b505afa1580156113af573d6000803e3d6000fd5b505050506040513d60208110156113c557600080fd5b50516040805163d21220a760e01b815290516001600160a01b038e169163d21220a7916004808301926020929190829003018186803b15801561140757600080fd5b505afa15801561141b573d6000803e3d6000fd5b505050506040513d602081101561143157600080fd5b505187878d6121ce565b50909250905081156114b6576114b6896001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561148357600080fd5b505afa158015611497573d6000803e3d6000fd5b505050506040513d60208110156114ad57600080fd5b50518984611aed565b801561152b5761152b896001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156114f857600080fd5b505afa15801561150c573d6000803e3d6000fd5b505050506040513d602081101561152257600080fd5b50518983611aed565b50505050505050505050565b816001600160a01b031663095ea7b3826000196040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561159057600080fd5b505af11580156115a4573d6000803e3d6000fd5b505050506040513d60208110156115ba57600080fd5b50505050565b600080600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156115ff57600080fd5b505afa158015611613573d6000803e3d6000fd5b505050506040513d606081101561162957600080fd5b508051602091820151604080517f18160ddd00000000000000000000000000000000000000000000000000000000815290519295509093506000926001600160a01b038a16926318160ddd926004808201939291829003018186803b15801561169157600080fd5b505afa1580156116a5573d6000803e3d6000fd5b505050506040513d60208110156116bb57600080fd5b50519050806116da876dffffffffffffffffffffffffffff8616612353565b816116e157fe5b049450806116ff876dffffffffffffffffffffffffffff8516612353565b8161170657fe5b0493505050509250929050565b60008084116117535760405162461bcd60e51b81526004018080602001828103825260248152602001806126236024913960400191505060405180910390fd5b6000831180156117635750600082115b61179e5760405162461bcd60e51b81526004018080602001828103825260278152602001806126686027913960400191505060405180910390fd5b826117a98584612353565b816117b057fe5b04949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b6020831061186b5780518252601f19909201916020918201910161184c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146118cd576040519150601f19603f3d011682016040523d82523d6000602084013e6118d2565b606091505b509150915081801561190057508051158061190057508080602001905160208110156118fd57600080fd5b50515b6103bf5760405162461bcd60e51b815260040180806020018281038252602481526020018061283f6024913960400191505060405180910390fd5b6001600160a01b0382166119805760405162461bcd60e51b815260040180806020018281038252603b8152602001806126b1603b913960400191505060405180910390fd5b6001600160a01b038083166000818152600160205260408082205481517fd004f0f7000000000000000000000000000000000000000000000000000000008152600481019490945260248401869052905193169263d004f0f792604480820193929182900301818387803b1580156119f757600080fd5b505af1158015611a0b573d6000803e3d6000fd5b5050506001600160a01b038084166000908152600160209081526040918290205482517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015292518695509316926370a08231926024808201939291829003018186803b158015611a8157600080fd5b505afa158015611a95573d6000803e3d6000fd5b505050506040513d6020811015611aab57600080fd5b505114611ae95760405162461bcd60e51b815260040180806020018281038252603e8152602001806124bf603e913960400191505060405180910390fd5b5050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611b975780518252601f199092019160209182019101611b78565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611bf9576040519150601f19603f3d011682016040523d82523d6000602084013e611bfe565b606091505b5091509150818015611c2c575080511580611c2c5750808060200190516020811015611c2957600080fd5b50515b610b53576040805162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015290519081900360640190fd5b6001600160a01b038216611cc25760405162461bcd60e51b815260040180806020018281038252603a815260200180612544603a913960400191505060405180910390fd5b6001600160a01b038216611d075760405162461bcd60e51b81526004018080602001828103825260388152602001806127996038913960400191505060405180910390fd5b806001600160a01b0316826001600160a01b03161415611d585760405162461bcd60e51b81526004018080602001828103825260478152602001806124fd6047913960600191505060405180910390fd5b806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015611d9157600080fd5b505afa158015611da5573d6000803e3d6000fd5b505050506040513d6020811015611dbb57600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692851691630dfe1681916004808301926020929190829003018186803b158015611e0157600080fd5b505afa158015611e15573d6000803e3d6000fd5b505050506040513d6020811015611e2b57600080fd5b50516001600160a01b03161480611f1d5750806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015611e7657600080fd5b505afa158015611e8a573d6000803e3d6000fd5b505050506040513d6020811015611ea057600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692851691630dfe1681916004808301926020929190829003018186803b158015611ee657600080fd5b505afa158015611efa573d6000803e3d6000fd5b505050506040513d6020811015611f1057600080fd5b50516001600160a01b0316145b806120035750806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015611f5c57600080fd5b505afa158015611f70573d6000803e3d6000fd5b505050506040513d6020811015611f8657600080fd5b50516040805163d21220a760e01b815290516001600160a01b039283169285169163d21220a7916004808301926020929190829003018186803b158015611fcc57600080fd5b505afa158015611fe0573d6000803e3d6000fd5b505050506040513d6020811015611ff657600080fd5b50516001600160a01b0316145b806120e95750806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561204257600080fd5b505afa158015612056573d6000803e3d6000fd5b505050506040513d602081101561206c57600080fd5b50516040805163d21220a760e01b815290516001600160a01b039283169285169163d21220a7916004808301926020929190829003018186803b1580156120b257600080fd5b505afa1580156120c6573d6000803e3d6000fd5b505050506040513d60208110156120dc57600080fd5b50516001600160a01b0316145b611ae95760405162461bcd60e51b81526004018080602001828103825260448152602001806127126044913960600191505060405180910390fd5b600080612133843386866117b9565b604080517f89afcb4400000000000000000000000000000000000000000000000000000000815230600482015281516001600160a01b038716926389afcb4492602480820193918290030181600087803b15801561219057600080fd5b505af11580156121a4573d6000803e3d6000fd5b505050506040513d60408110156121ba57600080fd5b508051602090910151909590945092505050565b60008060008060008a6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561220f57600080fd5b505afa158015612223573d6000803e3d6000fd5b505050506040513d606081101561223957600080fd5b5080516020909101519092509050876000612268826dffffffffffffffffffffffffffff808716908616611713565b9050888111156122a3578890506122a089846dffffffffffffffffffffffffffff16866dffffffffffffffffffffffffffff16611713565b91505b6122ae8c8e84611aed565b6122b98b8e83611aed565b818a03965080890395508c6001600160a01b0316636a627842896040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050602060405180830381600087803b15801561231257600080fd5b505af1158015612326573d6000803e3d6000fd5b505050506040513d602081101561233c57600080fd5b5051969d959c50959a509398505050505050505050565b600081158061236e5750508082028282828161236b57fe5b04145b61036d576040805162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000604482015290519081900360640190fdfe4b616c79737761704272696467654d6967726174696f6e526f757465723a20416464726573732030206e6f7420616c6c6f7765644b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72416464726573732030206e6f7420737570706f727465644b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f65736e2774206d6174636820746865206d6967726174696f6e20746f6b656e4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030206e6f7420737570706f727465644b616c79737761704272696467654d6967726174696f6e526f757465723a204469646e2774207969656c642074686520636f727265637420616d6f756e744b616c79737761704272696467654d6967726174696f6e526f757465723a2043616e7420636f6e7665727420746f207468652073616d65206c69717569646974792070616972734b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d206164647265737320304b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030206e6f7420737570706f72746564546865206d69677261746f7220646f65736e27742068617665207377617020737570706c7920666f72207468697320746f6b656e4b616c79737761704272696467654d6967726174696f6e526f757465723a20556e617574686f72697a65644b616c79737761704c6962726172793a20494e53554646494349454e545f414d4f554e54526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734b616c79737761704272696467654d6967726174696f6e526f757465723a20746f6b656e416464726573732030206e6f7420737570706f727465644b616c79737761704272696467654d6967726174696f6e526f757465723a20455850495245444b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f6573206e6f742068617665206f6e6520746f6b656e206d61746368696e674b616c79737761704272696467654d6967726174696f6e526f757465723a204d69677261746f72206e6f74207265676973746572656420666f722074686520706169724b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f206164647265737320304b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72206e6f7420726567697374657265644b616c79737761704272696467654d6967726174696f6e526f757465723a20596f752063616e27742064656d6f746520796f757273656c665472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544a2646970667358221220e376511e4bb29c8d900c4e567b804c838e0fe97cb314621637fe4bcc02cd757a64736f6c63430007060033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2D CALLER PUSH1 0x0 PUSH3 0x33 PUSH1 0x20 SHL PUSH3 0xB75 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x120 JUMP JUMPDEST PUSH3 0x3F DUP3 DUP3 PUSH3 0xB7 JUMP JUMPDEST ISZERO PUSH3 0x92 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x100 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x29C8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2898 DUP1 PUSH3 0x130 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70480275 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xB032FFF7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB032FFF7 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xF057D237 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xFFC50594 EQ PUSH2 0x283 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x70480275 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x99A0DF82 EQ PUSH2 0x1A0 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x1785F53C EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x495952F5 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x4C389D26 EQ PUSH2 0x14C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x373 JUMP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x987 JUMP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x0 CALLER PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25F8 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2807 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35E PUSH1 0x0 DUP3 PUSH2 0xC5D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D DUP2 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 TIMESTAMP DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BF DUP7 DUP7 DUP7 DUP7 PUSH2 0xCC4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 CALLER PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25F8 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B1 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23F4 PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB32DBB7 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25C4 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55A DUP4 DUP4 PUSH2 0x1537 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5AC PUSH1 0x0 CALLER PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25F8 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23C0 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35E PUSH1 0x0 DUP3 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2477 PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x46 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x257E PUSH1 0x46 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6D1 DUP8 DUP7 PUSH2 0x15C0 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP11 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO SWAP1 PUSH2 0x89D JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x809 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP11 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8A4 JUMPI SWAP1 JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP4 PUSH1 0x0 PUSH2 0x939 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP7 AND PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO PUSH2 0x974 JUMPI DUP5 SWAP1 POP PUSH2 0x971 DUP6 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP5 SUB SWAP10 SWAP4 SWAP1 SWAP3 SUB SWAP8 POP SWAP2 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xFF DUP7 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xC4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 PUSH4 0xD505ACCF SWAP2 PUSH1 0xE4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA76 DUP10 DUP10 DUP10 DUP10 PUSH2 0xCC4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 TIMESTAMP DUP2 LT ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27D1 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB23 DUP6 CALLER ADDRESS DUP7 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0xB2D DUP6 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB53 SWAP2 AND DUP6 DUP6 PUSH2 0x1AED JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB7F DUP3 DUP3 PUSH2 0xBF6 JUMP JUMPDEST ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x268F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xC67 DUP3 DUP3 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2647 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCCE DUP5 DUP5 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP9 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF05 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP9 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xF72 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2756 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1016 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x10B6 JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2432 PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10FE DUP9 DUP7 PUSH2 0x2124 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1154 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0x1181 JUMPI POP DUP1 JUMPDEST PUSH2 0x118B DUP6 DUP3 PUSH2 0x193B JUMP JUMPDEST POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP12 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO SWAP1 PUSH2 0x1354 JUMPI POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP12 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x135B JUMPI SWAP1 JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x143B DUP10 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x139B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP8 DUP8 DUP14 PUSH2 0x21CE JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B6 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1497 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP10 DUP5 PUSH2 0x1AED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x152B JUMPI PUSH2 0x152B DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP10 DUP4 PUSH2 0x1AED JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP3 PUSH1 0x0 NOT PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x18160DDD SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x16DA DUP8 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH2 0x2353 JUMP JUMPDEST DUP2 PUSH2 0x16E1 JUMPI INVALID JUMPDEST DIV SWAP5 POP DUP1 PUSH2 0x16FF DUP8 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x2353 JUMP JUMPDEST DUP2 PUSH2 0x1706 JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2623 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1763 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2668 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x17A9 DUP6 DUP5 PUSH2 0x2353 JUMP JUMPDEST DUP2 PUSH2 0x17B0 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP11 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x186B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1900 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1900 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x283F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B1 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0xD004F0F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP4 AND SWAP3 PUSH4 0xD004F0F7 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD DUP7 SWAP6 POP SWAP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ PUSH2 0x1AE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24BF PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1B97 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C2C JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C2C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0xB53 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2544 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2799 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1D58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x47 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24FD PUSH1 0x47 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1F1D JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2003 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x20E9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2056 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1AE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2712 PUSH1 0x44 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2133 DUP5 CALLER DUP7 DUP7 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x89AFCB44 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x220F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP8 PUSH1 0x0 PUSH2 0x2268 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP7 AND PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP DUP9 DUP2 GT ISZERO PUSH2 0x22A3 JUMPI DUP9 SWAP1 POP PUSH2 0x22A0 DUP10 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x22AE DUP13 DUP15 DUP5 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x22B9 DUP12 DUP15 DUP4 PUSH2 0x1AED JUMP JUMPDEST DUP2 DUP11 SUB SWAP7 POP DUP1 DUP10 SUB SWAP6 POP DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A627842 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2326 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x233C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 SWAP14 SWAP6 SWAP13 POP SWAP6 SWAP11 POP SWAP4 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x236E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x236B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x36D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A20416464726573732030206E6F7420616C6C PUSH16 0x7765644B616C79737761704272696467 PUSH6 0x4D6967726174 PUSH10 0x6F6E526F757465723A20 PUSH14 0x69677261746F7241646472657373 KECCAK256 ADDRESS KECCAK256 PUSH15 0x6F7420737570706F727465644B616C PUSH26 0x737761704272696467654D6967726174696F6E526F757465723A KECCAK256 POP PUSH2 0x6972 KECCAK256 PUSH5 0x6F65736E27 PUSH21 0x206D6174636820746865206D6967726174696F6E20 PUSH21 0x6F6B656E4B616C79737761704272696467654D6967 PUSH19 0x6174696F6E526F757465723A206C6971756964 PUSH10 0x74795061697246726F6D KECCAK256 PUSH2 0x6464 PUSH19 0x6573732030206E6F7420737570706F72746564 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A204469646E2774207969656C642074686520 PUSH4 0x6F727265 PUSH4 0x7420616D PUSH16 0x756E744B616C79737761704272696467 PUSH6 0x4D6967726174 PUSH10 0x6F6E526F757465723A20 NUMBER PUSH2 0x6E74 KECCAK256 PUSH4 0x6F6E7665 PUSH19 0x7420746F207468652073616D65206C69717569 PUSH5 0x6974792070 PUSH2 0x6972 PUSH20 0x4B616C79737761704272696467654D6967726174 PUSH10 0x6F6E526F757465723A20 PUSH13 0x69717569646974795061697246 PUSH19 0x6F6D206164647265737320304B616C79737761 PUSH17 0x4272696467654D6967726174696F6E526F PUSH22 0x7465723A206C697175696469747950616972546F2061 PUSH5 0x6472657373 KECCAK256 ADDRESS KECCAK256 PUSH15 0x6F7420737570706F72746564546865 KECCAK256 PUSH14 0x69677261746F7220646F65736E27 PUSH21 0x2068617665207377617020737570706C7920666F72 KECCAK256 PUSH21 0x68697320746F6B656E4B616C797377617042726964 PUSH8 0x654D696772617469 PUSH16 0x6E526F757465723A20556E617574686F PUSH19 0x697A65644B616C79737761704C696272617279 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD MSTORE PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C654B616C797377 PUSH2 0x704C PUSH10 0x62726172793A20494E53 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE MSTORE PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F20616464726573734B616C797377 PUSH2 0x7042 PUSH19 0x696467654D6967726174696F6E526F75746572 GASPRICE KECCAK256 PUSH21 0x6F6B656E416464726573732030206E6F7420737570 PUSH17 0x6F727465644B616C797377617042726964 PUSH8 0x654D696772617469 PUSH16 0x6E526F757465723A2045585049524544 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A205061697220646F6573206E6F7420686176 PUSH6 0x206F6E652074 PUSH16 0x6B656E206D61746368696E674B616C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A204D69677261746F72206E6F742072656769 PUSH20 0x746572656420666F722074686520706169724B61 PUSH13 0x79737761704272696467654D69 PUSH8 0x726174696F6E526F PUSH22 0x7465723A206C697175696469747950616972546F2061 PUSH5 0x6472657373 KECCAK256 ADDRESS 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A206D69677261746F72206E6F742072656769 PUSH20 0x74657265644B616C79737761704272696467654D PUSH10 0x67726174696F6E526F75 PUSH21 0x65723A20596F752063616E27742064656D6F746520 PUSH26 0x6F757273656C665472616E7366657248656C7065723A20545241 0x4E MSTORE8 CHAINID GASLIMIT MSTORE 0x5F CHAINID MSTORE 0x4F 0x4D 0x5F CHAINID COINBASE 0x49 0x4C GASLIMIT DIFFICULTY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 PUSH23 0x511E4BB29C8D900C4E567B804C838E0FE97CB314621637 INVALID 0x4B 0xCC MUL 0xCD PUSH22 0x7A64736F6C63430007060033526F6C65733A20616363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737300000000000000000000000000000000 ",
							"sourceMap": "252:16209:4:-:0;;;449:63;;;;;;;;;;480:25;494:10;480:9;:13;;;;;;:25;;;;:::i;:::-;252:16209;;208:175:7;285:18;289:4;295:7;285:3;:18::i;:::-;284:19;276:63;;;;;-1:-1:-1;;;276:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;349:27:7;372:4;349:27;;;208:175::o;727:228::-;823:4;-1:-1:-1;;;;;851:21:7;;843:68;;;;-1:-1:-1;;;843:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;928:20:7;:11;:20;;;;;;;;;;;;;;;727:228::o;252:16209:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a35760003560e01c80637048027511610076578063b032fff71161005b578063b032fff7146101ef578063f057d23714610247578063ffc5059414610283576100a3565b8063704802751461017a57806399a0df82146101a0576100a3565b80631785f53c146100a857806324d7806c146100d0578063495952f51461010a5780634c389d261461014c575b600080fd5b6100ce600480360360208110156100be57600080fd5b50356001600160a01b03166102c5565b005b6100f6600480360360208110156100e657600080fd5b50356001600160a01b0316610361565b604080519115158252519081900360200190f35b6100ce600480360360a081101561012057600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060800135610373565b6100ce6004803603604081101561016257600080fd5b506001600160a01b03813581169160200135166103c7565b6100ce6004803603602081101561019057600080fd5b50356001600160a01b03166105a1565b6101d6600480360360608110156101b657600080fd5b506001600160a01b03813581169160208101359091169060400135610637565b6040805192835260208301919091528051918290030190f35b6100ce600480360361010081101561020657600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060ff60a0820135169060c08101359060e00135610987565b6100ce6004803603608081101561025d57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610a81565b6102a96004803603602081101561029957600080fd5b50356001600160a01b0316610b5a565b604080516001600160a01b039092168252519081900360200190f35b6102d0600033610bf6565b61030b5760405162461bcd60e51b815260040180806020018281038252602b8152602001806125f8602b913960400191505060405180910390fd5b336001600160a01b03821614156103535760405162461bcd60e51b81526004018080602001828103825260388152602001806128076038913960400191505060405180910390fd5b61035e600082610c5d565b50565b600061036d8183610bf6565b92915050565b80428110156103b35760405162461bcd60e51b81526004018080602001828103825260268152602001806126ec6026913960400191505060405180910390fd5b6103bf86868686610cc4565b505050505050565b6103d2600033610bf6565b61040d5760405162461bcd60e51b815260040180806020018281038252602b8152602001806125f8602b913960400191505060405180910390fd5b6001600160a01b0382166104525760405162461bcd60e51b815260040180806020018281038252603b8152602001806126b1603b913960400191505060405180910390fd5b6001600160a01b0381166104975760405162461bcd60e51b815260040180806020018281038252603e8152602001806123f4603e913960400191505060405180910390fd5b6000816001600160a01b031663ab32dbb7846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d602081101561051057600080fd5b50519050806105505760405162461bcd60e51b81526004018080602001828103825260348152602001806125c46034913960400191505060405180910390fd5b61055a8383611537565b506001600160a01b03918216600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b6105ac600033610bf6565b6105e75760405162461bcd60e51b815260040180806020018281038252602b8152602001806125f8602b913960400191505060405180910390fd5b6001600160a01b03811661062c5760405162461bcd60e51b81526004018080602001828103825260348152602001806123c06034913960400191505060405180910390fd5b61035e600082610b75565b6000806001600160a01b03851661067f5760405162461bcd60e51b81526004018080602001828103825260488152602001806124776048913960600191505060405180910390fd5b6001600160a01b0384166106c45760405162461bcd60e51b815260040180806020018281038252604681526020018061257e6046913960600191505060405180910390fd5b6000806106d187866115c0565b91509150856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561070e57600080fd5b505afa158015610722573d6000803e3d6000fd5b505050506040513d602081101561073857600080fd5b505160408051630dfe168160e01b815290516001600160a01b03928316928a1691630dfe1681916004808301926020929190829003018186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d60208110156107a857600080fd5b50516001600160a01b03161480159061089d5750856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f557600080fd5b505afa158015610809573d6000803e3d6000fd5b505050506040513d602081101561081f57600080fd5b50516040805163d21220a760e01b815290516001600160a01b03928316928a169163d21220a7916004808301926020929190829003018186803b15801561086557600080fd5b505afa158015610879573d6000803e3d6000fd5b505050506040513d602081101561088f57600080fd5b50516001600160a01b031614155b156108a457905b600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156108e057600080fd5b505afa1580156108f4573d6000803e3d6000fd5b505050506040513d606081101561090a57600080fd5b5080516020909101519092509050836000610939826dffffffffffffffffffffffffffff808716908616611713565b9050848111156109745784905061097185846dffffffffffffffffffffffffffff16866dffffffffffffffffffffffffffff16611713565b91505b9403999390920397509195505050505050565b83428110156109c75760405162461bcd60e51b81526004018080602001828103825260268152602001806126ec6026913960400191505060405180910390fd5b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890526064810187905260ff8616608482015260a4810185905260c4810184905290516001600160a01b038b169163d505accf9160e480830192600092919082900301818387803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b50505050610a7689898989610cc4565b505050505050505050565b8042811015610ac15760405162461bcd60e51b81526004018080602001828103825260268152602001806126ec6026913960400191505060405180910390fd5b6001600160a01b0385811660009081526001602052604090205416610b175760405162461bcd60e51b81526004018080602001828103825260368152602001806127d16036913960400191505060405180910390fd5b610b23853330866117b9565b610b2d858461193b565b6001600160a01b03808616600090815260016020526040902054610b5391168585611aed565b5050505050565b6001602052600090815260409020546001600160a01b031681565b610b7f8282610bf6565b15610bd1576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216610c3d5760405162461bcd60e51b815260040180806020018281038252602281526020018061268f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610c678282610bf6565b610ca25760405162461bcd60e51b81526004018080602001828103825260218152602001806126476021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610cce8484611c7d565b6000846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0957600080fd5b505afa158015610d1d573d6000803e3d6000fd5b505050506040513d6020811015610d3357600080fd5b505160408051630dfe168160e01b815290519192506001600160a01b03861691630dfe168191600480820192602092909190829003018186803b158015610d7957600080fd5b505afa158015610d8d573d6000803e3d6000fd5b505050506040513d6020811015610da357600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692881691630dfe1681916004808301926020929190829003018186803b158015610de957600080fd5b505afa158015610dfd573d6000803e3d6000fd5b505050506040513d6020811015610e1357600080fd5b50516001600160a01b03161480610f055750836001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610e5e57600080fd5b505afa158015610e72573d6000803e3d6000fd5b505050506040513d6020811015610e8857600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692881691630dfe1681916004808301926020929190829003018186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d6020811015610ef857600080fd5b50516001600160a01b0316145b15610f7257846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4357600080fd5b505afa158015610f57573d6000803e3d6000fd5b505050506040513d6020811015610f6d57600080fd5b505190505b6001600160a01b038082166000908152600160205260409020541680610fc95760405162461bcd60e51b81526004018080602001828103825260438152602001806127566043913960600191505060405180910390fd5b846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561100257600080fd5b505afa158015611016573d6000803e3d6000fd5b505050506040513d602081101561102c57600080fd5b50516001600160a01b03828116911614806110b65750846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561107b57600080fd5b505afa15801561108f573d6000803e3d6000fd5b505050506040513d60208110156110a557600080fd5b50516001600160a01b038281169116145b6110f15760405162461bcd60e51b81526004018080602001828103825260458152602001806124326045913960600191505060405180910390fd5b6000806110fe8886612124565b915091506000829050886001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561114057600080fd5b505afa158015611154573d6000803e3d6000fd5b505050506040513d602081101561116a57600080fd5b50516001600160a01b038681169116146111815750805b61118b858261193b565b50866001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c557600080fd5b505afa1580156111d9573d6000803e3d6000fd5b505050506040513d60208110156111ef57600080fd5b505160408051630dfe168160e01b815290516001600160a01b03928316928b1691630dfe1681916004808301926020929190829003018186803b15801561123557600080fd5b505afa158015611249573d6000803e3d6000fd5b505050506040513d602081101561125f57600080fd5b50516001600160a01b0316148015906113545750866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ac57600080fd5b505afa1580156112c0573d6000803e3d6000fd5b505050506040513d60208110156112d657600080fd5b50516040805163d21220a760e01b815290516001600160a01b03928316928b169163d21220a7916004808301926020929190829003018186803b15801561131c57600080fd5b505afa158015611330573d6000803e3d6000fd5b505050506040513d602081101561134657600080fd5b50516001600160a01b031614155b1561135b57905b60008061143b898a6001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561139b57600080fd5b505afa1580156113af573d6000803e3d6000fd5b505050506040513d60208110156113c557600080fd5b50516040805163d21220a760e01b815290516001600160a01b038e169163d21220a7916004808301926020929190829003018186803b15801561140757600080fd5b505afa15801561141b573d6000803e3d6000fd5b505050506040513d602081101561143157600080fd5b505187878d6121ce565b50909250905081156114b6576114b6896001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561148357600080fd5b505afa158015611497573d6000803e3d6000fd5b505050506040513d60208110156114ad57600080fd5b50518984611aed565b801561152b5761152b896001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156114f857600080fd5b505afa15801561150c573d6000803e3d6000fd5b505050506040513d602081101561152257600080fd5b50518983611aed565b50505050505050505050565b816001600160a01b031663095ea7b3826000196040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561159057600080fd5b505af11580156115a4573d6000803e3d6000fd5b505050506040513d60208110156115ba57600080fd5b50505050565b600080600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156115ff57600080fd5b505afa158015611613573d6000803e3d6000fd5b505050506040513d606081101561162957600080fd5b508051602091820151604080517f18160ddd00000000000000000000000000000000000000000000000000000000815290519295509093506000926001600160a01b038a16926318160ddd926004808201939291829003018186803b15801561169157600080fd5b505afa1580156116a5573d6000803e3d6000fd5b505050506040513d60208110156116bb57600080fd5b50519050806116da876dffffffffffffffffffffffffffff8616612353565b816116e157fe5b049450806116ff876dffffffffffffffffffffffffffff8516612353565b8161170657fe5b0493505050509250929050565b60008084116117535760405162461bcd60e51b81526004018080602001828103825260248152602001806126236024913960400191505060405180910390fd5b6000831180156117635750600082115b61179e5760405162461bcd60e51b81526004018080602001828103825260278152602001806126686027913960400191505060405180910390fd5b826117a98584612353565b816117b057fe5b04949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b6020831061186b5780518252601f19909201916020918201910161184c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146118cd576040519150601f19603f3d011682016040523d82523d6000602084013e6118d2565b606091505b509150915081801561190057508051158061190057508080602001905160208110156118fd57600080fd5b50515b6103bf5760405162461bcd60e51b815260040180806020018281038252602481526020018061283f6024913960400191505060405180910390fd5b6001600160a01b0382166119805760405162461bcd60e51b815260040180806020018281038252603b8152602001806126b1603b913960400191505060405180910390fd5b6001600160a01b038083166000818152600160205260408082205481517fd004f0f7000000000000000000000000000000000000000000000000000000008152600481019490945260248401869052905193169263d004f0f792604480820193929182900301818387803b1580156119f757600080fd5b505af1158015611a0b573d6000803e3d6000fd5b5050506001600160a01b038084166000908152600160209081526040918290205482517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015292518695509316926370a08231926024808201939291829003018186803b158015611a8157600080fd5b505afa158015611a95573d6000803e3d6000fd5b505050506040513d6020811015611aab57600080fd5b505114611ae95760405162461bcd60e51b815260040180806020018281038252603e8152602001806124bf603e913960400191505060405180910390fd5b5050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611b975780518252601f199092019160209182019101611b78565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611bf9576040519150601f19603f3d011682016040523d82523d6000602084013e611bfe565b606091505b5091509150818015611c2c575080511580611c2c5750808060200190516020811015611c2957600080fd5b50515b610b53576040805162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015290519081900360640190fd5b6001600160a01b038216611cc25760405162461bcd60e51b815260040180806020018281038252603a815260200180612544603a913960400191505060405180910390fd5b6001600160a01b038216611d075760405162461bcd60e51b81526004018080602001828103825260388152602001806127996038913960400191505060405180910390fd5b806001600160a01b0316826001600160a01b03161415611d585760405162461bcd60e51b81526004018080602001828103825260478152602001806124fd6047913960600191505060405180910390fd5b806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015611d9157600080fd5b505afa158015611da5573d6000803e3d6000fd5b505050506040513d6020811015611dbb57600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692851691630dfe1681916004808301926020929190829003018186803b158015611e0157600080fd5b505afa158015611e15573d6000803e3d6000fd5b505050506040513d6020811015611e2b57600080fd5b50516001600160a01b03161480611f1d5750806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015611e7657600080fd5b505afa158015611e8a573d6000803e3d6000fd5b505050506040513d6020811015611ea057600080fd5b505160408051630dfe168160e01b815290516001600160a01b0392831692851691630dfe1681916004808301926020929190829003018186803b158015611ee657600080fd5b505afa158015611efa573d6000803e3d6000fd5b505050506040513d6020811015611f1057600080fd5b50516001600160a01b0316145b806120035750806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015611f5c57600080fd5b505afa158015611f70573d6000803e3d6000fd5b505050506040513d6020811015611f8657600080fd5b50516040805163d21220a760e01b815290516001600160a01b039283169285169163d21220a7916004808301926020929190829003018186803b158015611fcc57600080fd5b505afa158015611fe0573d6000803e3d6000fd5b505050506040513d6020811015611ff657600080fd5b50516001600160a01b0316145b806120e95750806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561204257600080fd5b505afa158015612056573d6000803e3d6000fd5b505050506040513d602081101561206c57600080fd5b50516040805163d21220a760e01b815290516001600160a01b039283169285169163d21220a7916004808301926020929190829003018186803b1580156120b257600080fd5b505afa1580156120c6573d6000803e3d6000fd5b505050506040513d60208110156120dc57600080fd5b50516001600160a01b0316145b611ae95760405162461bcd60e51b81526004018080602001828103825260448152602001806127126044913960600191505060405180910390fd5b600080612133843386866117b9565b604080517f89afcb4400000000000000000000000000000000000000000000000000000000815230600482015281516001600160a01b038716926389afcb4492602480820193918290030181600087803b15801561219057600080fd5b505af11580156121a4573d6000803e3d6000fd5b505050506040513d60408110156121ba57600080fd5b508051602090910151909590945092505050565b60008060008060008a6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561220f57600080fd5b505afa158015612223573d6000803e3d6000fd5b505050506040513d606081101561223957600080fd5b5080516020909101519092509050876000612268826dffffffffffffffffffffffffffff808716908616611713565b9050888111156122a3578890506122a089846dffffffffffffffffffffffffffff16866dffffffffffffffffffffffffffff16611713565b91505b6122ae8c8e84611aed565b6122b98b8e83611aed565b818a03965080890395508c6001600160a01b0316636a627842896040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050602060405180830381600087803b15801561231257600080fd5b505af1158015612326573d6000803e3d6000fd5b505050506040513d602081101561233c57600080fd5b5051969d959c50959a509398505050505050505050565b600081158061236e5750508082028282828161236b57fe5b04145b61036d576040805162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000604482015290519081900360640190fdfe4b616c79737761704272696467654d6967726174696f6e526f757465723a20416464726573732030206e6f7420616c6c6f7765644b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72416464726573732030206e6f7420737570706f727465644b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f65736e2774206d6174636820746865206d6967726174696f6e20746f6b656e4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030206e6f7420737570706f727465644b616c79737761704272696467654d6967726174696f6e526f757465723a204469646e2774207969656c642074686520636f727265637420616d6f756e744b616c79737761704272696467654d6967726174696f6e526f757465723a2043616e7420636f6e7665727420746f207468652073616d65206c69717569646974792070616972734b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d206164647265737320304b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030206e6f7420737570706f72746564546865206d69677261746f7220646f65736e27742068617665207377617020737570706c7920666f72207468697320746f6b656e4b616c79737761704272696467654d6967726174696f6e526f757465723a20556e617574686f72697a65644b616c79737761704c6962726172793a20494e53554646494349454e545f414d4f554e54526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734b616c79737761704272696467654d6967726174696f6e526f757465723a20746f6b656e416464726573732030206e6f7420737570706f727465644b616c79737761704272696467654d6967726174696f6e526f757465723a20455850495245444b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f6573206e6f742068617665206f6e6520746f6b656e206d61746368696e674b616c79737761704272696467654d6967726174696f6e526f757465723a204d69677261746f72206e6f74207265676973746572656420666f722074686520706169724b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f206164647265737320304b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72206e6f7420726567697374657265644b616c79737761704272696467654d6967726174696f6e526f757465723a20596f752063616e27742064656d6f746520796f757273656c665472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544a2646970667358221220e376511e4bb29c8d900c4e567b804c838e0fe97cb314621637fe4bcc02cd757a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70480275 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xB032FFF7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB032FFF7 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xF057D237 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xFFC50594 EQ PUSH2 0x283 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x70480275 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x99A0DF82 EQ PUSH2 0x1A0 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x1785F53C EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x495952F5 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x4C389D26 EQ PUSH2 0x14C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x373 JUMP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x987 JUMP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x0 CALLER PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25F8 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2807 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35E PUSH1 0x0 DUP3 PUSH2 0xC5D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D DUP2 DUP4 PUSH2 0xBF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 TIMESTAMP DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BF DUP7 DUP7 DUP7 DUP7 PUSH2 0xCC4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 CALLER PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25F8 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B1 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23F4 PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB32DBB7 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25C4 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55A DUP4 DUP4 PUSH2 0x1537 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5AC PUSH1 0x0 CALLER PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25F8 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23C0 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35E PUSH1 0x0 DUP3 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2477 PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x46 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x257E PUSH1 0x46 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6D1 DUP8 DUP7 PUSH2 0x15C0 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP11 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO SWAP1 PUSH2 0x89D JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x809 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP11 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8A4 JUMPI SWAP1 JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP4 PUSH1 0x0 PUSH2 0x939 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP7 AND PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO PUSH2 0x974 JUMPI DUP5 SWAP1 POP PUSH2 0x971 DUP6 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP5 SUB SWAP10 SWAP4 SWAP1 SWAP3 SUB SWAP8 POP SWAP2 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xFF DUP7 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xC4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 PUSH4 0xD505ACCF SWAP2 PUSH1 0xE4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA76 DUP10 DUP10 DUP10 DUP10 PUSH2 0xCC4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 TIMESTAMP DUP2 LT ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27D1 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB23 DUP6 CALLER ADDRESS DUP7 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0xB2D DUP6 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB53 SWAP2 AND DUP6 DUP6 PUSH2 0x1AED JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB7F DUP3 DUP3 PUSH2 0xBF6 JUMP JUMPDEST ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x268F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xC67 DUP3 DUP3 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2647 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCCE DUP5 DUP5 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP9 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF05 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP9 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xF72 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2756 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1016 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x10B6 JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2432 PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10FE DUP9 DUP7 PUSH2 0x2124 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1154 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0x1181 JUMPI POP DUP1 JUMPDEST PUSH2 0x118B DUP6 DUP3 PUSH2 0x193B JUMP JUMPDEST POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP12 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO SWAP1 PUSH2 0x1354 JUMPI POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP12 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x135B JUMPI SWAP1 JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x143B DUP10 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x139B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP8 DUP8 DUP14 PUSH2 0x21CE JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B6 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1497 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP10 DUP5 PUSH2 0x1AED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x152B JUMPI PUSH2 0x152B DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP10 DUP4 PUSH2 0x1AED JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP3 PUSH1 0x0 NOT PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x18160DDD SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x16DA DUP8 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH2 0x2353 JUMP JUMPDEST DUP2 PUSH2 0x16E1 JUMPI INVALID JUMPDEST DIV SWAP5 POP DUP1 PUSH2 0x16FF DUP8 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x2353 JUMP JUMPDEST DUP2 PUSH2 0x1706 JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2623 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1763 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2668 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x17A9 DUP6 DUP5 PUSH2 0x2353 JUMP JUMPDEST DUP2 PUSH2 0x17B0 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP11 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x186B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1900 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1900 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x283F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B1 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0xD004F0F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP4 AND SWAP3 PUSH4 0xD004F0F7 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD DUP7 SWAP6 POP SWAP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ PUSH2 0x1AE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24BF PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1B97 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C2C JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C2C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0xB53 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2544 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2799 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1D58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x47 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24FD PUSH1 0x47 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1F1D JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2003 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x20E9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2056 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1AE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2712 PUSH1 0x44 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2133 DUP5 CALLER DUP7 DUP7 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x89AFCB44 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x220F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP8 PUSH1 0x0 PUSH2 0x2268 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP7 AND PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP DUP9 DUP2 GT ISZERO PUSH2 0x22A3 JUMPI DUP9 SWAP1 POP PUSH2 0x22A0 DUP10 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x22AE DUP13 DUP15 DUP5 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x22B9 DUP12 DUP15 DUP4 PUSH2 0x1AED JUMP JUMPDEST DUP2 DUP11 SUB SWAP7 POP DUP1 DUP10 SUB SWAP6 POP DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A627842 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2326 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x233C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 SWAP14 SWAP6 SWAP13 POP SWAP6 SWAP11 POP SWAP4 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x236E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x236B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x36D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A20416464726573732030206E6F7420616C6C PUSH16 0x7765644B616C79737761704272696467 PUSH6 0x4D6967726174 PUSH10 0x6F6E526F757465723A20 PUSH14 0x69677261746F7241646472657373 KECCAK256 ADDRESS KECCAK256 PUSH15 0x6F7420737570706F727465644B616C PUSH26 0x737761704272696467654D6967726174696F6E526F757465723A KECCAK256 POP PUSH2 0x6972 KECCAK256 PUSH5 0x6F65736E27 PUSH21 0x206D6174636820746865206D6967726174696F6E20 PUSH21 0x6F6B656E4B616C79737761704272696467654D6967 PUSH19 0x6174696F6E526F757465723A206C6971756964 PUSH10 0x74795061697246726F6D KECCAK256 PUSH2 0x6464 PUSH19 0x6573732030206E6F7420737570706F72746564 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A204469646E2774207969656C642074686520 PUSH4 0x6F727265 PUSH4 0x7420616D PUSH16 0x756E744B616C79737761704272696467 PUSH6 0x4D6967726174 PUSH10 0x6F6E526F757465723A20 NUMBER PUSH2 0x6E74 KECCAK256 PUSH4 0x6F6E7665 PUSH19 0x7420746F207468652073616D65206C69717569 PUSH5 0x6974792070 PUSH2 0x6972 PUSH20 0x4B616C79737761704272696467654D6967726174 PUSH10 0x6F6E526F757465723A20 PUSH13 0x69717569646974795061697246 PUSH19 0x6F6D206164647265737320304B616C79737761 PUSH17 0x4272696467654D6967726174696F6E526F PUSH22 0x7465723A206C697175696469747950616972546F2061 PUSH5 0x6472657373 KECCAK256 ADDRESS KECCAK256 PUSH15 0x6F7420737570706F72746564546865 KECCAK256 PUSH14 0x69677261746F7220646F65736E27 PUSH21 0x2068617665207377617020737570706C7920666F72 KECCAK256 PUSH21 0x68697320746F6B656E4B616C797377617042726964 PUSH8 0x654D696772617469 PUSH16 0x6E526F757465723A20556E617574686F PUSH19 0x697A65644B616C79737761704C696272617279 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD MSTORE PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C654B616C797377 PUSH2 0x704C PUSH10 0x62726172793A20494E53 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE MSTORE PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F20616464726573734B616C797377 PUSH2 0x7042 PUSH19 0x696467654D6967726174696F6E526F75746572 GASPRICE KECCAK256 PUSH21 0x6F6B656E416464726573732030206E6F7420737570 PUSH17 0x6F727465644B616C797377617042726964 PUSH8 0x654D696772617469 PUSH16 0x6E526F757465723A2045585049524544 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A205061697220646F6573206E6F7420686176 PUSH6 0x206F6E652074 PUSH16 0x6B656E206D61746368696E674B616C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A204D69677261746F72206E6F742072656769 PUSH20 0x746572656420666F722074686520706169724B61 PUSH13 0x79737761704272696467654D69 PUSH8 0x726174696F6E526F PUSH22 0x7465723A206C697175696469747950616972546F2061 PUSH5 0x6472657373 KECCAK256 ADDRESS 0x4B PUSH2 0x6C79 PUSH20 0x7761704272696467654D6967726174696F6E526F PUSH22 0x7465723A206D69677261746F72206E6F742072656769 PUSH20 0x74657265644B616C79737761704272696467654D PUSH10 0x67726174696F6E526F75 PUSH21 0x65723A20596F752063616E27742064656D6F746520 PUSH26 0x6F757273656C665472616E7366657248656C7065723A20545241 0x4E MSTORE8 CHAINID GASLIMIT MSTORE 0x5F CHAINID MSTORE 0x4F 0x4D 0x5F CHAINID COINBASE 0x49 0x4C GASLIMIT DIFFICULTY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 PUSH23 0x511E4BB29C8D900C4E567B804C838E0FE97CB314621637 INVALID 0x4B 0xCC MUL 0xCD PUSH22 0x7A64736F6C6343000706003300000000000000000000 ",
							"sourceMap": "252:16209:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1539:199;;;;;;;;;;;;;;;;-1:-1:-1;1539:199:4;-1:-1:-1;;;;;1539:199:4;;:::i;:::-;;1951:108;;;;;;;;;;;;;;;;-1:-1:-1;1951:108:4;-1:-1:-1;;;;;1951:108:4;;:::i;:::-;;;;;;;;;;;;;;;;;;10602:330;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10602:330:4;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2366:624::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2366:624:4;;;;;;;;;;:::i;1138:189::-;;;;;;;;;;;;;;;;-1:-1:-1;1138:189:4;-1:-1:-1;;;;;1138:189:4;;:::i;15221:1237::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15221:1237:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9554:482;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9554:482:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8393:487::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8393:487:4;;;;;;;;;;;;;;;;;;;;;;:::i;393:49::-;;;;;;;;;;;;;;;;-1:-1:-1;393:49:4;-1:-1:-1;;;;;393:49:4;;:::i;:::-;;;;-1:-1:-1;;;;;393:49:4;;;;;;;;;;;;;;1539:199;835:25;:9;849:10;835:13;:25::i;:::-;827:81;;;;-1:-1:-1;;;827:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:10:::1;-1:-1:-1::0;;;;;1614:21:4;::::1;;;1606:90;;;;-1:-1:-1::0;;;1606:90:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:25;:9;1723:7:::0;1706:16:::1;:25::i;:::-;1539:199:::0;:::o;1951:108::-;2007:4;2030:22;2007:4;2044:7;2030:13;:22::i;:::-;2023:29;1951:108;-1:-1:-1;;1951:108:4:o;10602:330::-;10782:8;649:15;637:8;:27;;629:78;;;;-1:-1:-1;;;629:78:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10802:123:::1;10833:17;10864:15;10893:2;10909:6;10802:17;:123::i;:::-;10602:330:::0;;;;;;:::o;2366:624::-;835:25;:9;849:10;835:13;:25::i;:::-;827:81;;;;-1:-1:-1;;;827:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2471:26:4;::::1;2463:98;;;;-1:-1:-1::0;;;2463:98:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2579:29:4;::::1;2571:104;;;;-1:-1:-1::0;;;2571:104:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2685:14;2715:15;-1:-1:-1::0;;;;;2702:40:4::1;;2743:12;2702:54;;;;;;;;;;;;;-1:-1:-1::0;;;;;2702:54:4::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2702:54:4;;-1:-1:-1;2787:10:4;2766:109:::1;;;;-1:-1:-1::0;;;2766:109:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2885:42;2897:12;2911:15;2885:11;:42::i;:::-;-1:-1:-1::0;;;;;;2937:28:4;;::::1;;::::0;;;:14:::1;:28;::::0;;;;:46;;;::::1;::::0;;;::::1;;::::0;;2366:624::o;1138:189::-;835:25;:9;849:10;835:13;:25::i;:::-;827:81;;;;-1:-1:-1;;;827:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1210:21:4;::::1;1202:86;;;;-1:-1:-1::0;;;1202:86:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:22;:9;1312:7:::0;1298:13:::1;:22::i;15221:1237::-:0;15368:12;;-1:-1:-1;;;;;15414:31:4;;15406:116;;;;-1:-1:-1;;;15406:116:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15540:29:4;;15532:112;;;;-1:-1:-1;;;15532:112:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15655:14;15671;15689:52;15715:17;15734:6;15689:25;:52::i;:::-;15654:87;;;;15814:15;-1:-1:-1;;;;;15800:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15800:39:4;15755:41;;;-1:-1:-1;;;15755:41:4;;;;-1:-1:-1;;;;;15755:84:4;;;;:39;;;;;:41;;;;;15800:39;;15755:41;;;;;;;:39;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15755:41:4;-1:-1:-1;;;;;15755:84:4;;;;;:184;;;15914:15;-1:-1:-1;;;;;15900:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15900:39:4;15855:41;;;-1:-1:-1;;;15855:41:4;;;;-1:-1:-1;;;;;15855:84:4;;;;:39;;;;;:41;;;;;15900:39;;15855:41;;;;;;;:39;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15855:41:4;-1:-1:-1;;;;;15855:84:4;;;15755:184;15751:271;;;15990:9;15751:271;16032:16;16050;16085:15;-1:-1:-1;;;;;16071:42:4;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16071:44:4;;;;;;;;;-1:-1:-1;16071:44:4;-1:-1:-1;16139:9:4;16125:11;16172:52;16139:9;16172:52;;;;;;;:21;:52::i;:::-;16158:66;;16247:9;16238:6;:18;16234:142;;;16281:9;16272:18;;16313:52;16335:9;16346:8;16313:52;;16356:8;16313:52;;:21;:52::i;:::-;16304:61;;16234:142;16395:18;;;16433;;;;;-1:-1:-1;15221:1237:4;;-1:-1:-1;;;;;;15221:1237:4:o;9554:482::-;9783:8;649:15;637:8;:27;;629:78;;;;-1:-1:-1;;;629:78:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9803:93:::1;::::0;;;;;9843:10:::1;9803:93;::::0;::::1;::::0;9863:4:::1;9803:93:::0;;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9803:39:4;::::1;::::0;::::1;::::0;:93;;;;;-1:-1:-1;;9803:93:4;;;;;;;-1:-1:-1;9803:39:4;:93;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9906:123;9937:17;9968:15;9997:2;10013:6;9906:17;:123::i;:::-;9554:482:::0;;;;;;;;;:::o;8393:487::-;8524:8;649:15;637:8;:27;;629:78;;;;-1:-1:-1;;;629:78:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8565:21:4;;::::1;8598:1;8565:21:::0;;;:14:::1;:21;::::0;;;;;::::1;8544:136;;;;-1:-1:-1::0;;;8544:136:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8690:73;8722:5;8729:10;8749:4;8756:6;8690:31;:73::i;:::-;8773:28;8787:5;8794:6;8773:13;:28::i;:::-;-1:-1:-1::0;;;;;8839:21:4;;::::1;;::::0;;;:14:::1;:21;::::0;;;;;8811:62:::1;::::0;8839:21:::1;8862:2:::0;8866:6;8811:27:::1;:62::i;:::-;8393:487:::0;;;;;:::o;393:49::-;;;;;;;;;;;;-1:-1:-1;;;;;393:49:4;;:::o;208:175:7:-;285:18;289:4;295:7;285:3;:18::i;:::-;284:19;276:63;;;;;-1:-1:-1;;;276:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;349:27:7;372:4;349:27;;;208:175::o;727:228::-;823:4;-1:-1:-1;;;;;851:21:7;;843:68;;;;-1:-1:-1;;;843:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;928:20:7;:11;:20;;;;;;;;;;;;;;;727:228::o;458:180::-;537:18;541:4;547:7;537:3;:18::i;:::-;529:64;;;;-1:-1:-1;;;529:64:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;603:20:7;626:5;603:20;;;;;;;;;;;:28;;-1:-1:-1;;603:28:7;;;458:180::o;11410:2262:4:-;11571:55;11591:17;11610:15;11571:19;:55::i;:::-;11636:22;11675:17;-1:-1:-1;;;;;11661:39:4;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11661:41:4;11774:39;;;-1:-1:-1;;;11774:39:4;;;;11661:41;;-1:-1:-1;;;;;;11774:37:4;;;;;:39;;;;;11661:41;;11774:39;;;;;;;;:37;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11774:39:4;11729:41;;;-1:-1:-1;;;11729:41:4;;;;-1:-1:-1;;;;;11729:84:4;;;;:39;;;;;:41;;;;;11774:39;;11729:41;;;;;;;:39;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11729:41:4;-1:-1:-1;;;;;11729:84:4;;;:184;;;11888:15;-1:-1:-1;;;;;11874:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11874:39:4;11829:41;;;-1:-1:-1;;;11829:41:4;;;;-1:-1:-1;;;;;11829:84:4;;;;:39;;;;;:41;;;;;11874:39;;11829:41;;;;;;;:39;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11829:41:4;-1:-1:-1;;;;;11829:84:4;;11729:184;11712:295;;;11969:17;-1:-1:-1;;;;;11955:39:4;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11955:41:4;;-1:-1:-1;11712:295:4;-1:-1:-1;;;;;12042:30:4;;;12016:23;12042:30;;;:14;:30;;;;;;;12103:29;12082:143;;;;-1:-1:-1;;;12082:143:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12289:15;-1:-1:-1;;;;;12275:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12275:39:4;-1:-1:-1;;;;;12256:58:4;;;;;;;:132;;;12363:15;-1:-1:-1;;;;;12349:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12349:39:4;-1:-1:-1;;;;;12330:58:4;;;;;;12256:132;12235:248;;;;-1:-1:-1;;;12235:248:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12495:17;12514;12535:43;12552:17;12571:6;12535:16;:43::i;:::-;12494:84;;;;12602:17;12622:12;12602:32;;12684:17;-1:-1:-1;;;;;12670:39:4;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12670:41:4;-1:-1:-1;;;;;12652:59:4;;;;;;12648:125;;-1:-1:-1;12746:12:4;12648:125;12786:43;12800:14;12816:12;12786:13;:43::i;:::-;11410:2262;12912:15;-1:-1:-1;;;;;12898:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12898:39:4;12853:41;;;-1:-1:-1;;;12853:41:4;;;;-1:-1:-1;;;;;12853:84:4;;;;:39;;;;;:41;;;;;12898:39;;12853:41;;;;;;;:39;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12853:41:4;-1:-1:-1;;;;;12853:84:4;;;;;:184;;;13012:15;-1:-1:-1;;;;;12998:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12998:39:4;12953:41;;;-1:-1:-1;;;12953:41:4;;;;-1:-1:-1;;;;;12953:84:4;;;;:39;;;;;:41;;;;;12998:39;;12953:41;;;;;;;:39;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12953:41:4;-1:-1:-1;;;;;12953:84:4;;;12853:184;12849:283;;;13094:12;12849:283;13143:18;13163;13187:190;13214:15;13257;-1:-1:-1;;;;;13243:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13243:39:4;13284;;;-1:-1:-1;;;13284:39:4;;;;-1:-1:-1;;;;;13284:37:4;;;;;:39;;;;;13243;;13284;;;;;;;:37;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13284:39:4;13337:12;13351;13365:2;13187:13;:190::i;:::-;-1:-1:-1;13142:235:4;;-1:-1:-1;13142:235:4;-1:-1:-1;13391:17:4;;13387:135;;13424:87;13466:15;-1:-1:-1;;;;;13452:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13452:39:4;13493:2;13497:13;13424:27;:87::i;:::-;13535:17;;13531:135;;13568:87;13610:15;-1:-1:-1;;;;;13596:37:4;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13596:39:4;13637:2;13641:13;13568:27;:87::i;:::-;11410:2262;;;;;;;;;;:::o;3257:161::-;3358:12;-1:-1:-1;;;;;3343:36:4;;3380:14;-1:-1:-1;;3343:68:4;;;;;;;;;;;;;-1:-1:-1;;;;;3343:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3257:161:4:o;14220:399::-;14312:12;14326;14351:17;14370;14407:11;-1:-1:-1;;;;;14393:38:4;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14393:40:4;;;;;;;;14462;;;;;;;14393;;-1:-1:-1;14393:40:4;;-1:-1:-1;14443:16:4;;-1:-1:-1;;;;;14462:38:4;;;;;:40;;;;;14393;14462;;;;;;:38;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14462:40:4;;-1:-1:-1;14462:40:4;14522:21;:6;:21;;;:10;:21::i;:::-;:35;;;;;;;-1:-1:-1;14601:11:4;14577:21;:6;:21;;;:10;:21::i;:::-;:35;;;;;;14567:45;;14220:399;;;;;;;;:::o;1787:315:6:-;1869:12;1911:1;1901:7;:11;1893:60;;;;-1:-1:-1;;;1893:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1982:1;1971:8;:12;:28;;;;;1998:1;1987:8;:12;1971:28;1963:80;;;;-1:-1:-1;;;1963:80:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:8;2063:21;:7;2075:8;2063:11;:21::i;:::-;:32;;;;;;;1787:315;-1:-1:-1;;;;1787:315:6:o;1001:439:3:-;1265:51;;;-1:-1:-1;;;;;1265:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1254:63;;;;1219:12;;;;1254:10;;;;1265:51;1254:63;;;1265:51;1254:63;;1265:51;1254:63;;;;;;;;;;-1:-1:-1;;1254:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:99;;;;1335:7;:57;;;;-1:-1:-1;1347:11:3;;:16;;:44;;;1378:4;1367:24;;;;;;;;;;;;;;;-1:-1:-1;1367:24:3;1347:44;1327:106;;;;-1:-1:-1;;;1327:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7495:479:4;-1:-1:-1;;;;;7602:26:4;;7594:98;;;;-1:-1:-1;;;7594:98:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7715:28:4;;;;;;;:14;:28;;;;;;;7702:69;;;;;;;;;;;;;;;;;;;;7715:28;;;7702:47;;:69;;;;;7715:28;7702:69;;;;;;7715:28;;7702:69;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;7815:28:4;;;;;;;:14;:28;;;;;;;;;;7802:67;;;;;7863:4;7802:67;;;;;;7873:6;;-1:-1:-1;7815:28:4;;;7802:52;;:67;;;;;7815:28;7802:67;;;;;;7815:28;7802:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7802:67:4;:77;7781:186;;;;-1:-1:-1;;;7781:186:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7495:479;;:::o;605:390:3:-;831:45;;;-1:-1:-1;;;;;831:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:57;;;;785:12;;;;820:10;;;;831:45;820:57;;;831:45;820:57;;831:45;820:57;;;;;;;;;;-1:-1:-1;;820:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:93;;;;895:7;:57;;;;-1:-1:-1;907:11:3;;:16;;:44;;;938:4;927:24;;;;;;;;;;;;;;;-1:-1:-1;927:24:3;907:44;887:101;;;;;-1:-1:-1;;;887:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;6348:807:4;-1:-1:-1;;;;;6439:19:4;;6431:90;;;;-1:-1:-1;;;6431:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6539:19:4;;6531:88;;;;-1:-1:-1;;;6531:88:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6646:5;-1:-1:-1;;;;;6637:14:4;:5;-1:-1:-1;;;;;6637:14:4;;;6629:98;;;;-1:-1:-1;;;6629:98:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6805:5;-1:-1:-1;;;;;6791:27:4;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6791:29:4;6758;;;-1:-1:-1;;;6758:29:4;;;;-1:-1:-1;;;;;6758:62:4;;;;:27;;;;;:29;;;;;6791;;6758;;;;;;;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6758:29:4;-1:-1:-1;;;;;6758:62:4;;;:140;;;6883:5;-1:-1:-1;;;;;6869:27:4;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6869:29:4;6836;;;-1:-1:-1;;;6836:29:4;;;;-1:-1:-1;;;;;6836:62:4;;;;:27;;;;;:29;;;;;6869;;6836;;;;;;;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6836:29:4;-1:-1:-1;;;;;6836:62:4;;6758:140;:218;;;;6961:5;-1:-1:-1;;;;;6947:27:4;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6947:29:4;6914;;;-1:-1:-1;;;6914:29:4;;;;-1:-1:-1;;;;;6914:62:4;;;;:27;;;;;:29;;;;;6947;;6914;;;;;;;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6914:29:4;-1:-1:-1;;;;;6914:62:4;;6758:218;:296;;;;7039:5;-1:-1:-1;;;;;7025:27:4;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7025:29:4;6992;;;-1:-1:-1;;;6992:29:4;;;;-1:-1:-1;;;;;6992:62:4;;;;:27;;;;;:29;;;;;7025;;6992;;;;;;;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6992:29:4;-1:-1:-1;;;;;6992:62:4;;6758:296;6737:411;;;;-1:-1:-1;;;6737:411:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5645:327;5747:17;5766;5795:81;5827:13;5842:10;5854:13;5869:6;5795:31;:81::i;:::-;5917:48;;;;;;5959:4;5917:48;;;;;;-1:-1:-1;;;;;5917:33:4;;;;;:48;;;;;;;;;;;-1:-1:-1;5917:33:4;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5917:48:4;;;;;;;;;;;-1:-1:-1;5645:327:4;-1:-1:-1;;;5645:327:4:o;4239:859::-;4428:12;4442;4456:20;4489:16;4507;4542:9;-1:-1:-1;;;;;4528:36:4;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4528:38:4;;;;;;;;;-1:-1:-1;4528:38:4;-1:-1:-1;4590:9:4;4576:11;4623:52;4590:9;4623:52;;;;;;;:21;:52::i;:::-;4609:66;;4698:9;4689:6;:18;4685:142;;;4732:9;4723:18;;4764:52;4786:9;4797:8;4764:52;;4807:8;4764:52;;:21;:52::i;:::-;4755:61;;4685:142;4836:54;4864:6;4872:9;4883:6;4836:27;:54::i;:::-;4900;4928:6;4936:9;4947:6;4900:27;:54::i;:::-;4986:6;4974:9;:18;4964:28;;5024:6;5012:9;:18;5002:28;;5072:9;-1:-1:-1;;;;;5058:29:4;;5088:2;5058:33;;;;;;;;;;;;;-1:-1:-1;;;;;5058:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5058:33:4;4239:859;;;;-1:-1:-1;5058:33:4;;-1:-1:-1;4239:859:4;;-1:-1:-1;;;;;;;;;4239:859:4:o;427:140:8:-;479:6;505;;;:30;;-1:-1:-1;;520:5:8;;;534:1;529;520:5;529:1;515:15;;;;;:20;505:30;497:63;;;;;-1:-1:-1;;;497:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2078400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAdmin(address)": "infinite",
								"addMigrator(address,address)": "infinite",
								"bridgeMigrator(address)": "1229",
								"calculateChargeBack(address,address,uint256)": "infinite",
								"isAdmin(address)": "infinite",
								"migrateLiquidity(address,address,address,uint256,uint256)": "infinite",
								"migrateLiquidityWithPermit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"migrateToken(address,address,uint256,uint256)": "infinite",
								"removeAdmin(address)": "infinite"
							},
							"internal": {
								"_addLiquidity(address,address,address,uint256,uint256,address)": "infinite",
								"_allowToken(address,address)": "infinite",
								"_arePairsCompatible(address,address)": "infinite",
								"_calculateRescueLiquidity(address,uint256)": "infinite",
								"_migrateLiquidity(address,address,address,uint256)": "infinite",
								"_migrateToken(address,uint256)": "infinite",
								"_rescueLiquidity(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 512,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 512,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 449,
									"end": 512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 480,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 494,
									"end": 504,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 480,
									"end": 489,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 480,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 480,
									"end": 493,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 480,
									"end": 493,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 480,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551657"
								},
								{
									"begin": 480,
									"end": 493,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 480,
									"end": 493,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 480,
									"end": 505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 480,
									"end": 505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 480,
									"end": 505,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 480,
									"end": 505,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 480,
									"end": 505,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 480,
									"end": 505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 208,
									"end": 383,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 208,
									"end": 383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 285,
									"end": 303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 289,
									"end": 293,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 295,
									"end": 302,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 285,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 285,
									"end": 303,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 285,
									"end": 303,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 285,
									"end": 303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 284,
									"end": 303,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 276,
									"end": 339,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 276,
									"end": 339,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 276,
									"end": 339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 349,
									"end": 369,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 349,
									"end": 360,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 369,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 349,
									"end": 369,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 369,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 369,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 349,
									"end": 376,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 376,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 349,
									"end": 376,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 372,
									"end": 376,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 376,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 349,
									"end": 376,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 376,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 208,
									"end": 383,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 727,
									"end": 955,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 727,
									"end": 955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 851,
									"end": 872,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 851,
									"end": 872,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH data",
									"source": 7,
									"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 843,
									"end": 911,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 843,
									"end": 911,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 928,
									"end": 948,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 928,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 928,
									"end": 948,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 928,
									"end": 948,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 727,
									"end": 955,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 16461,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e376511e4bb29c8d900c4e567b804c838e0fe97cb314621637fe4bcc02cd757a64736f6c63430007060033",
									".code": [
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "70480275"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "B032FFF7"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "B032FFF7"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "F057D237"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "FFC50594"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "70480275"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "99A0DF82"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "1785F53C"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "24D7806C"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "495952F5"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "4C389D26"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 16461,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 393,
											"end": 442,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 393,
											"end": 442,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 859,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 835,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH data",
											"source": 4,
											"value": "72BF313591CEDDF754CA6A5C3BB1BCE298C6AD13C15C3E899581C1B7DF075C21"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1624,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1614,
											"end": 1635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1635,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1635,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1635,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH data",
											"source": 4,
											"value": "E6C3CBC1B9CC3350F2DEFB4ADD44202BF98DE183D551D772BA5896F5BB0D10CC"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1606,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1706,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1706,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1706,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1706,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1738,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2051,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2052,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 2059,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10782,
											"end": 10790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 649,
											"end": 664,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 637,
											"end": 664,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 637,
											"end": 664,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH data",
											"source": 4,
											"value": "AB411B16B48C0DFC5A303ED96B1803938C6E2D0701B8085498DE3B758CA25A98"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10802,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 10833,
											"end": 10850,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10864,
											"end": 10879,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10893,
											"end": 10895,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10802,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10802,
											"end": 10925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10802,
											"end": 10925,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 10802,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 859,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 835,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH data",
											"source": 4,
											"value": "72BF313591CEDDF754CA6A5C3BB1BCE298C6AD13C15C3E899581C1B7DF075C21"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH data",
											"source": 4,
											"value": "9D984E50F0A68E3B3B3F36266BDB577070EDFB604F683A0D41F604C350418D44"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2463,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2608,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "3E"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH data",
											"source": 4,
											"value": "1C7C659B1AE1B6657F6277780E3B866D18DE2AE7BDB0795C710A1378DEB7C207"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "3E"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "AB32DBB7"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2787,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH data",
											"source": 4,
											"value": "67DE629378F206179EF1573EEB90ADA9B246D75587B16D0D1D34653B7FB2DB45"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2885,
											"end": 2927,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2885,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2951,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2990,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1138,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 859,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 835,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 835,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH data",
											"source": 4,
											"value": "72BF313591CEDDF754CA6A5C3BB1BCE298C6AD13C15C3E899581C1B7DF075C21"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 908,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH data",
											"source": 4,
											"value": "5CF0A3569A15A3C6D55134BC83C6E310486FC5D86C57FE969396F1673709115"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1202,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1319,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15368,
											"end": 15380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15368,
											"end": 15380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15414,
											"end": 15445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15414,
											"end": 15445,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH data",
											"source": 4,
											"value": "200248FC6CA52A59603938CDA7204781CE09D1BFBAB0DED816A7DA12334C83D7"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 15406,
											"end": 15522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15540,
											"end": 15569,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15540,
											"end": 15569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH data",
											"source": 4,
											"value": "55B0696D49F993EB1ACE324D5663BB2FCAF6A2E9ADF7D970B2AA88F8E8484C73"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 15532,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15655,
											"end": 15669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15671,
											"end": 15685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15689,
											"end": 15741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 15715,
											"end": 15732,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15734,
											"end": 15740,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15689,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 15689,
											"end": 15741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15689,
											"end": 15741,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 15689,
											"end": 15741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15654,
											"end": 15741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15654,
											"end": 15741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15654,
											"end": 15741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15654,
											"end": 15741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15814,
											"end": 15829,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15800,
											"end": 15837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15837,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15794,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15794,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15794,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 15755,
											"end": 15794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15800,
											"end": 15839,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15794,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15755,
											"end": 15796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 15755,
											"end": 15939,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15914,
											"end": 15929,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15937,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D21220A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15900,
											"end": 15939,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15755,
											"end": 15939,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 15755,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 16022,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 16022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 15751,
											"end": 16022,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15990,
											"end": 15999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 16022,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 15751,
											"end": 16022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16032,
											"end": 16048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16066,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16085,
											"end": 16100,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16071,
											"end": 16113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16113,
											"name": "PUSH",
											"source": 4,
											"value": "902F1AC"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16071,
											"end": 16115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16139,
											"end": 16148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16125,
											"end": 16136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 16139,
											"end": 16148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16172,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 16172,
											"end": 16224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16158,
											"end": 16224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16158,
											"end": 16224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16247,
											"end": 16256,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16238,
											"end": 16244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16238,
											"end": 16256,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 16234,
											"end": 16376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16234,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 16234,
											"end": 16376,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16281,
											"end": 16290,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16272,
											"end": 16290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16272,
											"end": 16290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 16335,
											"end": 16344,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16346,
											"end": 16354,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16356,
											"end": 16364,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16313,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 16313,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16304,
											"end": 16365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16304,
											"end": 16365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16234,
											"end": 16376,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 16234,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16395,
											"end": 16413,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 16395,
											"end": 16413,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16395,
											"end": 16413,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 16433,
											"end": 16451,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 16433,
											"end": 16451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16433,
											"end": 16451,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16433,
											"end": 16451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16433,
											"end": 16451,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15221,
											"end": 16458,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9783,
											"end": 9791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 649,
											"end": 664,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 637,
											"end": 664,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 637,
											"end": 664,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH data",
											"source": 4,
											"value": "AB411B16B48C0DFC5A303ED96B1803938C6E2D0701B8085498DE3B758CA25A98"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "D505ACCF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9853,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9863,
											"end": 9867,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "A4"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "C4"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "D505ACCF"
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "E4"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9906,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9937,
											"end": 9954,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9968,
											"end": 9983,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9997,
											"end": 9999,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10013,
											"end": 10019,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9906,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 9906,
											"end": 10029,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 10029,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9906,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 10036,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 649,
											"end": 664,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 637,
											"end": 664,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 637,
											"end": 664,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH data",
											"source": 4,
											"value": "AB411B16B48C0DFC5A303ED96B1803938C6E2D0701B8085498DE3B758CA25A98"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 629,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 629,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH data",
											"source": 4,
											"value": "DDDE50F1CAE8853E86CA4100759DC699A86A58CBBAAC272E74D5C0BDD9991550"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 8544,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8690,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8722,
											"end": 8727,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8729,
											"end": 8739,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8762,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8690,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 8690,
											"end": 8763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8690,
											"end": 8763,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8690,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8773,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8787,
											"end": 8792,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8773,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 8773,
											"end": 8801,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8773,
											"end": 8801,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8773,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8811,
											"end": 8873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8862,
											"end": 8864,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8872,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 8811,
											"end": 8873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8811,
											"end": 8873,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8811,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8880,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 393,
											"end": 442,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 393,
											"end": 442,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 208,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 208,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 285,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 289,
											"end": 293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 295,
											"end": 302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 285,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 285,
											"end": 303,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 303,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 285,
											"end": 303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 284,
											"end": 303,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 339,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 276,
											"end": 339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 349,
											"end": 369,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 349,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 369,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 349,
											"end": 376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 349,
											"end": 376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 372,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 349,
											"end": 376,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 349,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 376,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 208,
											"end": 383,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 955,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 727,
											"end": 955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 823,
											"end": 827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 851,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 851,
											"end": 872,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH data",
											"source": 7,
											"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 843,
											"end": 911,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 928,
											"end": 948,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 928,
											"end": 948,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 727,
											"end": 955,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 458,
											"end": 638,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 458,
											"end": 638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 537,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 541,
											"end": 545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 537,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 537,
											"end": 555,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 555,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 537,
											"end": 555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH data",
											"source": 7,
											"value": "7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 529,
											"end": 593,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 529,
											"end": 593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 603,
											"end": 623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 626,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 623,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 603,
											"end": 631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 631,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 603,
											"end": 631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 603,
											"end": 631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 631,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 458,
											"end": 638,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 11591,
											"end": 11608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11610,
											"end": 11625,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 11571,
											"end": 11626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11571,
											"end": 11626,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 11571,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11636,
											"end": 11658,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11675,
											"end": 11692,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11661,
											"end": 11700,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11700,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11774,
											"end": 11811,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11811,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 11774,
											"end": 11811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11702,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11811,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11768,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11768,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11768,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 11729,
											"end": 11768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11768,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 11770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11888,
											"end": 11903,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11874,
											"end": 11911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11911,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11829,
											"end": 11913,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11913,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11913,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11868,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11868,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11868,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 11829,
											"end": 11868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11913,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11868,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11829,
											"end": 11870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11829,
											"end": 11913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11913,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 12007,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 11712,
											"end": 12007,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11969,
											"end": 11986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11955,
											"end": 11994,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11994,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11712,
											"end": 12007,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 11712,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12016,
											"end": 12039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12056,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12103,
											"end": 12132,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH data",
											"source": 4,
											"value": "C3EA15EC7964D97F4FCA03FF0A261F494AF166A8C1B012C373FDDB2447A896D1"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 12082,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12289,
											"end": 12304,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12275,
											"end": 12312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12312,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 12256,
											"end": 12388,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12363,
											"end": 12378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12349,
											"end": 12386,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12386,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12349,
											"end": 12388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12330,
											"end": 12388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12330,
											"end": 12388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12330,
											"end": 12388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12330,
											"end": 12388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12330,
											"end": 12388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12330,
											"end": 12388,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12388,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 12256,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH data",
											"source": 4,
											"value": "1D8AC38F6FC3450D3A0236480A1BA0D030F5FE1F648621299163FDF4FC11C5C7"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 12235,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12535,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 12552,
											"end": 12569,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12535,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 12535,
											"end": 12578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12535,
											"end": 12578,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 12535,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12494,
											"end": 12578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12494,
											"end": 12578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12494,
											"end": 12578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12494,
											"end": 12578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12602,
											"end": 12619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12684,
											"end": 12701,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12670,
											"end": 12709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12709,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12670,
											"end": 12711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12652,
											"end": 12711,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12652,
											"end": 12711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12652,
											"end": 12711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12652,
											"end": 12711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12652,
											"end": 12711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12652,
											"end": 12711,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12648,
											"end": 12773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 12648,
											"end": 12773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12746,
											"end": 12758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12648,
											"end": 12773,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 12648,
											"end": 12773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12786,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 12800,
											"end": 12814,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12816,
											"end": 12828,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12786,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 12786,
											"end": 12829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12786,
											"end": 12829,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 12786,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 12927,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12898,
											"end": 12935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12935,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12892,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12892,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12892,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 12853,
											"end": 12892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12898,
											"end": 12937,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12892,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 12853,
											"end": 13037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 13037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13012,
											"end": 13027,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12998,
											"end": 13035,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13035,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D21220A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12992,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12992,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 12953,
											"end": 12992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13037,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12992,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12953,
											"end": 12994,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12953,
											"end": 13037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 13037,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 12853,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12849,
											"end": 13132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12849,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 12849,
											"end": 13132,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13094,
											"end": 13106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12849,
											"end": 13132,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 12849,
											"end": 13132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13143,
											"end": 13161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13163,
											"end": 13181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13187,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 13214,
											"end": 13229,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 13257,
											"end": 13272,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13243,
											"end": 13280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13280,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D21220A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13284,
											"end": 13321,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13321,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13321,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 13284,
											"end": 13321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13321,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13284,
											"end": 13323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13365,
											"end": 13367,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 13187,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 13187,
											"end": 13377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13187,
											"end": 13377,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 13187,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13142,
											"end": 13377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13142,
											"end": 13377,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13142,
											"end": 13377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13391,
											"end": 13408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13391,
											"end": 13408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13387,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 13387,
											"end": 13522,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13424,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 13466,
											"end": 13481,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13452,
											"end": 13489,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13489,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13452,
											"end": 13491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13493,
											"end": 13495,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 13497,
											"end": 13510,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13424,
											"end": 13451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 13424,
											"end": 13511,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13424,
											"end": 13511,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 13424,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13552,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13531,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 13531,
											"end": 13666,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13568,
											"end": 13655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13596,
											"end": 13635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 13641,
											"end": 13654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13568,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 13568,
											"end": 13655,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13568,
											"end": 13655,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 13568,
											"end": 13655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 13672,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3257,
											"end": 3418,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3257,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3379,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3379,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 3380,
											"end": 3394,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3343,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3418,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14312,
											"end": 14324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14326,
											"end": 14338,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14370,
											"end": 14387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14407,
											"end": 14418,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14393,
											"end": 14431,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14431,
											"name": "PUSH",
											"source": 4,
											"value": "902F1AC"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14443,
											"end": 14459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14443,
											"end": 14459,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14462,
											"end": 14500,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14500,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14500,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 14462,
											"end": 14500,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14393,
											"end": 14433,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14500,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14462,
											"end": 14502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 14522,
											"end": 14528,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14522,
											"end": 14557,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14601,
											"end": 14612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 14577,
											"end": 14583,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 14577,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14577,
											"end": 14612,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14567,
											"end": 14612,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14567,
											"end": 14612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14220,
											"end": 14619,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1787,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1787,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1912,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH data",
											"source": 6,
											"value": "78840E091B36F1AE3C2E726985D3FCA034FEEF7C212A1C9737ACBA643ADEE0ED"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1893,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1971,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH data",
											"source": 6,
											"value": "9074BFDB993F0F76350CAD6FF16B034DAB298EEA08AD462E08506031F49A76E1"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1963,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 2102,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1787,
											"end": 2102,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1440,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1001,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1231,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1231,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1231,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1392,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1392,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1335,
											"end": 1392,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1358,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1358,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1347,
											"end": 1391,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1367,
											"end": 1391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1391,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1347,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH data",
											"source": 3,
											"value": "EB2904BF3C0C9AE693B53EB0188A703C388998A9C405B7965CA678CEF9A51D18"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1433,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7495,
											"end": 7974,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7495,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7602,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7602,
											"end": 7628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH data",
											"source": 4,
											"value": "9D984E50F0A68E3B3B3F36266BDB577070EDFB604F683A0D41F604C350418D44"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 7594,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7729,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "D004F0F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7749,
											"name": "PUSH",
											"source": 4,
											"value": "D004F0F7"
										},
										{
											"begin": 7702,
											"end": 7749,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7743,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7702,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7829,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7863,
											"end": 7867,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 7879,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 7879,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7854,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 7802,
											"end": 7854,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7879,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "3E"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH data",
											"source": 4,
											"value": "20F37CD99DA92A5EFEB292E424950A5326EAEC74B790503092D9FC76B12F685F"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "3E"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7781,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7974,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 995,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 605,
											"end": 995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 831,
											"end": 876,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 797,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 820,
											"end": 830,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 820,
											"end": 830,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 820,
											"end": 830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 830,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 831,
											"end": 876,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 952,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 895,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 895,
											"end": 952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 907,
											"end": 918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 907,
											"end": 918,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 907,
											"end": 923,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 907,
											"end": 923,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 907,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 907,
											"end": 951,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 907,
											"end": 951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 938,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 927,
											"end": 951,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 927,
											"end": 951,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 927,
											"end": 951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 927,
											"end": 951,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 907,
											"end": 951,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 907,
											"end": 951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 887,
											"end": 988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E7366657248656C7065723A205452414E534645525F4641494C454400"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 887,
											"end": 988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 988,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 7155,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6348,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "3A"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH data",
											"source": 4,
											"value": "2779EFF898F898EFFCF0AA56DAE8E93DB6D4DB04EEA06F78F89CD9D6340ECA68"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "3A"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 6431,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH data",
											"source": 4,
											"value": "D3644C735B72355DD1872214F8CEF876B6AB448AC1DCDE51A78AAE8776C79EA0"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 6531,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6646,
											"end": 6651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH data",
											"source": 4,
											"value": "2386EADBFA1EC37B2BD48E593F37C43C952D063CA4685D6D4E6B987ED53095CD"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 6629,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6791,
											"end": 6818,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6818,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6791,
											"end": 6820,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6758,
											"end": 6898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6883,
											"end": 6888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6869,
											"end": 6896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6896,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6863,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6863,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 6836,
											"end": 6863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6898,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6863,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6758,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 6758,
											"end": 6976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6947,
											"end": 6974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6974,
											"name": "PUSH",
											"source": 4,
											"value": "DFE1681"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D21220A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6914,
											"end": 6976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6941,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6941,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 6914,
											"end": 6941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6947,
											"end": 6976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6941,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6914,
											"end": 6943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6914,
											"end": 6976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6976,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6976,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 6758,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 6758,
											"end": 7054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 7054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7039,
											"end": 7044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7025,
											"end": 7052,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7052,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D21220A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6992,
											"end": 7054,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7054,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7054,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7054,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "D21220A7"
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7019,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6992,
											"end": 7054,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7054,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 7054,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 6758,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH data",
											"source": 4,
											"value": "B8ED0D259757DB98FFF877ED18290C2E4EF438AEFBCBB3F6867BA133DF0A875D"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 7148,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5972,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5645,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5795,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5852,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 5867,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5795,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5795,
											"end": 5876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5795,
											"end": 5876,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 5795,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "89AFCB4400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5917,
											"end": 5950,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5950,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5950,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5950,
											"name": "PUSH",
											"source": 4,
											"value": "89AFCB44"
										},
										{
											"begin": 5917,
											"end": 5950,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5950,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5965,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5645,
											"end": 5972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5645,
											"end": 5972,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4551,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4564,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4564,
											"name": "PUSH",
											"source": 4,
											"value": "902F1AC"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4599,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4576,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 4590,
											"end": 4599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 4685,
											"end": 4827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4815,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4827,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 4685,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4836,
											"end": 4890,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4836,
											"end": 4890,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 4836,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 4928,
											"end": 4934,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4945,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4900,
											"end": 4954,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4954,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 4900,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4992,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5030,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5081,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5087,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5087,
											"name": "PUSH",
											"source": 4,
											"value": "6A627842"
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5091,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 5098,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 427,
											"end": 567,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 427,
											"end": 567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 505,
											"end": 511,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 505,
											"end": 535,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 520,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 520,
											"end": 525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 520,
											"end": 525,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 534,
											"end": 535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 520,
											"end": 525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 515,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 515,
											"end": 530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 530,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 515,
											"end": 530,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 515,
											"end": 530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 530,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 515,
											"end": 535,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 505,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 505,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 497,
											"end": 560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 560,
											"name": "REVERT",
											"source": 8
										}
									],
									".data": {
										"1C7C659B1AE1B6657F6277780E3B866D18DE2AE7BDB0795C710A1378DEB7C207": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72416464726573732030206e6f7420737570706f72746564",
										"1D8AC38F6FC3450D3A0236480A1BA0D030F5FE1F648621299163FDF4FC11C5C7": "4b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f65736e2774206d6174636820746865206d6967726174696f6e20746f6b656e",
										"200248FC6CA52A59603938CDA7204781CE09D1BFBAB0DED816A7DA12334C83D7": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030206e6f7420737570706f72746564",
										"20F37CD99DA92A5EFEB292E424950A5326EAEC74B790503092D9FC76B12F685F": "4b616c79737761704272696467654d6967726174696f6e526f757465723a204469646e2774207969656c642074686520636f727265637420616d6f756e74",
										"2386EADBFA1EC37B2BD48E593F37C43C952D063CA4685D6D4E6B987ED53095CD": "4b616c79737761704272696467654d6967726174696f6e526f757465723a2043616e7420636f6e7665727420746f207468652073616d65206c6971756964697479207061697273",
										"2779EFF898F898EFFCF0AA56DAE8E93DB6D4DB04EEA06F78F89CD9D6340ECA68": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030",
										"55B0696D49F993EB1ACE324D5663BB2FCAF6A2E9ADF7D970B2AA88F8E8484C73": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030206e6f7420737570706f72746564",
										"5CF0A3569A15A3C6D55134BC83C6E310486FC5D86C57FE969396F1673709115": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20416464726573732030206e6f7420616c6c6f776564",
										"67DE629378F206179EF1573EEB90ADA9B246D75587B16D0D1D34653B7FB2DB45": "546865206d69677261746f7220646f65736e27742068617665207377617020737570706c7920666f72207468697320746f6b656e",
										"72BF313591CEDDF754CA6A5C3BB1BCE298C6AD13C15C3E899581C1B7DF075C21": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20556e617574686f72697a6564",
										"78840E091B36F1AE3C2E726985D3FCA034FEEF7C212A1C9737ACBA643ADEE0ED": "4b616c79737761704c6962726172793a20494e53554646494349454e545f414d4f554e54",
										"7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
										"9074BFDB993F0F76350CAD6FF16B034DAB298EEA08AD462E08506031F49A76E1": "4b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459",
										"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
										"9D984E50F0A68E3B3B3F36266BDB577070EDFB604F683A0D41F604C350418D44": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20746f6b656e416464726573732030206e6f7420737570706f72746564",
										"AB411B16B48C0DFC5A303ED96B1803938C6E2D0701B8085498DE3B758CA25A98": "4b616c79737761704272696467654d6967726174696f6e526f757465723a2045585049524544",
										"B8ED0D259757DB98FFF877ED18290C2E4EF438AEFBCBB3F6867BA133DF0A875D": "4b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f6573206e6f742068617665206f6e6520746f6b656e206d61746368696e67",
										"C3EA15EC7964D97F4FCA03FF0A261F494AF166A8C1B012C373FDDB2447A896D1": "4b616c79737761704272696467654d6967726174696f6e526f757465723a204d69677261746f72206e6f74207265676973746572656420666f72207468652070616972",
										"D3644C735B72355DD1872214F8CEF876B6AB448AC1DCDE51A78AAE8776C79EA0": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030",
										"DDDE50F1CAE8853E86CA4100759DC699A86A58CBBAAC272E74D5C0BDD9991550": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72206e6f742072656769737465726564",
										"E6C3CBC1B9CC3350F2DEFB4ADD44202BF98DE183D551D772BA5896F5BB0D10CC": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20596f752063616e27742064656d6f746520796f757273656c66",
										"EB2904BF3C0C9AE693B53EB0188A703C388998A9C405B7965CA678CEF9A51D18": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544"
									}
								},
								"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"
							}
						},
						"methodIdentifiers": {
							"addAdmin(address)": "70480275",
							"addMigrator(address,address)": "4c389d26",
							"bridgeMigrator(address)": "ffc50594",
							"calculateChargeBack(address,address,uint256)": "99a0df82",
							"isAdmin(address)": "24d7806c",
							"migrateLiquidity(address,address,address,uint256,uint256)": "495952f5",
							"migrateLiquidityWithPermit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "b032fff7",
							"migrateToken(address,address,uint256,uint256)": "f057d237",
							"removeAdmin(address)": "1785f53c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"migratorAddress\",\"type\":\"address\"}],\"name\":\"addMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridgeMigrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPairFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPairTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateChargeBack\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPairFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPairTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"migrateLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPairFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPairTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"migrateLiquidityWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"migrateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Any admin can add or remove other admins, careful.\",\"params\":{\"account\":\"The address of the account.\"}},\"addMigrator(address,address)\":{\"params\":{\"migratorAddress\":\"The WrappedERC20 token address that will be migrate the token\",\"tokenAddress\":\"The ERC20 token address that will be migrated using the migrator\"}},\"calculateChargeBack(address,address,uint256)\":{\"details\":\"No need to be extra careful as this is only a view function\",\"params\":{\"amount\":\"The amount of the liquidity token to be migrated(simulated)\",\"liquidityPairFrom\":\"The pair address that will be migrated from(simulated)\",\"liquidityPairTo\":\"The pair address that will be migrated to(simulated)\"},\"returns\":{\"amount0\":\"Amount of token0 will be charged back after the migration\",\"amount1\":\"Amount of token1 will be charged back after the migration\"}},\"isAdmin(address)\":{\"params\":{\"account\":\"The address of the account.\"},\"returns\":{\"_0\":\"Whether or not the account address is an admin.\"}},\"migrateLiquidity(address,address,address,uint256,uint256)\":{\"details\":\"This function assumes sender already gave approval to move the assets\",\"params\":{\"amount\":\"The amount of token liquidityPairFrom that will be migrated\",\"deadline\":\"The deadline limit that should be met, otherwise revert to prevent front-run\",\"liquidityPairFrom\":\"The pair address to be migrated from\",\"liquidityPairTo\":\"The pair address to be migrated to\",\"to\":\"The address that will receive the liquidity and the charge backs\"}},\"migrateLiquidityWithPermit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount of token liquidityPairFrom that will be migrated\",\"deadline\":\"The deadline limit that should be met, otherwise revert to prevent front-run\",\"liquidityPairFrom\":\"The pair address to be migrated from\",\"liquidityPairTo\":\"The pair address to be migrated to\",\"r\":\"by passing param for the permit validation\",\"s\":\"by passing param for the permit validation\",\"to\":\"The address that will receive the liquidity and the charge backs\",\"v\":\"by passing param for the permit validation\"}},\"migrateToken(address,address,uint256,uint256)\":{\"details\":\"This function includes important checks\",\"params\":{\"amount\":\"The amount of the token to be migrated\",\"deadline\":\"The deadline limit that should be met, otherwise revert to prevent front-run\",\"to\":\"The address of who's receiving the token\",\"token\":\"The ERC20 token address that will be migrated\"}},\"removeAdmin(address)\":{\"details\":\"Any admin can add or remove other admins, careful.\",\"params\":{\"account\":\"The address of the account.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Given an address, this address is added to the list of admin.\"},\"addMigrator(address,address)\":{\"notice\":\"Given an token, and it's migrator address, it configures the migrator for later usage\"},\"calculateChargeBack(address,address,uint256)\":{\"notice\":\"Front facing function that computes the possible charge back from the migration\"},\"isAdmin(address)\":{\"notice\":\"Given an address, returns whether or not he's already an admin\"},\"migrateLiquidity(address,address,address,uint256,uint256)\":{\"notice\":\"Front facing function that migrates the liquidity\"},\"migrateLiquidityWithPermit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Front facing function that migrates the liquidity, with permit\"},\"migrateToken(address,address,uint256,uint256)\":{\"notice\":\"Front facing function that migrates the token\"},\"removeAdmin(address)\":{\"notice\":\"Given an address, this address is added to the list of admin.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":\"KalyswapBridgeMigrationRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol\":{\"keccak256\":\"0xdfafc93cc637ae528f35b1f2bfc38156b977477d0075dcab0036a899f2a8d594\",\"urls\":[\"bzz-raw://e2061c6ec30bc96e4869494a70c325b2d26db7c62f53877c44134ff72df09bd7\",\"dweb:/ipfs/QmfEBXe1rFgQbzFfpifdbgETdSYUaBy7WYAAZSr7jirUG6\"]},\"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol\":{\"keccak256\":\"0xa614ed4f9dc2ed32c1f7d03d60c41d2ff204fccbe413bb2e7cbbfbfe29061728\",\"urls\":[\"bzz-raw://8d99392c6dd7eb99ba185d7d0fcc8ac018b6d845ffaf5ca21986a045bee50323\",\"dweb:/ipfs/QmYGMMvoAdX5wieRdiLBpNsUs3RSrV5jXPYxwpPvR22npK\"]},\"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol\":{\"keccak256\":\"0xd05210b00f31f9557ffbbd3b5df0098a2196d33a07a38504a932578ef0c97a61\",\"urls\":[\"bzz-raw://f64916071f9d3d91e1167620711cfed8c7e7797489ad25351295cf21aebeaaba\",\"dweb:/ipfs/QmXTYWuhMBiUm7zoyiUyKYjQPpa1z8xkiPgPbS25jNP52f\"]},\"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol\":{\"keccak256\":\"0x1ce3b33fff8d97ed889ac250bcd33ab7dd14d9fe428169a63db4881e187ac34f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://07adbed20f18d6d6079fc9ad7c399d6656554931c4d8a6ca3dab09383c7fa89e\",\"dweb:/ipfs/QmUPd2EtGG5AxJ9F9xzgT9nkGCmW6CWFoxA4R54wC62q2w\"]},\"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol\":{\"keccak256\":\"0x479894fbb61d228f1f3d71d317d78f6ebb0756fb0aaec504dba78284d0534448\",\"urls\":[\"bzz-raw://9eb37837377984c7096e9f45a747cb1b05cb914d2671e673e0b7466068e6688f\",\"dweb:/ipfs/QmbVbHnrnSYoS5PBtvpVFmiT91tp6SFNXmVgMYgEAtsRcF\"]},\"CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol\":{\"keccak256\":\"0x151c0ba44b4df93b94c41ff7b01391b9570f6a05d431786c41cbdb9273ca7b63\",\"urls\":[\"bzz-raw://f9d928d7114a977c7d6fa70bf382cfa515325f34de4a206d3c32a05b276b0e78\",\"dweb:/ipfs/QmceNLMP41d7tZ6WBHP58pzptPwR8sCLEx6LEUbBKgFkob\"]},\"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":{\"keccak256\":\"0x8ffeb8e7cf56a00cf637c7200d397a97d1cc2543b3ea577405cb30c4b70c0175\",\"urls\":[\"bzz-raw://7662c945a17dd9ee502166b384e6e334822535cbef33b5bf11e213641fb83bdb\",\"dweb:/ipfs/QmccS6Ef2Km8CuPCc7w12KZFQGGxwKUkVihyd96scCeDsf\"]},\"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":{\"keccak256\":\"0x19fd3cbd3db2e9f68f56a43d518a807783af8b98b7c2da53b6704eda4c5e4021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd331e71b14fee63f430ed153abba8a20e5072a2efa9b3ef2276854e2721d8d\",\"dweb:/ipfs/QmfTXpf8rp7d5Dz35mdWQceqzCZtXYaNa3qVF5PXHNZxKN\"]},\"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":{\"keccak256\":\"0x0e17615f122df2444d4e76ed275b802cfebba908d0ff66adcf2cfb40560c3f05\",\"urls\":[\"bzz-raw://47ed1ac20940c99e26cc0090fbdfa89e8c5a26a7d004b6bbdd8f5c5f465a3a40\",\"dweb:/ipfs/QmcPJCteHvBmegnenS7ChsG6EjEFYHSpkwDSko4aUWP9Yd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 597,
								"contract": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol:KalyswapBridgeMigrationRouter",
								"label": "adminRole",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)2074_storage"
							},
							{
								"astId": 601,
								"contract": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol:KalyswapBridgeMigrationRouter",
								"label": "bridgeMigrator",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)2074_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 2073,
										"contract": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol:KalyswapBridgeMigrationRouter",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addAdmin(address)": {
								"notice": "Given an address, this address is added to the list of admin."
							},
							"addMigrator(address,address)": {
								"notice": "Given an token, and it's migrator address, it configures the migrator for later usage"
							},
							"calculateChargeBack(address,address,uint256)": {
								"notice": "Front facing function that computes the possible charge back from the migration"
							},
							"isAdmin(address)": {
								"notice": "Given an address, returns whether or not he's already an admin"
							},
							"migrateLiquidity(address,address,address,uint256,uint256)": {
								"notice": "Front facing function that migrates the liquidity"
							},
							"migrateLiquidityWithPermit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Front facing function that migrates the liquidity, with permit"
							},
							"migrateToken(address,address,uint256,uint256)": {
								"notice": "Front facing function that migrates the token"
							},
							"removeAdmin(address)": {
								"notice": "Given an address, this address is added to the list of admin."
							}
						},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol": {
				"IBridgeToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "swapSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"swap(address,uint256)": "d004f0f7",
							"swapSupply(address)": "ab32dbb7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"swapSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol\":\"IBridgeToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol\":{\"keccak256\":\"0xdfafc93cc637ae528f35b1f2bfc38156b977477d0075dcab0036a899f2a8d594\",\"urls\":[\"bzz-raw://e2061c6ec30bc96e4869494a70c325b2d26db7c62f53877c44134ff72df09bd7\",\"dweb:/ipfs/QmfEBXe1rFgQbzFfpifdbgETdSYUaBy7WYAAZSr7jirUG6\"]},\"CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol\":{\"keccak256\":\"0x151c0ba44b4df93b94c41ff7b01391b9570f6a05d431786c41cbdb9273ca7b63\",\"urls\":[\"bzz-raw://f9d928d7114a977c7d6fa70bf382cfa515325f34de4a206d3c32a05b276b0e78\",\"dweb:/ipfs/QmceNLMP41d7tZ6WBHP58pzptPwR8sCLEx6LEUbBKgFkob\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol": {
				"KalyswapLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":174:4495  library KalyswapLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":174:4495  library KalyswapLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220766c00e7c1f5c04f496afbfb16e351ec0554c60f932300c00b850f2a9698c97564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220766c00e7c1f5c04f496afbfb16e351ec0554c60f932300c00b850f2a9698c97564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x6C00E7C1F5C04F496AFBFB16E351EC0554C60F932300C0 SIGNEXTEND DUP6 0xF 0x2A SWAP7 SWAP9 0xC9 PUSH22 0x64736F6C634300070600330000000000000000000000 ",
							"sourceMap": "174:4321:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220766c00e7c1f5c04f496afbfb16e351ec0554c60f932300c00b850f2a9698c97564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x6C00E7C1F5C04F496AFBFB16E351EC0554C60F932300C0 SIGNEXTEND DUP6 0xF 0x2A SWAP7 SWAP9 0xC9 PUSH22 0x64736F6C634300070600330000000000000000000000 ",
							"sourceMap": "174:4321:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmountIn(uint256,uint256,uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getAmountsIn(address,uint256,address[] memory)": "infinite",
								"getAmountsOut(address,uint256,address[] memory)": "infinite",
								"getReserves(address,address,address)": "infinite",
								"pairFor(address,address,address)": "infinite",
								"quote(uint256,uint256,uint256)": "infinite",
								"sortTokens(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4495,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220766c00e7c1f5c04f496afbfb16e351ec0554c60f932300c00b850f2a9698c97564736f6c63430007060033",
									".code": [
										{
											"begin": 174,
											"end": 4495,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4495,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":\"KalyswapLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol\":{\"keccak256\":\"0xa614ed4f9dc2ed32c1f7d03d60c41d2ff204fccbe413bb2e7cbbfbfe29061728\",\"urls\":[\"bzz-raw://8d99392c6dd7eb99ba185d7d0fcc8ac018b6d845ffaf5ca21986a045bee50323\",\"dweb:/ipfs/QmYGMMvoAdX5wieRdiLBpNsUs3RSrV5jXPYxwpPvR22npK\"]},\"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol\":{\"keccak256\":\"0xd05210b00f31f9557ffbbd3b5df0098a2196d33a07a38504a932578ef0c97a61\",\"urls\":[\"bzz-raw://f64916071f9d3d91e1167620711cfed8c7e7797489ad25351295cf21aebeaaba\",\"dweb:/ipfs/QmXTYWuhMBiUm7zoyiUyKYjQPpa1z8xkiPgPbS25jNP52f\"]},\"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol\":{\"keccak256\":\"0x8ffeb8e7cf56a00cf637c7200d397a97d1cc2543b3ea577405cb30c4b70c0175\",\"urls\":[\"bzz-raw://7662c945a17dd9ee502166b384e6e334822535cbef33b5bf11e213641fb83bdb\",\"dweb:/ipfs/QmccS6Ef2Km8CuPCc7w12KZFQGGxwKUkVihyd96scCeDsf\"]},\"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":{\"keccak256\":\"0x0e17615f122df2444d4e76ed275b802cfebba908d0ff66adcf2cfb40560c3f05\",\"urls\":[\"bzz-raw://47ed1ac20940c99e26cc0090fbdfa89e8c5a26a7d004b6bbdd8f5c5f465a3a40\",\"dweb:/ipfs/QmcPJCteHvBmegnenS7ChsG6EjEFYHSpkwDSko4aUWP9Yd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-periphery/libraries/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":57:957  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":57:957  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ec0788881f69ce0e53137481de9eae8251be0b1efdc490200e66d53451de6b5d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec0788881f69ce0e53137481de9eae8251be0b1efdc490200e66d53451de6b5d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SMOD DUP9 DUP9 0x1F PUSH10 0xCE0E53137481DE9EAE82 MLOAD 0xBE SIGNEXTEND 0x1E REVERT 0xC4 SWAP1 KECCAK256 0xE PUSH7 0xD53451DE6B5D64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "57:900:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec0788881f69ce0e53137481de9eae8251be0b1efdc490200e66d53451de6b5d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SMOD DUP9 DUP9 0x1F PUSH10 0xCE0E53137481DE9EAE82 MLOAD 0xBE SIGNEXTEND 0x1E REVERT 0xC4 SWAP1 KECCAK256 0xE PUSH7 0xD53451DE6B5D64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "57:900:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 57,
									"end": 957,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec0788881f69ce0e53137481de9eae8251be0b1efdc490200e66d53451de6b5d64736f6c63430007060033",
									".code": [
										{
											"begin": 57,
											"end": 957,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 57,
											"end": 957,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 57,
											"end": 957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 957,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 957,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 57,
											"end": 957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 957,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":\"Roles\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-periphery/libraries/Roles.sol\":{\"keccak256\":\"0x19fd3cbd3db2e9f68f56a43d518a807783af8b98b7c2da53b6704eda4c5e4021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd331e71b14fee63f430ed153abba8a20e5072a2efa9b3ef2276854e2721d8d\",\"dweb:/ipfs/QmfTXpf8rp7d5Dz35mdWQceqzCZtXYaNa3qVF5PXHNZxKN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":139:569  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":139:569  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ee3d6eb4d1370907bd25387641e5ed8e25c827bbb36b8e7f6967cdf00c8e42864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ee3d6eb4d1370907bd25387641e5ed8e25c827bbb36b8e7f6967cdf00c8e42864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xE3 0xD6 0xEB 0x4D SGT PUSH17 0x907BD25387641E5ED8E25C827BBB36B8E7 0xF6 SWAP7 PUSH29 0xDF00C8E42864736F6C6343000706003300000000000000000000000000 ",
							"sourceMap": "139:430:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ee3d6eb4d1370907bd25387641e5ed8e25c827bbb36b8e7f6967cdf00c8e42864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xE3 0xD6 0xEB 0x4D SGT PUSH17 0x907BD25387641E5ED8E25C827BBB36B8E7 0xF6 SWAP7 PUSH29 0xDF00C8E42864736F6C6343000706003300000000000000000000000000 ",
							"sourceMap": "139:430:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 139,
									"end": 569,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ee3d6eb4d1370907bd25387641e5ed8e25c827bbb36b8e7f6967cdf00c8e42864736f6c63430007060033",
									".code": [
										{
											"begin": 139,
											"end": 569,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 139,
											"end": 569,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 139,
											"end": 569,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 139,
											"end": 569,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 569,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 139,
											"end": 569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 569,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 139,
											"end": 569,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol\":{\"keccak256\":\"0x0e17615f122df2444d4e76ed275b802cfebba908d0ff66adcf2cfb40560c3f05\",\"urls\":[\"bzz-raw://47ed1ac20940c99e26cc0090fbdfa89e8c5a26a7d004b6bbdd8f5c5f465a3a40\",\"dweb:/ipfs/QmcPJCteHvBmegnenS7ChsG6EjEFYHSpkwDSko4aUWP9Yd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "CoreContracts/kalyswap-periphery/libraries/SafeMath.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "CoreContracts/kalyswap-periphery/libraries/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol:16:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor() public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 512,
					"file": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol",
					"start": 449
				},
				"type": "Warning"
			}
		],
		"sources": {
			"CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol",
					"exportedSymbols": {
						"IKalyswapERC20": [
							117
						]
					},
					"id": 118,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IKalyswapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 9,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "72:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "95:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "120:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "120:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71:60:0"
									},
									"src": "57:75:0"
								},
								{
									"anonymous": false,
									"id": 17,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "152:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "174:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:54:0"
									},
									"src": "137:69:0"
								},
								{
									"functionSelector": "06fdde03",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "251:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "251:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:15:0"
									},
									"scope": 117,
									"src": "212:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "312:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:0"
									},
									"scope": 117,
									"src": "271:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "375:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 29,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:7:0"
									},
									"scope": 117,
									"src": "332:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "433:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:0"
									},
									"scope": 117,
									"src": "387:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "501:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:6:0"
									},
									"scope": 117,
									"src": "444:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "546:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "586:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:6:0"
									},
									"scope": 117,
									"src": "512:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "615:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "632:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:29:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "662:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:0"
									},
									"scope": 117,
									"src": "598:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "703:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "733:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:0"
									},
									"scope": 117,
									"src": "673:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "766:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "780:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "792:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:38:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "822:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:6:0"
									},
									"scope": 117,
									"src": "744:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "885:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:9:0"
									},
									"scope": 117,
									"src": "834:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "949:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 89,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:0"
									},
									"scope": 117,
									"src": "899:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1017:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:6:0"
									},
									"scope": 117,
									"src": "963:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1045:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1077:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1089:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 108,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1124:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:90:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:0"
									},
									"scope": 117,
									"src": "1029:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "26:1120:0"
						}
					],
					"src": "0:1147:0"
				},
				"id": 0
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol",
					"exportedSymbols": {
						"IKalyswapFactory": [
							180
						]
					},
					"id": 181,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 180,
							"linearizedBaseContracts": [
								180
							],
							"name": "IKalyswapFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 129,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "77:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "77:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "101:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "125:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "139:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "139:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76:68:1"
									},
									"src": "59:86:1"
								},
								{
									"functionSelector": "017e7e58",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "191:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:9:1"
									},
									"scope": 180,
									"src": "151:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "251:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:9:1"
									},
									"scope": 180,
									"src": "205:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "283:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "299:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:32:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "338:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:14:1"
									},
									"scope": 180,
									"src": "266:86:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:6:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "404:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:14:1"
									},
									"scope": 180,
									"src": "357:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "472:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:6:1"
									},
									"scope": 180,
									"src": "423:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "520:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:32:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "554:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:14:1"
									},
									"scope": 180,
									"src": "484:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "592:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:9:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:1"
									},
									"scope": 180,
									"src": "574:36:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "639:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:1"
									},
									"scope": 180,
									"src": "615:42:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 181,
							"src": "26:633:1"
						}
					],
					"src": "0:660:1"
				},
				"id": 1
			},
			"CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol",
					"exportedSymbols": {
						"IKalyswapPair": [
							422
						]
					},
					"id": 423,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 182,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 422,
							"linearizedBaseContracts": [
								422
							],
							"name": "IKalyswapPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 190,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "71:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "94:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "94:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "119:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70:60:2"
									},
									"src": "56:75:2"
								},
								{
									"anonymous": false,
									"id": 198,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "151:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "173:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "193:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "193:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:54:2"
									},
									"src": "136:69:2"
								},
								{
									"functionSelector": "06fdde03",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "250:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "250:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:15:2"
									},
									"scope": 422,
									"src": "211:54:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "311:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:15:2"
									},
									"scope": 422,
									"src": "270:56:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "374:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 210,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "374:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:7:2"
									},
									"scope": 422,
									"src": "331:50:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:2"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "432:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "432:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:6:2"
									},
									"scope": 422,
									"src": "386:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "462:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "500:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:6:2"
									},
									"scope": 422,
									"src": "443:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "530:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "545:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:32:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "585:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "585:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:6:2"
									},
									"scope": 422,
									"src": "511:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "614:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:29:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "661:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:6:2"
									},
									"scope": 422,
									"src": "597:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "690:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "702:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:24:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "732:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "732:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:6:2"
									},
									"scope": 422,
									"src": "672:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "765:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "779:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "791:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:38:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "821:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "821:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:6:2"
									},
									"scope": 422,
									"src": "743:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"scope": 422,
									"src": "833:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:2"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "948:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:9:2"
									},
									"scope": 422,
									"src": "898:59:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "978:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:15:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:6:2"
									},
									"scope": 422,
									"src": "962:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1044:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1059:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1088:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1088:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1103:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1103:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1112:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1123:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:90:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:2"
									},
									"scope": 422,
									"src": "1028:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 305,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1160:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1184:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1198:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1198:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:52:2"
									},
									"src": "1149:63:2"
								},
								{
									"anonymous": false,
									"id": 315,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1228:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1252:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1252:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1266:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1280:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:72:2"
									},
									"src": "1217:83:2"
								},
								{
									"anonymous": false,
									"id": 329,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1325:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1357:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1381:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1381:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1405:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1405:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1430:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1430:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1455:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1315:164:2"
									},
									"src": "1305:175:2"
								},
								{
									"anonymous": false,
									"id": 335,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1496:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 330,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1514:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 332,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:36:2"
									},
									"src": "1485:47:2"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1590:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1590:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:6:2"
									},
									"scope": 422,
									"src": "1538:58:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:2:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1643:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:9:2"
									},
									"scope": 422,
									"src": "1601:51:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1672:2:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1698:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1697:9:2"
									},
									"scope": 422,
									"src": "1657:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1727:2:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1753:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1752:9:2"
									},
									"scope": 422,
									"src": "1712:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1787:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1813:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 357,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1831:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 359,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1849:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 361,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1849:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:63:2"
									},
									"scope": 422,
									"src": "1767:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1936:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1936:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:6:2"
									},
									"scope": 422,
									"src": "1881:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:2:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2002:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2002:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:6:2"
									},
									"scope": 422,
									"src": "1947:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:6:2"
									},
									"scope": 422,
									"src": "2013:46:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2079:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:12:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2109:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2109:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:16:2"
									},
									"scope": 422,
									"src": "2065:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2144:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:12:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2174:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2174:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2188:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2188:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:28:2"
									},
									"scope": 422,
									"src": "2130:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2221:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2221:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2238:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2238:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2255:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2267:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2267:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:67:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2296:0:2"
									},
									"scope": 422,
									"src": "2207:90:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2316:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:12:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:0:2"
									},
									"scope": 422,
									"src": "2302:35:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:2:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:2"
									},
									"scope": 422,
									"src": "2342:25:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2393:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2402:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:18:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2419:0:2"
									},
									"scope": 422,
									"src": "2373:47:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 423,
							"src": "26:2396:2"
						}
					],
					"src": "0:2423:2"
				},
				"id": 2
			},
			"CoreContracts/kalyswap-lib/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-lib/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							582
						]
					},
					"id": 583,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 424,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "314:285:3",
										"statements": [
											{
												"assignments": [
													434,
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "390:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 433,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "390:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "404:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "404:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "459:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "471:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "475:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 439,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "436:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "436:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "436:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 437,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "425:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "425:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:93:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "500:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 449,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 436,
																					"src": "512:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "512:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "527:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "512:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 455,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 436,
																					"src": "543:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 457,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "550:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 456,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "550:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 458,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "549:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 453,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "532:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "532:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "532:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "512:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "511:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "500:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "559:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "492:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:100:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "492:100:3"
											}
										]
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:72:3"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:3"
									},
									"scope": 582,
									"src": "212:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "708:287:3",
										"statements": [
											{
												"assignments": [
													477,
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 509,
														"src": "785:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 476,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "785:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 509,
														"src": "799:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 478,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "854:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 485,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "866:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "870:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "831:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "831:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "831:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 480,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "820:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "820:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "820:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "784:93:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 492,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 479,
																					"src": "907:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "907:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "922:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "907:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 498,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 479,
																					"src": "938:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 500,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "945:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 499,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "945:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 501,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "944:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 496,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "927:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "927:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "927:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "907:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 504,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "906:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "895:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:101:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "887:101:3"
											}
										]
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "636:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "659:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:72:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:0:3"
									},
									"scope": 582,
									"src": "605:390:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "1130:310:3",
										"statements": [
											{
												"assignments": [
													522,
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "1219:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 521,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1219:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "1233:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 523,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1233:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1288:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "1300:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "1306:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 532,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "1310:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 527,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1265:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1265:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1265:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 525,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "1254:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1254:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:99:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "1335:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 538,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "1347:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1347:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1362:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1347:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 544,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "1378:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 546,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1385:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 545,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1385:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 547,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1384:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 542,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1367:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1367:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1367:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1347:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1346:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1335:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1327:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1327:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "1327:106:3"
											}
										]
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1036:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1059:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1081:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1101:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:94:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:0:3"
									},
									"scope": 582,
									"src": "1001:439:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "1507:136:3",
										"statements": [
											{
												"assignments": [
													564,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "1518:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 563,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1518:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1568:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1558:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 569,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1562:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1558:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 565,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1536:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1536:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "1551:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1536:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1536:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "1589:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a204b4c435f5452414e534645525f4641494c4544",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1598:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89fe9709b41c53d59ac0f653a160c86498d9f7113bebc11c040f6d84fe442ee6",
																"typeString": "literal_string \"TransferHelper: KLC_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: KLC_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89fe9709b41c53d59ac0f653a160c86498d9f7113bebc11c040f6d84fe442ee6",
																"typeString": "literal_string \"TransferHelper: KLC_TRANSFER_FAILED\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1581:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "1581:55:3"
											}
										]
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferKLC",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1471:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1483:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:27:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:0:3"
									},
									"scope": 582,
									"src": "1446:197:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 583,
							"src": "183:1462:3"
						}
					],
					"src": "46:1600:3"
				},
				"id": 3
			},
			"CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-periphery/KalyswapBridgeMigrationRouter.sol",
					"exportedSymbols": {
						"IBridgeToken": [
							1594
						],
						"IKalyswapERC20": [
							117
						],
						"IKalyswapFactory": [
							180
						],
						"IKalyswapPair": [
							422
						],
						"KalyswapBridgeMigrationRouter": [
							1574
						],
						"KalyswapLibrary": [
							2067
						],
						"Roles": [
							2152
						],
						"SafeMath": [
							2227
						],
						"TransferHelper": [
							582
						]
					},
					"id": 1575,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol",
							"file": "../kalyswap-core/interfaces/IKalyswapERC20.sol",
							"id": 585,
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 118,
							"src": "25:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoreContracts/kalyswap-lib/libraries/TransferHelper.sol",
							"file": "../kalyswap-lib/libraries/TransferHelper.sol",
							"id": 586,
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 583,
							"src": "82:54:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol",
							"file": "./interfaces/IBridgeToken.sol",
							"id": 587,
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 1595,
							"src": "137:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoreContracts/kalyswap-periphery/libraries/Roles.sol",
							"file": "./libraries/Roles.sol",
							"id": 588,
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 2153,
							"src": "177:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol",
							"file": "./libraries/KalyswapLibrary.sol",
							"id": 589,
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 2068,
							"src": "209:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1574,
							"linearizedBaseContracts": [
								1574
							],
							"name": "KalyswapBridgeMigrationRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 592,
									"libraryName": {
										"id": 590,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2227,
										"src": "303:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2227",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "297:24:4",
									"typeName": {
										"id": 591,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "316:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 595,
									"libraryName": {
										"id": 593,
										"name": "Roles",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2152,
										"src": "332:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Roles_$2152",
											"typeString": "library Roles"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "326:27:4",
									"typeName": {
										"id": 594,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2074,
										"src": "342:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"constant": false,
									"id": 597,
									"mutability": "mutable",
									"name": "adminRole",
									"nodeType": "VariableDeclaration",
									"scope": 1574,
									"src": "359:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$2074_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 596,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2074,
										"src": "359:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ffc50594",
									"id": 601,
									"mutability": "mutable",
									"name": "bridgeMigrator",
									"nodeType": "VariableDeclaration",
									"scope": 1574,
									"src": "393:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 600,
										"keyType": {
											"id": 598,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "401:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "393:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 599,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "412:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "470:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 607,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "494:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "494:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 604,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "480:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2074_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "480:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$2074_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "480:25:4"
											}
										]
									},
									"id": 612,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:0:4"
									},
									"scope": 1574,
									"src": "449:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "619:106:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "637:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 618,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "649:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "649:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "637:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a2045585049524544",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "666:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab411b16b48c0dfc5a303ed96b1803938c6e2d0701b8085498de3b758ca25a98",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: EXPIRED\""
															},
															"value": "KalyswapBridgeMigrationRouter: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab411b16b48c0dfc5a303ed96b1803938c6e2d0701b8085498de3b758ca25a98",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: EXPIRED\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "629:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "629:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "629:78:4"
											},
											{
												"id": 624,
												"nodeType": "PlaceholderStatement",
												"src": "717:1:4"
											}
										]
									},
									"id": 626,
									"name": "ensure",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "604:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "604:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:15:4"
									},
									"src": "588:137:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "817:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 631,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "849:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "849:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"expression": {
																	"id": 629,
																	"name": "adminRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "835:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$2074_storage",
																		"typeString": "struct Roles.Role storage ref"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "has",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2151,
																"src": "835:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$2074_storage_ptr_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "835:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20556e617574686f72697a6564",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "862:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72bf313591ceddf754ca6a5c3bb1bce298c6ad13c15c3e899581c1b7df075c21",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Unauthorized\""
															},
															"value": "KalyswapBridgeMigrationRouter: Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72bf313591ceddf754ca6a5c3bb1bce298c6ad13c15c3e899581c1b7df075c21",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Unauthorized\""
															}
														],
														"id": 628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "827:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "827:81:4"
											},
											{
												"id": 637,
												"nodeType": "PlaceholderStatement",
												"src": "918:1:4"
											}
										]
									},
									"id": 639,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:2:4"
									},
									"src": "796:130:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "1192:135:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "1210:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1229:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1221:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1221:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1221:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1210:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20416464726573732030206e6f7420616c6c6f776564",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1233:54:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05cf0a3569a15a3c6d55134bc83c6e310486fc5d86c57fe969396f1673709115",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Address 0 not allowed\""
															},
															"value": "KalyswapBridgeMigrationRouter: Address 0 not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05cf0a3569a15a3c6d55134bc83c6e310486fc5d86c57fe969396f1673709115",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Address 0 not allowed\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1202:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1202:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "1312:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 657,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "1298:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2074_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "1298:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$2074_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1298:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1298:22:4"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "932:201:4",
										"text": " @notice Given an address, this address is added to the list of admin.\n @dev Any admin can add or remove other admins, careful.\n @param account The address of the account."
									},
									"functionSelector": "70480275",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 645,
											"modifierName": {
												"id": 644,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 639,
												"src": "1182:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1182:9:4"
										}
									],
									"name": "addAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1156:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:17:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:0:4"
									},
									"scope": 1574,
									"src": "1138:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "1596:142:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 673,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1614:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1614:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 675,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1628:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1614:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20596f752063616e27742064656d6f746520796f757273656c66",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1637:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6c3cbc1b9cc3350f2defb4add44202bf98de183d551d772ba5896f5bb0d10cc",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: You can't demote yourself\""
															},
															"value": "KalyswapBridgeMigrationRouter: You can't demote yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6c3cbc1b9cc3350f2defb4add44202bf98de183d551d772ba5896f5bb0d10cc",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: You can't demote yourself\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1606:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1606:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "1606:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1723:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 680,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "1706:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2074_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2125,
														"src": "1706:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$2074_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1706:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1706:25:4"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1333:201:4",
										"text": " @notice Given an address, this address is added to the list of admin.\n @dev Any admin can add or remove other admins, careful.\n @param account The address of the account."
									},
									"functionSelector": "1785f53c",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 670,
											"modifierName": {
												"id": 669,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 639,
												"src": "1586:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1586:9:4"
										}
									],
									"name": "removeAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1560:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:17:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:4"
									},
									"scope": 1574,
									"src": "1539:199:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2013:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "2044:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 695,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "2030:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2074_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2151,
														"src": "2030:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$2074_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2030:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 694,
												"id": 699,
												"nodeType": "Return",
												"src": "2023:29:4"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1744:202:4",
										"text": " @notice Given an address, returns whether or not he's already an admin\n @param account The address of the account.\n @return Whether or not the account address is an admin."
									},
									"functionSelector": "24d7806c",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1968:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:17:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2007:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2007:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:6:4"
									},
									"scope": 1574,
									"src": "1951:108:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2453:537:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "2471:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2495:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2487:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2487:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2487:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2471:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20746f6b656e416464726573732030206e6f7420737570706f72746564",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:61:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\""
															},
															"value": "KalyswapBridgeMigrationRouter: tokenAddress 0 not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2463:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "2463:98:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 722,
																"name": "migratorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "2579:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2606:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2598:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2598:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2598:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2579:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72416464726573732030206e6f7420737570706f72746564",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2610:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c7c659b1ae1b6657f6277780e3b866d18de2ae7bdb0795c710a1378deb7c207",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: migratorAddress 0 not supported\""
															},
															"value": "KalyswapBridgeMigrationRouter: migratorAddress 0 not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c7c659b1ae1b6657f6277780e3b866d18de2ae7bdb0795c710a1378deb7c207",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: migratorAddress 0 not supported\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2571:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2571:104:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "2571:104:4"
											},
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "2685:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2685:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"arguments": [
														{
															"id": 737,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2743:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 734,
																	"name": "migratorAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "2715:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 733,
																"name": "IBridgeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "2702:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBridgeToken_$1594_$",
																	"typeString": "type(contract IBridgeToken)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2702:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBridgeToken_$1594",
																"typeString": "contract IBridgeToken"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1593,
														"src": "2702:40:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2685:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 741,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "2787:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2796:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2787:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206d69677261746f7220646f65736e27742068617665207377617020737570706c7920666f72207468697320746f6b656e",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2811:54:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67de629378f206179ef1573eeb90ada9b246d75587b16d0d1d34653b7fb2db45",
																"typeString": "literal_string \"The migrator doesn't have swap supply for this token\""
															},
															"value": "The migrator doesn't have swap supply for this token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67de629378f206179ef1573eeb90ada9b246d75587b16d0d1d34653b7fb2db45",
																"typeString": "literal_string \"The migrator doesn't have swap supply for this token\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2766:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:109:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2766:109:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2897:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "migratorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "2911:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 747,
														"name": "_allowToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2885:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "2885:42:4"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 752,
															"name": "bridgeMigrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "2937:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 754,
														"indexExpression": {
															"id": 753,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2952:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2937:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 755,
														"name": "migratorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2968:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2937:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2937:46:4"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2065:296:4",
										"text": " @notice Given an token, and it's migrator address, it configures the migrator for later usage\n @param tokenAddress The ERC20 token address that will be migrated using the migrator\n @param migratorAddress The WrappedERC20 token address that will be migrate the token"
									},
									"functionSelector": "4c389d26",
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 709,
											"modifierName": {
												"id": 708,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 639,
												"src": "2443:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2443:9:4"
										}
									],
									"name": "addMigrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2387:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "migratorAddress",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2409:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:47:4"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2453:0:4"
									},
									"scope": 1574,
									"src": "2366:624:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "3333:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "spenderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "3380:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3401:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 773,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3401:4:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 772,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3396:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3396:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3396:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 768,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "3358:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 767,
																"name": "IKalyswapERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "3343:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapERC20_$117_$",
																	"typeString": "type(contract IKalyswapERC20)"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3343:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapERC20_$117",
																"typeString": "contract IKalyswapERC20"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "3343:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3343:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "3343:68:4"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2996:256:4",
										"text": " @notice Internal function to manage approval, allows an ERC20 to be spent to the maximum\n @param tokenAddress The ERC20 token address that will be allowed to be used\n @param spenderAddress Who's going to spend the ERC20 token"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_allowToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "3278:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spenderAddress",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "3300:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:46:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3333:0:4"
									},
									"scope": 1574,
									"src": "3257:161:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "4478:620:4",
										"statements": [
											{
												"assignments": [
													803,
													805,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "4489:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 802,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4489:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "4507:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 804,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4507:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"name": "pairToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "4542:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 806,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "4528:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4528:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "4528:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4528:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4488:78:4"
											},
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "quote0",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "4576:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 812,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4576:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"id": 814,
													"name": "amountIn0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "4590:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4576:23:4"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "quote1",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "4609:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4609:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "amountIn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "4645:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 821,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "4656:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"id": 822,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "4666:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"id": 818,
															"name": "KalyswapLibrary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "4623:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_KalyswapLibrary_$2067_$",
																"typeString": "type(library KalyswapLibrary)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "quote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1780,
														"src": "4623:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4623:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4609:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "quote1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "4689:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 826,
														"name": "amountIn1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "4698:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4689:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "4685:142:4",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "4709:118:4",
													"statements": [
														{
															"expression": {
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 828,
																	"name": "quote1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "4723:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 829,
																	"name": "amountIn1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4732:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4723:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "4723:18:4"
														},
														{
															"expression": {
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 832,
																	"name": "quote0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "4755:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 835,
																			"name": "amountIn1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "4786:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 836,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "4797:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		},
																		{
																			"id": 837,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "4807:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			},
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"expression": {
																			"id": 833,
																			"name": "KalyswapLibrary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2067,
																			"src": "4764:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_KalyswapLibrary_$2067_$",
																				"typeString": "type(library KalyswapLibrary)"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "quote",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1780,
																		"src": "4764:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4764:52:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4755:61:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "4755:61:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "4864:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "pairToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "4872:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "quote0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "4883:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 843,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4836:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "4836:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4836:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4836:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "4928:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "pairToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "4936:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "quote1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4947:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 851,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4900:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "4900:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "4900:54:4"
											},
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "4964:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 860,
															"name": "amountIn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "4974:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 861,
															"name": "quote0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "4986:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4974:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4964:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "4964:28:4"
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 865,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5002:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 866,
															"name": "amountIn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5012:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 867,
															"name": "quote1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "5024:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5012:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5002:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "5002:28:4"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "liquidityAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5040:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 876,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "5088:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 873,
																		"name": "pairToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "5072:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 872,
																	"name": "IKalyswapPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "5058:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																		"typeString": "type(contract IKalyswapPair)"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5058:24:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																	"typeString": "contract IKalyswapPair"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 386,
															"src": "5058:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) external returns (uint256)"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5058:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5040:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "5040:51:4"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "3424:810:4",
										"text": " @notice Internal function add liquidity on a low level, without the use of a router\n @dev This function will try to maximize one of the tokens amount and match the other\n one, can cause dust so consider charge backs\n @param pairToken The pair that will receive the liquidity\n @param token0 The first token of the pair\n @param token1 The second token of the pair\n @param amountIn0 The amount of first token that can be used to deposit liquidity\n @param amountIn1 The amount of second token that can be used to deposit liquidity\n @param to The address who will receive the liquidity\n @return amount0 Charge back from token0\n @return amount1 Charge back from token1\n @return liquidityAmount Total liquidity token amount acquired"
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "pairToken",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4271:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4298:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4322:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "amountIn0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4346:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4346:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amountIn1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4370:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4370:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4394:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:149:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4428:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4428:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4442:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4442:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "liquidityAmount",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4456:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4456:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4427:50:4"
									},
									"scope": 1574,
									"src": "4239:859:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "5785:187:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "liquidityPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5827:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 897,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5842:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5842:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 899,
															"name": "liquidityPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5854:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5869:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 893,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5795:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 556,
														"src": "5795:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5795:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "5795:81:4"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 903,
																"name": "amountTokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "5887:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 904,
																"name": "amountTokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "5901:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 905,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5886:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 912,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5959:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																			"typeString": "contract KalyswapBridgeMigrationRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																			"typeString": "contract KalyswapBridgeMigrationRouter"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5951:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5951:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5951:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 907,
																		"name": "liquidityPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "5931:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 906,
																	"name": "IKalyswapPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "5917:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																		"typeString": "type(contract IKalyswapPair)"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5917:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																	"typeString": "contract IKalyswapPair"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "burn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 395,
															"src": "5917:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address) external returns (uint256,uint256)"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5917:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "5886:79:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "5886:79:4"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "5104:536:4",
										"text": " @notice Internal function to remove liquidity on a low level, without the use of a router\n @dev This function requires the user to approve this contract to transfer the liquidity pair on it's behalf\n @param liquidityPair The pair that will have the liquidity removed\n @param amount The amount of liquidity token that you want to rescue\n @return amountTokenA The amount of token0 from burning liquidityPair token\n @return amountTokenB The amount of token1 from burning liquidityPair token"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_rescueLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "liquidityPair",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5680:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5680:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5711:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5711:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5670:58:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "amountTokenA",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5747:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5747:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amountTokenB",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5766:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5746:38:4"
									},
									"scope": 1574,
									"src": "5645:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "6421:734:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "pairA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "6439:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6456:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6448:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 928,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6448:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6448:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6439:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6460:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2779eff898f898effcf0aa56dae8e93db6d4db04eea06f78f89cd9d6340eca68",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0\""
															},
															"value": "KalyswapBridgeMigrationRouter: liquidityPairFrom address 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2779eff898f898effcf0aa56dae8e93db6d4db04eea06f78f89cd9d6340eca68",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0\""
															}
														],
														"id": 926,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "6431:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 937,
																"name": "pairA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "6539:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6556:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6548:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 938,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6548:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6539:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6560:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3644c735b72355dd1872214f8cef876b6ab448ac1dcde51a78aae8776c79ea0",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0\""
															},
															"value": "KalyswapBridgeMigrationRouter: liquidityPairTo address 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3644c735b72355dd1872214f8cef876b6ab448ac1dcde51a78aae8776c79ea0",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6531:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6531:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "6531:88:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 947,
																"name": "pairA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "6637:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 948,
																"name": "pairB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "6646:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6637:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a2043616e7420636f6e7665727420746f207468652073616d65206c6971756964697479207061697273",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6653:73:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2386eadbfa1ec37b2bd48e593f37c43c952d063ca4685d6d4e6b987ed53095cd",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Cant convert to the same liquidity pairs\""
															},
															"value": "KalyswapBridgeMigrationRouter: Cant convert to the same liquidity pairs"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2386eadbfa1ec37b2bd48e593f37c43c952d063ca4685d6d4e6b987ed53095cd",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Cant convert to the same liquidity pairs\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6629:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "6629:98:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 955,
																							"name": "pairA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "6772:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 954,
																						"name": "IKalyswapPair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 422,
																						"src": "6758:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																							"typeString": "type(contract IKalyswapPair)"
																						}
																					},
																					"id": 956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6758:20:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																						"typeString": "contract IKalyswapPair"
																					}
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 350,
																				"src": "6758:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6758:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 960,
																							"name": "pairB",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 923,
																							"src": "6805:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 959,
																						"name": "IKalyswapPair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 422,
																						"src": "6791:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																							"typeString": "type(contract IKalyswapPair)"
																						}
																					},
																					"id": 961,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6791:20:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																						"typeString": "contract IKalyswapPair"
																					}
																				},
																				"id": 962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 350,
																				"src": "6791:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6791:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6758:62:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 966,
																							"name": "pairA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "6850:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 965,
																						"name": "IKalyswapPair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 422,
																						"src": "6836:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																							"typeString": "type(contract IKalyswapPair)"
																						}
																					},
																					"id": 967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6836:20:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																						"typeString": "contract IKalyswapPair"
																					}
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 350,
																				"src": "6836:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6836:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 971,
																							"name": "pairB",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 923,
																							"src": "6883:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 970,
																						"name": "IKalyswapPair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 422,
																						"src": "6869:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																							"typeString": "type(contract IKalyswapPair)"
																						}
																					},
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6869:20:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																						"typeString": "contract IKalyswapPair"
																					}
																				},
																				"id": 973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 355,
																				"src": "6869:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6869:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6836:62:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6758:140:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 978,
																						"name": "pairA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "6928:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 977,
																					"name": "IKalyswapPair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "6914:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																						"typeString": "type(contract IKalyswapPair)"
																					}
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6914:20:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																					"typeString": "contract IKalyswapPair"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 355,
																			"src": "6914:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6914:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 983,
																						"name": "pairB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 923,
																						"src": "6961:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 982,
																					"name": "IKalyswapPair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "6947:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																						"typeString": "type(contract IKalyswapPair)"
																					}
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6947:20:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																					"typeString": "contract IKalyswapPair"
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 350,
																			"src": "6947:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6947:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6914:62:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6758:218:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 990,
																					"name": "pairA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "7006:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 989,
																				"name": "IKalyswapPair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 422,
																				"src": "6992:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																					"typeString": "type(contract IKalyswapPair)"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6992:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																				"typeString": "contract IKalyswapPair"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "6992:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6992:29:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 995,
																					"name": "pairB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 923,
																					"src": "7039:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 994,
																				"name": "IKalyswapPair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 422,
																				"src": "7025:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																					"typeString": "type(contract IKalyswapPair)"
																				}
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7025:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																				"typeString": "contract IKalyswapPair"
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "7025:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7025:29:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6992:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6758:296:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f6573206e6f742068617665206f6e6520746f6b656e206d61746368696e67",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7068:70:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8ed0d259757db98fff877ed18290c2e4ef438aefbcbb3f6867ba133df0a875d",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Pair does not have one token matching\""
															},
															"value": "KalyswapBridgeMigrationRouter: Pair does not have one token matching"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8ed0d259757db98fff877ed18290c2e4ef438aefbcbb3f6867ba133df0a875d",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Pair does not have one token matching\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6737:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6737:411:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "6737:411:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5978:365:4",
										"text": " @notice Internal function that checks if the minimum requirements are met to accept the pairs to migrate\n @dev This function makes the main function(migrateLiquidity) cleaner, this function can revert the transaction\n @param pairA The pair that is going to be migrated from\n @param pairB The pair that is going to be migrated to"
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_arePairsCompatible",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "pairA",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "6377:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "pairB",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "6392:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6376:30:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:4"
									},
									"scope": 1574,
									"src": "6348:807:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "7584:390:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "7602:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7626:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7618:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7618:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7618:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7602:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a20746f6b656e416464726573732030206e6f7420737570706f72746564",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7630:61:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\""
															},
															"value": "KalyswapBridgeMigrationRouter: tokenAddress 0 not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d984e50f0a68e3b3b3f36266bdb577070edfb604f683a0d41f604c350418d44",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: tokenAddress 0 not supported\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7594:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7594:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "7594:98:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "7750:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "7764:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1024,
																		"name": "bridgeMigrator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "7715:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1026,
																	"indexExpression": {
																		"id": 1025,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "7730:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7715:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1023,
																"name": "IBridgeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "7702:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBridgeToken_$1594_$",
																	"typeString": "type(contract IBridgeToken)"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7702:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBridgeToken_$1594",
																"typeString": "contract IBridgeToken"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1586,
														"src": "7702:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7702:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "7702:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1042,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7863:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																					"typeString": "contract KalyswapBridgeMigrationRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																					"typeString": "contract KalyswapBridgeMigrationRouter"
																				}
																			],
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7855:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1040,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7855:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7855:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1035,
																					"name": "bridgeMigrator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "7815:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																						"typeString": "mapping(address => address)"
																					}
																				},
																				"id": 1037,
																				"indexExpression": {
																					"id": 1036,
																					"name": "tokenAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "7830:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7815:28:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1034,
																			"name": "IBridgeToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "7802:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBridgeToken_$1594_$",
																				"typeString": "type(contract IBridgeToken)"
																			}
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7802:42:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBridgeToken_$1594",
																			"typeString": "contract IBridgeToken"
																		}
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "7802:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7802:67:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1045,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "7873:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7802:77:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a204469646e2774207969656c642074686520636f727265637420616d6f756e74",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7893:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20f37cd99da92a5efeb292e424950a5326eaec74b790503092d9fc76b12f685f",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Didn't yield the correct amount\""
															},
															"value": "KalyswapBridgeMigrationRouter: Didn't yield the correct amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20f37cd99da92a5efeb292e424950a5326eaec74b790503092d9fc76b12f685f",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Didn't yield the correct amount\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7781:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7781:186:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "7781:186:4"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "7161:329:4",
										"text": " @notice Internal function that implements the token migration\n @dev This function only checks if the expected balance was received, it doesn't check for migrator existance\n @param tokenAddress The ERC20 token address that will be migrated\n @param amount The amount of the token to be migrated"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_migrateToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "7527:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "7557:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7557:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7517:57:4"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7584:0:4"
									},
									"scope": 1574,
									"src": "7495:479:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "8534:346:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1067,
																	"name": "bridgeMigrator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "8565:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1069,
																"indexExpression": {
																	"id": 1068,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "8580:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8565:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8598:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8590:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1070,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8590:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8590:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8565:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206d69677261746f72206e6f742072656769737465726564",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8614:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddde50f1cae8853e86ca4100759dc699a86a58cbbaac272e74d5c0bdd9991550",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: migrator not registered\""
															},
															"value": "KalyswapBridgeMigrationRouter: migrator not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddde50f1cae8853e86ca4100759dc699a86a58cbbaac272e74d5c0bdd9991550",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: migrator not registered\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8544:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8544:136:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "8544:136:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "8722:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1082,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8729:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8729:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8749:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																		"typeString": "contract KalyswapBridgeMigrationRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																		"typeString": "contract KalyswapBridgeMigrationRouter"
																	}
																],
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8741:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1084,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8741:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8741:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "8756:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1078,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "8690:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 556,
														"src": "8690:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "8690:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "8787:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "8794:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "_migrateToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "8773:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8773:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "8773:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1099,
																"name": "bridgeMigrator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8839:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1101,
															"indexExpression": {
																"id": 1100,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "8854:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8839:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "8862:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "8866:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1096,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "8811:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "8811:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8811:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "8811:62:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "7980:408:4",
										"text": " @notice Front facing function that migrates the token\n @dev This function includes important checks\n @param token The ERC20 token address that will be migrated\n @param to The address of who's receiving the token\n @param amount The amount of the token to be migrated\n @param deadline The deadline limit that should be met, otherwise revert to prevent front-run"
									},
									"functionSelector": "f057d237",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1063,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "8524:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1064,
											"modifierName": {
												"id": 1062,
												"name": "ensure",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 626,
												"src": "8517:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8517:16:4"
										}
									],
									"name": "migrateToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "8424:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8424:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "8447:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "8467:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8467:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "8488:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8488:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8414:93:4"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8534:0:4"
									},
									"scope": 1574,
									"src": "8393:487:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "9793:243:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9843:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9843:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1138,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9863:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																		"typeString": "contract KalyswapBridgeMigrationRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KalyswapBridgeMigrationRouter_$1574",
																		"typeString": "contract KalyswapBridgeMigrationRouter"
																	}
																],
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9855:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1136,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9855:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9855:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "9870:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1141,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "9878:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1142,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "9888:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1143,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "9891:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1144,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "9894:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1131,
																	"name": "liquidityPairFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "9817:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1130,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "9803:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9803:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "9803:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9803:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "9803:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "liquidityPairFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "9937:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "liquidityPairTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "9968:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "9997:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "10013:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "_migrateLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "9906:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9906:123:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "9906:123:4"
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "8886:663:4",
										"text": " @notice Front facing function that migrates the liquidity, with permit\n @param liquidityPairFrom The pair address to be migrated from\n @param liquidityPairTo The pair address to be migrated to\n @param to The address that will receive the liquidity and the charge backs\n @param amount The amount of token liquidityPairFrom that will be migrated\n @param deadline The deadline limit that should be met, otherwise revert to prevent front-run\n @param v by passing param for the permit validation\n @param r by passing param for the permit validation\n @param s by passing param for the permit validation"
									},
									"functionSelector": "b032fff7",
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1127,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1118,
													"src": "9783:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1128,
											"modifierName": {
												"id": 1126,
												"name": "ensure",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 626,
												"src": "9776:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9776:16:4"
										}
									],
									"name": "migrateLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "liquidityPairFrom",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9599:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9599:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "liquidityPairTo",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9634:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9667:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9687:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9708:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9708:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9731:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1119,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9731:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9740:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9740:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9751:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:177:4"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9793:0:4"
									},
									"scope": 1574,
									"src": "9554:482:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "10792:140:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1173,
															"name": "liquidityPairFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "10833:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "liquidityPairTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "10864:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "10893:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "10909:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1172,
														"name": "_migrateLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "10802:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10802:123:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "10802:123:4"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "10042:555:4",
										"text": " @notice Front facing function that migrates the liquidity\n @dev This function assumes sender already gave approval to move the assets\n @param liquidityPairFrom The pair address to be migrated from\n @param liquidityPairTo The pair address to be migrated to\n @param to The address that will receive the liquidity and the charge backs\n @param amount The amount of token liquidityPairFrom that will be migrated\n @param deadline The deadline limit that should be met, otherwise revert to prevent front-run"
									},
									"functionSelector": "495952f5",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1169,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1166,
													"src": "10782:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1170,
											"modifierName": {
												"id": 1168,
												"name": "ensure",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 626,
												"src": "10775:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10775:16:4"
										}
									],
									"name": "migrateLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "liquidityPairFrom",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "10637:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "liquidityPairTo",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "10672:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "10705:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "10725:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10725:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "10746:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10746:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10627:138:4"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10792:0:4"
									},
									"scope": 1574,
									"src": "10602:330:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "11561:2111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1193,
															"name": "liquidityPairFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "11591:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "liquidityPairTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "11610:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1192,
														"name": "_arePairsCompatible",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "11571:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) view"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11571:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "11571:55:4"
											},
											{
												"assignments": [
													1198
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "tokenToMigrate",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "11636:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1197,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11636:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1200,
																	"name": "liquidityPairFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "11675:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1199,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "11661:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11661:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 350,
														"src": "11661:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11661:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11636:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1206,
																			"name": "liquidityPairFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "11743:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1205,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "11729:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11729:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "11729:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11729:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1211,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "11788:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1210,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "11774:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11774:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "11774:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11774:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11729:84:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1217,
																			"name": "liquidityPairFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "11843:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1216,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "11829:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11829:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "11829:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11829:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1222,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "11888:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1221,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "11874:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11874:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 355,
																"src": "11874:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11874:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11829:84:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11729:184:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "IfStatement",
												"src": "11712:295:4",
												"trueBody": {
													"id": 1236,
													"nodeType": "Block",
													"src": "11924:83:4",
													"statements": [
														{
															"expression": {
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1228,
																	"name": "tokenToMigrate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "11938:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1230,
																					"name": "liquidityPairFrom",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "11969:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1229,
																				"name": "IKalyswapPair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 422,
																				"src": "11955:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																					"typeString": "type(contract IKalyswapPair)"
																				}
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11955:32:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																				"typeString": "contract IKalyswapPair"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "11955:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11955:41:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11938:58:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "11938:58:4"
														}
													]
												}
											},
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "newTokenAddress",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "12016:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12016:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"baseExpression": {
														"id": 1240,
														"name": "bridgeMigrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "12042:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1242,
													"indexExpression": {
														"id": 1241,
														"name": "tokenToMigrate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "12057:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12042:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12016:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "newTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "12103:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12130:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12122:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1246,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12122:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12122:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12103:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a204d69677261746f72206e6f74207265676973746572656420666f72207468652070616972",
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12146:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3ea15ec7964d97f4fca03ff0a261f494af166a8c1b012c373fddb2447a896d1",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Migrator not registered for the pair\""
															},
															"value": "KalyswapBridgeMigrationRouter: Migrator not registered for the pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3ea15ec7964d97f4fca03ff0a261f494af166a8c1b012c373fddb2447a896d1",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Migrator not registered for the pair\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12082:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12082:143:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "12082:143:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "newTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "12256:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1257,
																					"name": "liquidityPairTo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "12289:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1256,
																				"name": "IKalyswapPair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 422,
																				"src": "12275:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																					"typeString": "type(contract IKalyswapPair)"
																				}
																			},
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12275:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																				"typeString": "contract IKalyswapPair"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 350,
																		"src": "12275:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12275:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12256:58:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "newTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "12330:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1264,
																					"name": "liquidityPairTo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "12363:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1263,
																				"name": "IKalyswapPair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 422,
																				"src": "12349:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																					"typeString": "type(contract IKalyswapPair)"
																				}
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12349:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																				"typeString": "contract IKalyswapPair"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "12349:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12349:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12330:58:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12256:132:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a205061697220646f65736e2774206d6174636820746865206d6967726174696f6e20746f6b656e",
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12402:71:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d8ac38f6fc3450d3a0236480a1ba0d030f5fe1f648621299163fdf4fc11c5c7",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Pair doesn't match the migration token\""
															},
															"value": "KalyswapBridgeMigrationRouter: Pair doesn't match the migration token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d8ac38f6fc3450d3a0236480a1ba0d030f5fe1f648621299163fdf4fc11c5c7",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: Pair doesn't match the migration token\""
															}
														],
														"id": 1254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12235:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12235:248:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "12235:248:4"
											},
											{
												"assignments": [
													1274,
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "amountTokenA",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "12495:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12495:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "amountTokenB",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "12514:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12514:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"arguments": [
														{
															"id": 1278,
															"name": "liquidityPairFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "12552:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "12571:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1277,
														"name": "_rescueLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "12535:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12535:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12494:84:4"
											},
											{
												"id": 1304,
												"nodeType": "Block",
												"src": "12588:252:4",
												"statements": [
													{
														"assignments": [
															1283
														],
														"declarations": [
															{
																"constant": false,
																"id": 1283,
																"mutability": "mutable",
																"name": "amountToSwap",
																"nodeType": "VariableDeclaration",
																"scope": 1304,
																"src": "12602:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1282,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12602:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1285,
														"initialValue": {
															"id": 1284,
															"name": "amountTokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "12622:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12602:32:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1286,
																"name": "tokenToMigrate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "12652:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1288,
																				"name": "liquidityPairFrom",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "12684:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1287,
																			"name": "IKalyswapPair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "12670:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																				"typeString": "type(contract IKalyswapPair)"
																			}
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12670:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																			"typeString": "contract IKalyswapPair"
																		}
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 350,
																	"src": "12670:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12670:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12652:59:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1298,
														"nodeType": "IfStatement",
														"src": "12648:125:4",
														"trueBody": {
															"id": 1297,
															"nodeType": "Block",
															"src": "12713:60:4",
															"statements": [
																{
																	"expression": {
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1293,
																			"name": "amountToSwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "12731:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1294,
																			"name": "amountTokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "12746:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12731:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1296,
																	"nodeType": "ExpressionStatement",
																	"src": "12731:27:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1300,
																	"name": "tokenToMigrate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "12800:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1301,
																	"name": "amountToSwap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "12816:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1299,
																"name": "_migrateToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "12786:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,uint256)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12786:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1303,
														"nodeType": "ExpressionStatement",
														"src": "12786:43:4"
													}
												]
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1306,
																			"name": "liquidityPairFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "12867:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1305,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "12853:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12853:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "12853:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12853:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1311,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "12912:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1310,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "12898:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12898:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "12898:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12898:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12853:84:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1317,
																			"name": "liquidityPairFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "12967:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1316,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "12953:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12953:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 355,
																"src": "12953:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12953:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1322,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "13012:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1321,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "12998:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12998:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 355,
																"src": "12998:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12998:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12953:84:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12853:184:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "12849:283:4",
												"trueBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "13048:84:4",
													"statements": [
														{
															"expression": {
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1328,
																			"name": "amountTokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "13063:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1329,
																			"name": "amountTokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "13077:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1330,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "13062:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1331,
																			"name": "amountTokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "13094:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1332,
																			"name": "amountTokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "13108:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13093:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "13062:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "13062:59:4"
														}
													]
												}
											},
											{
												"assignments": [
													1339,
													1341,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "changeAmount0",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "13143:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1338,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13143:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "changeAmount1",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "13163:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1340,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13163:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1358,
												"initialValue": {
													"arguments": [
														{
															"id": 1343,
															"name": "liquidityPairTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "13214:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1345,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "13257:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1344,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "13243:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13243:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "13243:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13243:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1350,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "13298:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1349,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "13284:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13284:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 355,
																"src": "13284:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13284:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1354,
															"name": "amountTokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "13337:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1355,
															"name": "amountTokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "13351:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1356,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "13365:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1342,
														"name": "_addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "13187:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,address,uint256,uint256,address) returns (uint256,uint256,uint256)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13187:190:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13142:235:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1359,
														"name": "changeAmount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "13391:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13407:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13391:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1375,
												"nodeType": "IfStatement",
												"src": "13387:135:4",
												"trueBody": {
													"id": 1374,
													"nodeType": "Block",
													"src": "13410:112:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1366,
																						"name": "liquidityPairTo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1185,
																						"src": "13466:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1365,
																					"name": "IKalyswapPair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "13452:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																						"typeString": "type(contract IKalyswapPair)"
																					}
																				},
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13452:30:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																					"typeString": "contract IKalyswapPair"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 350,
																			"src": "13452:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13452:39:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1370,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "13493:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1371,
																		"name": "changeAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "13497:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1362,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "13424:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 510,
																	"src": "13424:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13424:87:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1373,
															"nodeType": "ExpressionStatement",
															"src": "13424:87:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1376,
														"name": "changeAmount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "13535:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13551:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13535:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "13531:135:4",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "13554:112:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1383,
																						"name": "liquidityPairTo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1185,
																						"src": "13610:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1382,
																					"name": "IKalyswapPair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "13596:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																						"typeString": "type(contract IKalyswapPair)"
																					}
																				},
																				"id": 1384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13596:30:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																					"typeString": "contract IKalyswapPair"
																				}
																			},
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 355,
																			"src": "13596:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13596:39:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1387,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "13637:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1388,
																		"name": "changeAmount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "13641:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1379,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "13568:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$582_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 510,
																	"src": "13568:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13568:87:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1390,
															"nodeType": "ExpressionStatement",
															"src": "13568:87:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "10938:467:4",
										"text": " @notice This was extracted into a internal method to use with both migrateLiquidity and with permit\n @dev This function includes important checks\n @param liquidityPairFrom The pair address to be migrated from\n @param liquidityPairTo The pair address to be migrated to\n @param to The address that will receive the liquidity and the charge backs\n @param amount The amount of token liquidityPairFrom that will be migrated"
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_migrateLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "liquidityPairFrom",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11446:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "liquidityPairTo",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11481:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11481:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11514:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11514:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11534:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11534:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11436:115:4"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11561:0:4"
									},
									"scope": 1574,
									"src": "11410:2262:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "14340:279:4",
										"statements": [
											{
												"assignments": [
													1407,
													1409,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "reserves0",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "14351:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1406,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "14351:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "reserves1",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "14370:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1408,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "14370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1415,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1411,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "14407:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1410,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "14393:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14393:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "14393:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14393:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14350:83:4"
											},
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "14443:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1416,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14443:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1419,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "14476:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1418,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "14462:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14462:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "14462:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14462:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14443:59:4"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "14512:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1427,
																	"name": "reserves0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "14533:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"id": 1425,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "14522:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "14522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14522:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1429,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "14546:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14522:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14512:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "14512:45:4"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1433,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "14567:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1436,
																	"name": "reserves1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "14588:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"id": 1434,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "14577:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "14577:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14577:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1438,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "14601:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14577:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14567:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "14567:45:4"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "13678:537:4",
										"text": " @notice Internal function that simulates the amount received from the liquidity burn\n @dev This function is a support function that can be used by the front-end to show possible charge back\n @param pairAddress The pair address that will be burned(simulated)\n @param amount The amount of the liquidity token to be burned(simulated)\n @return amount0 Amounts of token0 acquired from burning the pairAddress token\n @return amount1 Amounts of token1 acquired from burning the pairAddress token"
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateRescueLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "pairAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "14255:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "14276:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14276:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14254:34:4"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "14312:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14312:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "14326:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14326:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14311:28:4"
									},
									"scope": 1574,
									"src": "14220:399:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "15396:1062:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "liquidityPairFrom",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "15414:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15443:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15435:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15435:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15435:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15414:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c69717569646974795061697246726f6d20616464726573732030206e6f7420737570706f72746564",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15447:74:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_200248fc6ca52a59603938cda7204781ce09d1bfbab0ded816a7da12334c83d7",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0 not supported\""
															},
															"value": "KalyswapBridgeMigrationRouter: liquidityPairFrom address 0 not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_200248fc6ca52a59603938cda7204781ce09d1bfbab0ded816a7da12334c83d7",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairFrom address 0 not supported\""
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15406:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15406:116:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "15406:116:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1468,
																"name": "liquidityPairTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "15540:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15567:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15559:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15559:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15559:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15540:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704272696467654d6967726174696f6e526f757465723a206c697175696469747950616972546f20616464726573732030206e6f7420737570706f72746564",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15571:72:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55b0696d49f993eb1ace324d5663bb2fcaf6a2e9adf7d970b2aa88f8e8484c73",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0 not supported\""
															},
															"value": "KalyswapBridgeMigrationRouter: liquidityPairTo address 0 not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55b0696d49f993eb1ace324d5663bb2fcaf6a2e9adf7d970b2aa88f8e8484c73",
																"typeString": "literal_string \"KalyswapBridgeMigrationRouter: liquidityPairTo address 0 not supported\""
															}
														],
														"id": 1467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15532:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15532:112:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "15532:112:4"
											},
											{
												"assignments": [
													1478,
													1480
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "amountIn0",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "15655:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1477,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15655:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "amountIn1",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "15671:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1479,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15671:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"arguments": [
														{
															"id": 1482,
															"name": "liquidityPairFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "15715:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "15734:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1481,
														"name": "_calculateRescueLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "15689:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256,uint256)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15689:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15654:87:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1487,
																			"name": "liquidityPairFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "15769:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1486,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "15755:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15755:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "15755:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15755:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1492,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "15814:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1491,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "15800:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15800:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "15800:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15800:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15755:84:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "liquidityPairFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "15869:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1497,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "15855:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15855:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 355,
																"src": "15855:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15855:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1503,
																			"name": "liquidityPairTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "15914:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1502,
																		"name": "IKalyswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "15900:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																			"typeString": "type(contract IKalyswapPair)"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15900:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																		"typeString": "contract IKalyswapPair"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 355,
																"src": "15900:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15900:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15855:84:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15755:184:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "15751:271:4",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "15950:72:4",
													"statements": [
														{
															"expression": {
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1509,
																			"name": "amountIn0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "15965:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1510,
																			"name": "amountIn1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "15976:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1511,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "15964:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1512,
																			"name": "amountIn1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "15990:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1513,
																			"name": "amountIn0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "16001:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1514,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15989:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "15964:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "15964:47:4"
														}
													]
												}
											},
											{
												"assignments": [
													1520,
													1522,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "16032:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1519,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "16032:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "16050:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1521,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "16050:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1528,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1524,
																	"name": "liquidityPairTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "16085:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1523,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "16071:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16071:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "16071:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16071:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16031:84:4"
											},
											{
												"assignments": [
													1530
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "quote0",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "16125:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1529,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16125:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"id": 1531,
													"name": "amountIn0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1478,
													"src": "16139:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16125:23:4"
											},
											{
												"assignments": [
													1534
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "quote1",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "16158:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1533,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16158:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1541,
												"initialValue": {
													"arguments": [
														{
															"id": 1537,
															"name": "amountIn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "16194:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1538,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "16205:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"id": 1539,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "16215:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"id": 1535,
															"name": "KalyswapLibrary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "16172:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_KalyswapLibrary_$2067_$",
																"typeString": "type(library KalyswapLibrary)"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "quote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1780,
														"src": "16172:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16172:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16158:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1542,
														"name": "quote1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "16238:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1543,
														"name": "amountIn1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "16247:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16238:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "16234:142:4",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "16258:118:4",
													"statements": [
														{
															"expression": {
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1545,
																	"name": "quote1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "16272:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1546,
																	"name": "amountIn1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "16281:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16272:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1548,
															"nodeType": "ExpressionStatement",
															"src": "16272:18:4"
														},
														{
															"expression": {
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1549,
																	"name": "quote0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "16304:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1552,
																			"name": "amountIn1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "16335:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1553,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "16346:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		},
																		{
																			"id": 1554,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "16356:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			},
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"expression": {
																			"id": 1550,
																			"name": "KalyswapLibrary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2067,
																			"src": "16313:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_KalyswapLibrary_$2067_$",
																				"typeString": "type(library KalyswapLibrary)"
																			}
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "quote",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1780,
																		"src": "16313:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16313:52:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16304:61:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1557,
															"nodeType": "ExpressionStatement",
															"src": "16304:61:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1560,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "16385:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1561,
															"name": "amountIn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "16395:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1562,
															"name": "quote0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "16407:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16395:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16385:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "16385:28:4"
											},
											{
												"expression": {
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1566,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "16423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1567,
															"name": "amountIn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "16433:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1568,
															"name": "quote1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "16445:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16433:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16423:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "16423:28:4"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "14625:591:4",
										"text": " @notice Front facing function that computes the possible charge back from the migration\n @dev No need to be extra careful as this is only a view function\n @param liquidityPairFrom The pair address that will be migrated from(simulated)\n @param liquidityPairTo The pair address that will be migrated to(simulated)\n @param amount The amount of the liquidity token to be migrated(simulated)\n @return amount0 Amount of token0 will be charged back after the migration\n @return amount1 Amount of token1 will be charged back after the migration"
									},
									"functionSelector": "99a0df82",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateChargeBack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "liquidityPairFrom",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "15259:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15259:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "liquidityPairTo",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "15294:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "15327:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15327:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15249:95:4"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "15368:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15368:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "15382:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15382:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15367:28:4"
									},
									"scope": 1574,
									"src": "15221:1237:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1575,
							"src": "252:16209:4"
						}
					],
					"src": "0:16461:4"
				},
				"id": 4
			},
			"CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-periphery/interfaces/IBridgeToken.sol",
					"exportedSymbols": {
						"IBridgeToken": [
							1594
						],
						"IKalyswapERC20": [
							117
						]
					},
					"id": 1595,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1576,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapERC20.sol",
							"file": "../../kalyswap-core/interfaces/IKalyswapERC20.sol",
							"id": 1577,
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 118,
							"src": "26:59:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1578,
										"name": "IKalyswapERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 117,
										"src": "113:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKalyswapERC20_$117",
											"typeString": "contract IKalyswapERC20"
										}
									},
									"id": 1579,
									"nodeType": "InheritanceSpecifier",
									"src": "113:14:5"
								}
							],
							"contractDependencies": [
								117
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1594,
							"linearizedBaseContracts": [
								1594,
								117
							],
							"name": "IBridgeToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d004f0f7",
									"id": 1586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "148:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "163:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:31:5"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:5"
									},
									"scope": 1594,
									"src": "134:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ab32dbb7",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "213:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:15:5"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "251:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:9:5"
									},
									"scope": 1594,
									"src": "193:67:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1595,
							"src": "87:175:5"
						}
					],
					"src": "0:262:5"
				},
				"id": 5
			},
			"CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-periphery/libraries/KalyswapLibrary.sol",
					"exportedSymbols": {
						"IKalyswapFactory": [
							180
						],
						"IKalyswapPair": [
							422
						],
						"KalyswapLibrary": [
							2067
						],
						"SafeMath": [
							2227
						]
					},
					"id": 2068,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1596,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapFactory.sol",
							"file": "../../kalyswap-core/interfaces/IKalyswapFactory.sol",
							"id": 1597,
							"nodeType": "ImportDirective",
							"scope": 2068,
							"sourceUnit": 181,
							"src": "26:61:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoreContracts/kalyswap-core/interfaces/IKalyswapPair.sol",
							"file": "../../kalyswap-core/interfaces/IKalyswapPair.sol",
							"id": 1598,
							"nodeType": "ImportDirective",
							"scope": 2068,
							"sourceUnit": 423,
							"src": "88:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CoreContracts/kalyswap-periphery/libraries/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1599,
							"nodeType": "ImportDirective",
							"scope": 2068,
							"sourceUnit": 2228,
							"src": "148:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2067,
							"linearizedBaseContracts": [
								2067
							],
							"name": "KalyswapLibrary",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1602,
									"libraryName": {
										"id": 1600,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2227,
										"src": "210:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2227",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "204:24:6",
									"typeName": {
										"id": 1601,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "223:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "441:236:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1614,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "459:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1615,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "469:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "459:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a204944454e544943414c5f414444524553534553",
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "477:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_affda7322f5b5be1ab629127c6ad763b2cc175da15e3282efd26f0280fcd8b37",
																"typeString": "literal_string \"KalyswapLibrary: IDENTICAL_ADDRESSES\""
															},
															"value": "KalyswapLibrary: IDENTICAL_ADDRESSES"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_affda7322f5b5be1ab629127c6ad763b2cc175da15e3282efd26f0280fcd8b37",
																"typeString": "literal_string \"KalyswapLibrary: IDENTICAL_ADDRESSES\""
															}
														],
														"id": 1613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "451:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "451:65:6"
											},
											{
												"expression": {
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1620,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "527:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1621,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "535:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1622,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "526:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1623,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "545:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1624,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "554:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "545:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"id": 1629,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "583:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1630,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "591:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1631,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "582:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "545:53:6",
														"trueExpression": {
															"components": [
																{
																	"id": 1626,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "564:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1627,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "572:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "563:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"src": "526:72:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "526:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1636,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "616:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "634:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "626:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1637,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "626:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "626:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "616:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a205a45524f5f41444452455353",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "638:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3efaa719304f59d94eaf3cbaccd8db49a5cbc0abfb68b8f198b19389b20c44ea",
																"typeString": "literal_string \"KalyswapLibrary: ZERO_ADDRESS\""
															},
															"value": "KalyswapLibrary: ZERO_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3efaa719304f59d94eaf3cbaccd8db49a5cbc0abfb68b8f198b19389b20c44ea",
																"typeString": "literal_string \"KalyswapLibrary: ZERO_ADDRESS\""
															}
														],
														"id": 1635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "608:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "608:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "608:62:6"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sortTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "354:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:32:6"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "409:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "425:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:32:6"
									},
									"scope": 2067,
									"src": "334:343:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "869:367:6",
										"statements": [
											{
												"assignments": [
													1658,
													1660
												],
												"declarations": [
													{
														"constant": false,
														"id": 1658,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "880:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1657,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "880:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1660,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "896:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1659,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "896:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"arguments": [
														{
															"id": 1662,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "925:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "933:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1661,
														"name": "sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "914:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "879:61:6"
											},
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1666,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "950:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "ff",
																						"id": 1674,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1014:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						}
																					},
																					{
																						"id": 1675,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1648,
																						"src": "1039:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1679,
																										"name": "token0",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1658,
																										"src": "1091:6:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"id": 1680,
																										"name": "token1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1660,
																										"src": "1099:6:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1677,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "1074:3:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 1678,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "1074:16:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 1681,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1074:32:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1676,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "1064:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 1682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1064:43:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"hexValue": "40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545",
																						"id": 1683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1125:69:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_ddb1e4875836598a4d8840045ea7355ab6d06b2915790dd9f7243b1e0d8dbc39",
																							"typeString": "literal_string hex\"40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545\""
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_ddb1e4875836598a4d8840045ea7355ab6d06b2915790dd9f7243b1e0d8dbc39",
																							"typeString": "literal_string hex\"40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545\""
																						}
																					],
																					"expression": {
																						"id": 1672,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "980:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "980:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "980:246:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1671,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "970:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "970:257:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "965:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1669,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "965:4:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "965:263:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "957:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1667,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "957:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "957:272:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "950:279:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "950:279:6"
											}
										]
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "783:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "800:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:49:6"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "855:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:14:6"
									},
									"scope": 2067,
									"src": "766:470:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "1414:263:6",
										"statements": [
											{
												"assignments": [
													1705,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "1425:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1704,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1425:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1710,
												"initialValue": {
													"arguments": [
														{
															"id": 1707,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "1455:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1708,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "1463:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1706,
														"name": "sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "1444:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1424:46:6"
											},
											{
												"assignments": [
													1712,
													1714,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1712,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "1481:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1711,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1481:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "1496:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1496:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1724,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1717,
																			"name": "factory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1693,
																			"src": "1536:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1718,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1545:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1719,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "1553:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1716,
																		"name": "pairFor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "1528:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
																			"typeString": "function (address,address,address) pure returns (address)"
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1528:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1715,
																"name": "IKalyswapPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1514:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKalyswapPair_$422_$",
																	"typeString": "type(contract IKalyswapPair)"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1514:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKalyswapPair_$422",
																"typeString": "contract IKalyswapPair"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1514:59:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1480:95:6"
											},
											{
												"expression": {
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1725,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "1586:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1726,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "1596:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1727,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1585:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1728,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "1608:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1729,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1608:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"id": 1734,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "1651:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1735,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "1661:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1736,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1650:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1608:62:6",
														"trueExpression": {
															"components": [
																{
																	"id": 1731,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "1628:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1732,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "1638:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1733,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1627:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "1585:85:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "1585:85:6"
											}
										]
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1312:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1329:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1345:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:49:6"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1384:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1384:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1399:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:30:6"
									},
									"scope": 2067,
									"src": "1291:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "1883:219:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1753,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "1901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1911:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1901:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e53554646494349454e545f414d4f554e54",
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78840e091b36f1ae3c2e726985d3fca034feef7c212a1c9737acba643adee0ed",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_AMOUNT\""
															},
															"value": "KalyswapLibrary: INSUFFICIENT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78840e091b36f1ae3c2e726985d3fca034feef7c212a1c9737acba643adee0ed",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_AMOUNT\""
															}
														],
														"id": 1752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1893:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1893:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "1893:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1760,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "1971:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1982:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1971:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1763,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "1987:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1998:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1987:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1971:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2001:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "KalyswapLibrary: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "1963:80:6"
											},
											{
												"expression": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1770,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "2053:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1773,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "2075:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1771,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "2063:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "2063:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2063:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1775,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "2087:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2063:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2053:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "2053:42:6"
											}
										]
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1802:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1802:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1816:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1816:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1831:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1831:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1801:44:6"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1869:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1869:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:14:6"
									},
									"scope": 2067,
									"src": "1787:315:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "2330:399:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1792,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "2348:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2359:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2348:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2362:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e0c4f90e95b6476ec75f64011a8b45efc0942d23cfeb210d95b189260a1bd07",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "KalyswapLibrary: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e0c4f90e95b6476ec75f64011a8b45efc0942d23cfeb210d95b189260a1bd07",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2340:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "2340:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1799,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "2425:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2437:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2425:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1802,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "2442:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2455:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2442:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2425:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2458:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "KalyswapLibrary: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2417:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2417:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "2417:83:6"
											},
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "2510:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1809,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2510:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1815,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "393937",
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															}
														],
														"expression": {
															"id": 1811,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "2533:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2226,
														"src": "2533:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2510:40:6"
											},
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "numerator",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "2560:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1816,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2560:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"arguments": [
														{
															"id": 1820,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "2597:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1818,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "2577:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2226,
														"src": "2577:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2577:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2560:48:6"
											},
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "denominator",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "2618:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1823,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2618:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1832,
												"initialValue": {
													"arguments": [
														{
															"id": 1830,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "2661:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2651:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 1825,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "2637:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "2637:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2637:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2176,
														"src": "2637:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2637:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2618:59:6"
											},
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1833,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "2687:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1834,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "2699:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1835,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "2711:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2699:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2687:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "2687:35:6"
											}
										]
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "2243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2243:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "2258:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2258:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "2274:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2274:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:48:6"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "2314:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2314:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:16:6"
									},
									"scope": 2067,
									"src": "2221:508:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "2955:356:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "2973:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2985:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2973:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_785ac6fdfe4b7e430b8722c678adce81c4a810e27d12d15fc32e44f8922088bf",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "KalyswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_785ac6fdfe4b7e430b8722c678adce81c4a810e27d12d15fc32e44f8922088bf",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2965:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "2965:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1859,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "3052:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3064:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3052:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1862,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "3069:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3082:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3069:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3052:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e53554646494349454e545f4c4951554944495459",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3085:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "KalyswapLibrary: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9074bfdb993f0f76350cad6ff16b034dab298eea08ad462e08506031f49a76e1",
																"typeString": "literal_string \"KalyswapLibrary: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3044:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3044:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "3044:83:6"
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "numerator",
														"nodeType": "VariableDeclaration",
														"scope": 1899,
														"src": "3137:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1869,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3137:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1878,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1873,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "3168:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1871,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "3154:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2226,
																"src": "3154:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3154:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2226,
														"src": "3154:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3154:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3137:51:6"
											},
											{
												"assignments": [
													1880
												],
												"declarations": [
													{
														"constant": false,
														"id": 1880,
														"mutability": "mutable",
														"name": "denominator",
														"nodeType": "VariableDeclaration",
														"scope": 1899,
														"src": "3198:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1879,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3198:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1888,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "393937",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3247:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1883,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "3232:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1881,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "3217:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2198,
																"src": "3217:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3217:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2226,
														"src": "3217:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3217:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3198:53:6"
											},
											{
												"expression": {
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1889,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "3261:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3302:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1890,
																			"name": "numerator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "3273:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1891,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1880,
																			"src": "3285:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3273:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3272:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2176,
															"src": "3272:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3272:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3261:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "3261:43:6"
											}
										]
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "2868:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "2884:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2884:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "2900:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2900:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:49:6"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "2940:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2940:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:15:6"
									},
									"scope": 2067,
									"src": "2847:464:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "3514:378:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1914,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "3532:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3532:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3547:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3532:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e56414c49445f50415448",
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3550:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b3f6095d6a3f7d972ea36ff43eea84f38ec9a32e06848b8329c28a35322c01f",
																"typeString": "literal_string \"KalyswapLibrary: INVALID_PATH\""
															},
															"value": "KalyswapLibrary: INVALID_PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b3f6095d6a3f7d972ea36ff43eea84f38ec9a32e06848b8329c28a35322c01f",
																"typeString": "literal_string \"KalyswapLibrary: INVALID_PATH\""
															}
														],
														"id": 1913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "3524:58:6"
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1921,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "3592:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1925,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "3613:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3613:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3602:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1922,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "3606:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1923,
																"nodeType": "ArrayTypeName",
																"src": "3606:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "3592:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "3592:33:6"
											},
											{
												"expression": {
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1930,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "3635:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1932,
														"indexExpression": {
															"hexValue": "30",
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3643:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3635:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1933,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "3648:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3635:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "3635:21:6"
											},
											{
												"body": {
													"id": 1978,
													"nodeType": "Block",
													"src": "3705:181:6",
													"statements": [
														{
															"assignments": [
																1949,
																1951
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1949,
																	"mutability": "mutable",
																	"name": "reserveIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 1978,
																	"src": "3720:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1948,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3720:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1951,
																	"mutability": "mutable",
																	"name": "reserveOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 1978,
																	"src": "3736:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1950,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3736:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1963,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1953,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "3767:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1954,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "3776:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1956,
																		"indexExpression": {
																			"id": 1955,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "3781:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3776:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1957,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "3785:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1961,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1958,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1937,
																				"src": "3790:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3794:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3790:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3785:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1952,
																	"name": "getReserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "3755:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (address,address,address) view returns (uint256,uint256)"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3755:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3719:78:6"
														},
														{
															"expression": {
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1964,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "3811:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1968,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1965,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "3819:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3823:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3819:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3811:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1970,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1911,
																				"src": "3841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1972,
																			"indexExpression": {
																				"id": 1971,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1937,
																				"src": "3849:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3841:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1973,
																			"name": "reserveIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1949,
																			"src": "3853:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1974,
																			"name": "reserveOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1951,
																			"src": "3864:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1969,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "3828:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3828:47:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3811:64:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1977,
															"nodeType": "ExpressionStatement",
															"src": "3811:64:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1939,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1937,
														"src": "3679:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1940,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "3683:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3683:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3697:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3683:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3679:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1979,
												"initializationExpression": {
													"assignments": [
														1937
													],
													"declarations": [
														{
															"constant": false,
															"id": 1937,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1979,
															"src": "3671:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1936,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3671:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1938,
													"nodeType": "VariableDeclarationStatement",
													"src": "3671:6:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3700:3:6",
														"subExpression": {
															"id": 1945,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "3700:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1947,
													"nodeType": "ExpressionStatement",
													"src": "3700:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3666:220:6"
											}
										]
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3413:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3413:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3430:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3430:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3445:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1905,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3445:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1906,
													"nodeType": "ArrayTypeName",
													"src": "3445:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:55:6"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3491:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1909,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3491:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1910,
													"nodeType": "ArrayTypeName",
													"src": "3491:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:23:6"
									},
									"scope": 2067,
									"src": "3390:502:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "4094:399:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1995,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "4112:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4112:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4127:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4112:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b616c79737761704c6962726172793a20494e56414c49445f50415448",
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4130:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b3f6095d6a3f7d972ea36ff43eea84f38ec9a32e06848b8329c28a35322c01f",
																"typeString": "literal_string \"KalyswapLibrary: INVALID_PATH\""
															},
															"value": "KalyswapLibrary: INVALID_PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b3f6095d6a3f7d972ea36ff43eea84f38ec9a32e06848b8329c28a35322c01f",
																"typeString": "literal_string \"KalyswapLibrary: INVALID_PATH\""
															}
														],
														"id": 1994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4104:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4104:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "4104:58:6"
											},
											{
												"expression": {
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2002,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "4172:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2006,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "4193:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4193:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4182:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2003,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "4186:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2004,
																"nodeType": "ArrayTypeName",
																"src": "4186:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4182:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4172:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "4172:33:6"
											},
											{
												"expression": {
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2011,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "4215:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2016,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2012,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "4223:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4223:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4240:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4223:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4215:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2017,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "4245:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4215:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "4215:39:6"
											},
											{
												"body": {
													"id": 2063,
													"nodeType": "Block",
													"src": "4307:180:6",
													"statements": [
														{
															"assignments": [
																2034,
																2036
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2034,
																	"mutability": "mutable",
																	"name": "reserveIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 2063,
																	"src": "4322:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2033,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4322:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2036,
																	"mutability": "mutable",
																	"name": "reserveOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 2063,
																	"src": "4338:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2035,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4338:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2048,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2038,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "4369:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2039,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1988,
																			"src": "4378:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2043,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2040,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2021,
																				"src": "4383:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4387:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4383:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4378:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2044,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1988,
																			"src": "4391:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2046,
																		"indexExpression": {
																			"id": 2045,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "4396:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4391:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2037,
																	"name": "getReserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "4357:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (address,address,address) view returns (uint256,uint256)"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4357:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4321:78:6"
														},
														{
															"expression": {
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2049,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "4413:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2053,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2050,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "4421:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4425:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4421:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4413:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2055,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1992,
																				"src": "4442:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2057,
																			"indexExpression": {
																				"id": 2056,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2021,
																				"src": "4450:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4442:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2058,
																			"name": "reserveIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2034,
																			"src": "4454:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2059,
																			"name": "reserveOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "4465:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2054,
																		"name": "getAmountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1900,
																		"src": "4430:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4430:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4413:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2062,
															"nodeType": "ExpressionStatement",
															"src": "4413:63:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2027,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "4295:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4299:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4295:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2064,
												"initializationExpression": {
													"assignments": [
														2021
													],
													"declarations": [
														{
															"constant": false,
															"id": 2021,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2064,
															"src": "4269:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2020,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4269:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2026,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2022,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "4278:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4278:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4292:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4278:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4269:24:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "4302:3:6",
														"subExpression": {
															"id": 2030,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "4302:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2032,
													"nodeType": "ExpressionStatement",
													"src": "4302:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4264:223:6"
											}
										]
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "3992:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "4009:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4009:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "4025:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1986,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4025:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1987,
													"nodeType": "ArrayTypeName",
													"src": "4025:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:56:6"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "4071:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1990,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "4071:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1991,
													"nodeType": "ArrayTypeName",
													"src": "4071:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:23:6"
									},
									"scope": 2067,
									"src": "3970:523:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2068,
							"src": "174:4321:6"
						}
					],
					"src": "0:4496:6"
				},
				"id": 6
			},
			"CoreContracts/kalyswap-periphery/libraries/Roles.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-periphery/libraries/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							2152
						]
					},
					"id": 2153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2069,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2152,
							"linearizedBaseContracts": [
								2152
							],
							"name": "Roles",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 2074,
									"members": [
										{
											"constant": false,
											"id": 2073,
											"mutability": "mutable",
											"name": "bearer",
											"nodeType": "VariableDeclaration",
											"scope": 2074,
											"src": "99:31:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 2072,
												"keyType": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "99:24:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 2071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nodeType": "StructDefinition",
									"scope": 2152,
									"src": "77:60:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "266:117:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "284:19:7",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2084,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "289:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 2085,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "295:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2083,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "285:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "285:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "305:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															},
															"value": "Roles: account already has role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															}
														],
														"id": 2082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "276:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "276:63:7"
											},
											{
												"expression": {
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2091,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "349:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2073,
															"src": "349:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2095,
														"indexExpression": {
															"id": 2093,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "361:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "349:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "372:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "349:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2098,
												"nodeType": "ExpressionStatement",
												"src": "349:27:7"
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "143:60:7",
										"text": " @dev Give an account access to this role."
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "221:17:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 2076,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2074,
													"src": "221:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "240:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:36:7"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:7"
									},
									"scope": 2152,
									"src": "208:175:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "519:119:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2110,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "541:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 2111,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2109,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "537:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2074_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "537:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "557:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															},
															"value": "Roles: account does not have role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															}
														],
														"id": 2108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "529:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "529:64:7"
											},
											{
												"expression": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2116,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "603:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2073,
															"src": "603:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2120,
														"indexExpression": {
															"id": 2118,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "615:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "603:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "626:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "603:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "603:28:7"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "389:64:7",
										"text": " @dev Remove an account's access to this role."
									},
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "474:17:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 2102,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2074,
													"src": "474:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "493:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:36:7"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:0:7"
									},
									"scope": 2152,
									"src": "458:180:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "833:122:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2136,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "851:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "870:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "862:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2137,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "862:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "862:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "851:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "874:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															},
															"value": "Roles: account is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															}
														],
														"id": 2135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "843:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "843:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "843:68:7"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 2145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "928:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2073,
														"src": "928:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2148,
													"indexExpression": {
														"id": 2147,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "940:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "928:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2134,
												"id": 2149,
												"nodeType": "Return",
												"src": "921:27:7"
											}
										]
									},
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "644:78:7",
										"text": " @dev Check if an account has this role.\n @return bool"
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "740:17:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 2127,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2074,
													"src": "740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$2074_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "759:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:36:7"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "823:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:6:7"
									},
									"scope": 2152,
									"src": "727:228:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2153,
							"src": "57:900:7"
						}
					],
					"src": "32:925:7"
				},
				"id": 7
			},
			"CoreContracts/kalyswap-periphery/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "CoreContracts/kalyswap-periphery/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2227
						]
					},
					"id": 2228,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2154,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2227,
							"linearizedBaseContracts": [
								2227
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2175,
										"nodeType": "Block",
										"src": "222:66:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2164,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "241:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2165,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2156,
																				"src": "245:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2166,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2158,
																				"src": "249:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "245:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "241:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "240:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2170,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "255:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "240:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "258:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "232:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "232:49:8"
											}
										]
									},
									"id": 2176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "175:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "175:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "183:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "183:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:16:8"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "214:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "214:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:8:8"
									},
									"scope": 2227,
									"src": "162:126:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "354:67:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2183,
																			"src": "373:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2187,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2178,
																				"src": "377:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2188,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2180,
																				"src": "381:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "377:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "373:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "372:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2192,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2178,
																"src": "387:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "372:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "390:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "364:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "364:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "364:50:8"
											}
										]
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "307:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "315:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:16:8"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "346:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:8:8"
									},
									"scope": 2227,
									"src": "294:127:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "487:80:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2208,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "505:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "510:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "505:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2211,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2205,
																					"src": "516:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2212,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2200,
																						"src": "520:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2213,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2202,
																						"src": "524:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "520:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "516:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2216,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "515:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2217,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2202,
																		"src": "529:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "515:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2219,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2200,
																	"src": "534:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "515:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "505:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "537:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "497:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "497:63:8"
											}
										]
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "440:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "440:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "448:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "448:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:16:8"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "479:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:8:8"
									},
									"scope": 2227,
									"src": "427:140:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2228,
							"src": "139:430:8"
						}
					],
					"src": "0:570:8"
				},
				"id": 8
			}
		}
	}
}